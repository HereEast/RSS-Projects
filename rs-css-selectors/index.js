(()=>{"use strict";var n={559:(n,e,t)=>{t.d(e,{Z:()=>a});var A=t(15),i=t.n(A),r=t(645),o=t.n(r)()(i());o.push([n.id,'/* LINKS */\n\na {\n  display: inline-block;\n  position: relative;\n}\n\na::before {\n  content: "";\n  position: absolute;\n  width: 100%;\n  height: 2px;\n  background-color: var(--red);\n  left: 0;\n  bottom: 0;\n  z-index: -10;\n\n  transition: all 0.2s ease-in-out;\n}\n\na:hover::before {\n  left: 0;\n  height: 90%;\n}\n\n/* BUTTONS */\n\nbutton {\n  outline: none;\n  border-radius: 0;\n}\n\n.button {\n  height: 20px;\n  padding: 0 10px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n\n  background-color: var(--button--grey);\n  border: 1px solid var(--black);\n\n  font-family: "JetBrains Mono", monospace;\n  font-size: 12px;\n  color: var(--black);\n  text-transform: uppercase;\n  cursor: pointer;\n\n  transition: all 0.3s ease-in-out;\n}\n\n.button:hover {\n  padding: 0 20px;\n}\n\n.button--check:hover {\n  background-color: var(--green);\n}\n\n.button--hint:hover {\n  background-color: var(--yellow);\n}\n\n.button--reset:hover {\n  background-color: var(--green);\n}\n\n.header .button--levels:hover {\n  background-color: var(--purple);\n}\n\n.levels__button {\n  width: 30px;\n}\n\n.levels__button:first-child {\n  border-right: none;\n}\n\n.button--prev:hover,\n.button--next:hover {\n  background-color: var(--purple);\n}\n\n.button--hide:hover {\n  background-color: var(--red);\n  border-right: 1px solid (--border);\n}',"",{version:3,sources:["webpack://./src/styles/buttons.css"],names:[],mappings:"AAAA,UAAU;;AAEV;EACE,qBAAqB;EACrB,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,WAAW;EACX,WAAW;EACX,4BAA4B;EAC5B,OAAO;EACP,SAAS;EACT,YAAY;;EAEZ,gCAAgC;AAClC;;AAEA;EACE,OAAO;EACP,WAAW;AACb;;AAEA,YAAY;;AAEZ;EACE,aAAa;EACb,gBAAgB;AAClB;;AAEA;EACE,YAAY;EACZ,eAAe;;EAEf,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,cAAc;;EAEd,qCAAqC;EACrC,8BAA8B;;EAE9B,wCAAwC;EACxC,eAAe;EACf,mBAAmB;EACnB,yBAAyB;EACzB,eAAe;;EAEf,gCAAgC;AAClC;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,+BAA+B;AACjC;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,+BAA+B;AACjC;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,kBAAkB;AACpB;;AAEA;;EAEE,+BAA+B;AACjC;;AAEA;EACE,4BAA4B;EAC5B,kCAAkC;AACpC",sourcesContent:['/* LINKS */\n\na {\n  display: inline-block;\n  position: relative;\n}\n\na::before {\n  content: "";\n  position: absolute;\n  width: 100%;\n  height: 2px;\n  background-color: var(--red);\n  left: 0;\n  bottom: 0;\n  z-index: -10;\n\n  transition: all 0.2s ease-in-out;\n}\n\na:hover::before {\n  left: 0;\n  height: 90%;\n}\n\n/* BUTTONS */\n\nbutton {\n  outline: none;\n  border-radius: 0;\n}\n\n.button {\n  height: 20px;\n  padding: 0 10px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n\n  background-color: var(--button--grey);\n  border: 1px solid var(--black);\n\n  font-family: "JetBrains Mono", monospace;\n  font-size: 12px;\n  color: var(--black);\n  text-transform: uppercase;\n  cursor: pointer;\n\n  transition: all 0.3s ease-in-out;\n}\n\n.button:hover {\n  padding: 0 20px;\n}\n\n.button--check:hover {\n  background-color: var(--green);\n}\n\n.button--hint:hover {\n  background-color: var(--yellow);\n}\n\n.button--reset:hover {\n  background-color: var(--green);\n}\n\n.header .button--levels:hover {\n  background-color: var(--purple);\n}\n\n.levels__button {\n  width: 30px;\n}\n\n.levels__button:first-child {\n  border-right: none;\n}\n\n.button--prev:hover,\n.button--next:hover {\n  background-color: var(--purple);\n}\n\n.button--hide:hover {\n  background-color: var(--red);\n  border-right: 1px solid (--border);\n}'],sourceRoot:""}]);const a=o},410:(n,e,t)=>{t.d(e,{Z:()=>a});var A=t(15),i=t.n(A),r=t(645),o=t.n(r)()(i());o.push([n.id,".block__editors {\n  width: 100%;\n  max-height: 400px;\n  display: flex;\n}\n\n.editor {\n  width: 50%;\n  display: flex;\n  flex-direction: column;\n\n  border: 1px solid var(--border);\n}\n\n.editor__header {\n  width: 100%;\n  height: 40px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-shrink: 0;\n  padding: 0 15px;\n\n  border-bottom: 1px solid var(--border);\n}\n\n.editor__title {\n  opacity: 0.9;\n}\n\n.editor__file {\n  opacity: 0.5;\n}\n\n.editor__body {\n  width: 100%;\n  display: flex;\n  align-items: flex-start;\n\n  background-color: var(--white);\n  overflow-y: scroll;\n}\n\n.body__panel--lines {\n  width: 40px;\n  padding: 10px 10px;\n\n  display: flex;\n  flex-direction: column;\n  background-color: var(--back--grey);\n}\n\n.body__panel--lines span {\n  text-align: right;\n  color: var(--text--grey);\n}\n\n.body__panel--content {\n  width: 100%;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n}\n\n/* CSS, HTML */\n\n.editor--css {\n  border-right: none;\n}\n\n.editor--html .body__panel--lines {\n  background-color: transparent;\n  border-right: 1px solid var(--border);\n}\n\n.editor--html .editor__body {\n  background-color: var(--back);\n}\n\n/**/\n\n@media all and (max-width: 750px) {\n  .block__editors {\n    flex-direction: column;\n    gap: 20px;\n    max-height: initial;\n  }\n\n  .editor {\n    width: 100%;\n    max-height: 320px;\n    height: 100%;\n  }\n\n  .editor__body {\n    overflow-y: hidden;\n  }\n\n  .editor--css {\n    border-right: 1px solid var(--border);\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/editors.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,iBAAiB;EACjB,aAAa;AACf;;AAEA;EACE,UAAU;EACV,aAAa;EACb,sBAAsB;;EAEtB,+BAA+B;AACjC;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,cAAc;EACd,eAAe;;EAEf,sCAAsC;AACxC;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,WAAW;EACX,aAAa;EACb,uBAAuB;;EAEvB,8BAA8B;EAC9B,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,kBAAkB;;EAElB,aAAa;EACb,sBAAsB;EACtB,mCAAmC;AACrC;;AAEA;EACE,iBAAiB;EACjB,wBAAwB;AAC1B;;AAEA;EACE,WAAW;EACX,aAAa;EACb,aAAa;EACb,sBAAsB;AACxB;;AAEA,cAAc;;AAEd;EACE,kBAAkB;AACpB;;AAEA;EACE,6BAA6B;EAC7B,qCAAqC;AACvC;;AAEA;EACE,6BAA6B;AAC/B;;AAEA,GAAG;;AAEH;EACE;IACE,sBAAsB;IACtB,SAAS;IACT,mBAAmB;EACrB;;EAEA;IACE,WAAW;IACX,iBAAiB;IACjB,YAAY;EACd;;EAEA;IACE,kBAAkB;EACpB;;EAEA;IACE,qCAAqC;EACvC;AACF",sourcesContent:[".block__editors {\n  width: 100%;\n  max-height: 400px;\n  display: flex;\n}\n\n.editor {\n  width: 50%;\n  display: flex;\n  flex-direction: column;\n\n  border: 1px solid var(--border);\n}\n\n.editor__header {\n  width: 100%;\n  height: 40px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-shrink: 0;\n  padding: 0 15px;\n\n  border-bottom: 1px solid var(--border);\n}\n\n.editor__title {\n  opacity: 0.9;\n}\n\n.editor__file {\n  opacity: 0.5;\n}\n\n.editor__body {\n  width: 100%;\n  display: flex;\n  align-items: flex-start;\n\n  background-color: var(--white);\n  overflow-y: scroll;\n}\n\n.body__panel--lines {\n  width: 40px;\n  padding: 10px 10px;\n\n  display: flex;\n  flex-direction: column;\n  background-color: var(--back--grey);\n}\n\n.body__panel--lines span {\n  text-align: right;\n  color: var(--text--grey);\n}\n\n.body__panel--content {\n  width: 100%;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n}\n\n/* CSS, HTML */\n\n.editor--css {\n  border-right: none;\n}\n\n.editor--html .body__panel--lines {\n  background-color: transparent;\n  border-right: 1px solid var(--border);\n}\n\n.editor--html .editor__body {\n  background-color: var(--back);\n}\n\n/**/\n\n@media all and (max-width: 750px) {\n  .block__editors {\n    flex-direction: column;\n    gap: 20px;\n    max-height: initial;\n  }\n\n  .editor {\n    width: 100%;\n    max-height: 320px;\n    height: 100%;\n  }\n\n  .editor__body {\n    overflow-y: hidden;\n  }\n\n  .editor--css {\n    border-right: 1px solid var(--border);\n  }\n}\n"],sourceRoot:""}]);const a=o},348:(n,e,t)=>{t.d(e,{Z:()=>a});var A=t(15),i=t.n(A),r=t(645),o=t.n(r)()(i());o.push([n.id,".footer {\n  width: 100%;\n}\n\n.footer__container {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 20px;\n\n  border: 1px solid var(--border);\n}\n\n.footer a {\n  color: var(--white);\n  text-decoration: none;\n}\n","",{version:3,sources:["webpack://./src/styles/footer.css"],names:[],mappings:"AAAA;EACE,WAAW;AACb;;AAEA;EACE,WAAW;EACX,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,kBAAkB;;EAElB,+BAA+B;AACjC;;AAEA;EACE,mBAAmB;EACnB,qBAAqB;AACvB",sourcesContent:[".footer {\n  width: 100%;\n}\n\n.footer__container {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 20px;\n\n  border: 1px solid var(--border);\n}\n\n.footer a {\n  color: var(--white);\n  text-decoration: none;\n}\n"],sourceRoot:""}]);const a=o},984:(n,e,t)=>{t.d(e,{Z:()=>a});var A=t(15),i=t.n(A),r=t(645),o=t.n(r)()(i());o.push([n.id,".block__task {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 20px;\n}\n\n.task__text {\n  font-weight: 400;\n  text-align: center;\n}\n\n.task__graphics {\n  width: 100%;\n  min-height: 160px;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n\n  background-color: var(--black);\n}\n\n.graphics__container {\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n\n/**/\n\n@media all and (max-width: 750px) {\n  .block__task {\n    height: auto;\n  }\n\n  .task__graphics {\n    height: 200px;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/graphics.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,YAAY;EACZ,aAAa;EACb,sBAAsB;EACtB,2BAA2B;EAC3B,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,iBAAiB;EACjB,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,uBAAuB;;EAEvB,8BAA8B;AAChC;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;AACd;;AAEA,GAAG;;AAEH;EACE;IACE,YAAY;EACd;;EAEA;IACE,aAAa;EACf;AACF",sourcesContent:[".block__task {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 20px;\n}\n\n.task__text {\n  font-weight: 400;\n  text-align: center;\n}\n\n.task__graphics {\n  width: 100%;\n  min-height: 160px;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n\n  background-color: var(--black);\n}\n\n.graphics__container {\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n\n/**/\n\n@media all and (max-width: 750px) {\n  .block__task {\n    height: auto;\n  }\n\n  .task__graphics {\n    height: 200px;\n  }\n}\n"],sourceRoot:""}]);const a=o},497:(n,e,t)=>{t.d(e,{Z:()=>a});var A=t(15),i=t.n(A),r=t(645),o=t.n(r)()(i());o.push([n.id,".header {\n  width: 100%;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.header__title {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\nh1 {\n  font-weight: 500;\n}\n\n.header__buttons {\n  display: flex;\n  gap: 5px;\n}\n\n.header__levels {\n  display: none;\n}\n\n.header__levels .level__status {\n  display: block;\n  margin-right: 5px;\n  margin-top: 2px;\n}\n\n.button--levels {\n  margin-left: 15px;\n}\n\n/**/\n\n@media all and (max-width: 980px) {\n  .header {\n    position: fixed;\n    width: 100%;\n    left: 0;\n    top: 0;\n    padding: 20px;\n\n    background-color: var(--back);\n  }\n\n  .header__levels {\n    display: flex;\n  }\n}\n\n/* ICON */\n\n.title__icon {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n}\n\n.title__icon svg {\n  width: 60px;\n  height: 13px;\n}\n\n.header__title .icon path,\n.header__title .icon circle,\n.header__title .icon rect {\n  transition: all 0.2s cubic-bezier(0.5, 1.8, 0.6, 1.5);\n}\n\n.header__title .icon path {\n  transform: translateX(0);\n  transition-delay: 0;\n}\n\n.header__title .icon rect {\n  transform: translateX(0);\n  transition-delay: 0.1s;\n}\n\n.header__title .icon circle {\n  transform: translateX();\n  transition-delay: 0.2s;\n}\n\n.header__title:hover .icon path {\n  transform: translateX(10px);\n  transition-delay: 0;\n}\n\n.header__title:hover .icon rect {\n  transform: translateX(10px);\n  transition-delay: 0.1s;\n}\n\n.header__title:hover .icon circle {\n  transform: translateX(10px);\n  transition-delay: 0.2s;\n}\n","",{version:3,sources:["webpack://./src/styles/header.css"],names:[],mappings:"AAAA;EACE,WAAW;;EAEX,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,QAAQ;AACV;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,QAAQ;AACV;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,cAAc;EACd,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,iBAAiB;AACnB;;AAEA,GAAG;;AAEH;EACE;IACE,eAAe;IACf,WAAW;IACX,OAAO;IACP,MAAM;IACN,aAAa;;IAEb,6BAA6B;EAC/B;;EAEA;IACE,aAAa;EACf;AACF;;AAEA,SAAS;;AAET;EACE,aAAa;EACb,2BAA2B;EAC3B,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;;;EAGE,qDAAqD;AACvD;;AAEA;EACE,wBAAwB;EACxB,mBAAmB;AACrB;;AAEA;EACE,wBAAwB;EACxB,sBAAsB;AACxB;;AAEA;EACE,uBAAuB;EACvB,sBAAsB;AACxB;;AAEA;EACE,2BAA2B;EAC3B,mBAAmB;AACrB;;AAEA;EACE,2BAA2B;EAC3B,sBAAsB;AACxB;;AAEA;EACE,2BAA2B;EAC3B,sBAAsB;AACxB",sourcesContent:[".header {\n  width: 100%;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.header__title {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\nh1 {\n  font-weight: 500;\n}\n\n.header__buttons {\n  display: flex;\n  gap: 5px;\n}\n\n.header__levels {\n  display: none;\n}\n\n.header__levels .level__status {\n  display: block;\n  margin-right: 5px;\n  margin-top: 2px;\n}\n\n.button--levels {\n  margin-left: 15px;\n}\n\n/**/\n\n@media all and (max-width: 980px) {\n  .header {\n    position: fixed;\n    width: 100%;\n    left: 0;\n    top: 0;\n    padding: 20px;\n\n    background-color: var(--back);\n  }\n\n  .header__levels {\n    display: flex;\n  }\n}\n\n/* ICON */\n\n.title__icon {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n}\n\n.title__icon svg {\n  width: 60px;\n  height: 13px;\n}\n\n.header__title .icon path,\n.header__title .icon circle,\n.header__title .icon rect {\n  transition: all 0.2s cubic-bezier(0.5, 1.8, 0.6, 1.5);\n}\n\n.header__title .icon path {\n  transform: translateX(0);\n  transition-delay: 0;\n}\n\n.header__title .icon rect {\n  transform: translateX(0);\n  transition-delay: 0.1s;\n}\n\n.header__title .icon circle {\n  transform: translateX();\n  transition-delay: 0.2s;\n}\n\n.header__title:hover .icon path {\n  transform: translateX(10px);\n  transition-delay: 0;\n}\n\n.header__title:hover .icon rect {\n  transform: translateX(10px);\n  transition-delay: 0.1s;\n}\n\n.header__title:hover .icon circle {\n  transform: translateX(10px);\n  transition-delay: 0.2s;\n}\n"],sourceRoot:""}]);const a=o},771:(n,e,t)=>{t.d(e,{Z:()=>b});var A=t(15),i=t.n(A),r=t(645),o=t.n(r),a=t(772),l=t(179),s=t(559),d=t(497),c=t(756),p=t(348),E=t(410),u=t(984),h=t(675),C=t(100),B=o()(i());B.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&family=JetBrains+Mono:wght@300;400;500;600;700&display=swap);"]),B.i(a.Z),B.i(l.Z),B.i(s.Z),B.i(d.Z),B.i(c.Z),B.i(p.Z),B.i(E.Z),B.i(u.Z),B.i(h.Z),B.i(C.Z),B.push([n.id,"\n","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]);const b=B},675:(n,e,t)=>{t.d(e,{Z:()=>a});var A=t(15),i=t.n(A),r=t(645),o=t.n(r)()(i());o.push([n.id,'/* INPUT */\n\n.input__container {\n  display: flex;\n  gap: 10px;\n}\n\ninput {\n  font-family: "JetBrains Mono", monospace;\n  color: var(--black);\n\n  outline: 0;\n  border: 0;\n  border-radius: 0;\n\n  width: 100%;\n  height: 20px;\n  padding: 0 10px;\n}',"",{version:3,sources:["webpack://./src/styles/input.css"],names:[],mappings:"AAAA,UAAU;;AAEV;EACE,aAAa;EACb,SAAS;AACX;;AAEA;EACE,wCAAwC;EACxC,mBAAmB;;EAEnB,UAAU;EACV,SAAS;EACT,gBAAgB;;EAEhB,WAAW;EACX,YAAY;EACZ,eAAe;AACjB",sourcesContent:['/* INPUT */\n\n.input__container {\n  display: flex;\n  gap: 10px;\n}\n\ninput {\n  font-family: "JetBrains Mono", monospace;\n  color: var(--black);\n\n  outline: 0;\n  border: 0;\n  border-radius: 0;\n\n  width: 100%;\n  height: 20px;\n  padding: 0 10px;\n}'],sourceRoot:""}]);const a=o},100:(n,e,t)=>{t.d(e,{Z:()=>a});var A=t(15),i=t.n(A),r=t(645),o=t.n(r)()(i());o.push([n.id,".levels__header {\n  position: relative;\n  width: 100%;\n  height: 40px;\n  padding: 0 15px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  border-bottom: 1px solid var(--border);\n}\n\n.levels__header .header__container {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.levels__header .header__title {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n}\n\n.levels__header .header__title h3,\n.levels__header .header__title span {\n  font-weight: 400;\n  opacity: 0.9;\n}\n\n.levels__header .header__title h3 {\n  margin-right: 10px;\n}\n\n.levels__header .button__container {\n  position: absolute;\n  left: 0;\n  transform: translateX(-100%);\n  display: none;\n  z-index: -10;\n}\n\n.levels__buttons {\n  display: flex;\n  margin-left: 20px;\n}\n\n.levels__button span {\n  display: block;\n  padding-bottom: 2px;\n  color: var(--black);\n  opacity: 0.9;\n}\n\n/* BODY */\n\n.levels__body {\n  padding: 15px 0;\n}\n\n.levels__container {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.level__item {\n  width: 100%;\n  padding: 4px 15px;\n  display: flex;\n  align-items: center;\n\n  transition: all 0.2s ease-in-out;\n  cursor: pointer;\n}\n\n.level__number {\n  width: 25px;\n}\n\n.level__item span:not(:last-child) {\n  opacity: 0.9;\n}\n\n.level__status {\n  width: 15px;\n  height: 15px;\n  border-radius: 50%;\n  margin-left: auto;\n}\n\n.level--unfinished {\n  background-color: var(--border);\n}\n\n.level__item:hover {\n  background-color: var(--item--back);\n}\n\n.level__item:hover span {\n  opacity: 1;\n}\n\n.levels__body .button__container {\n  width: 100%;\n  padding: 20px;\n\n  display: flex;\n  justify-content: center;\n}\n\n/**/\n\n@media all and (max-width: 980px) {\n  .panel--visible .button__container {\n    display: block;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/levels.css"],names:[],mappings:"AAAA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,eAAe;;EAEf,aAAa;EACb,uBAAuB;EACvB,mBAAmB;;EAEnB,sCAAsC;AACxC;;AAEA;EACE,WAAW;EACX,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,8BAA8B;AAChC;;AAEA;;EAEE,gBAAgB;EAChB,YAAY;AACd;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,OAAO;EACP,4BAA4B;EAC5B,aAAa;EACb,YAAY;AACd;;AAEA;EACE,aAAa;EACb,iBAAiB;AACnB;;AAEA;EACE,cAAc;EACd,mBAAmB;EACnB,mBAAmB;EACnB,YAAY;AACd;;AAEA,SAAS;;AAET;EACE,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,WAAW;EACX,iBAAiB;EACjB,aAAa;EACb,mBAAmB;;EAEnB,gCAAgC;EAChC,eAAe;AACjB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,iBAAiB;AACnB;;AAEA;EACE,+BAA+B;AACjC;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,WAAW;EACX,aAAa;;EAEb,aAAa;EACb,uBAAuB;AACzB;;AAEA,GAAG;;AAEH;EACE;IACE,cAAc;EAChB;AACF",sourcesContent:[".levels__header {\n  position: relative;\n  width: 100%;\n  height: 40px;\n  padding: 0 15px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  border-bottom: 1px solid var(--border);\n}\n\n.levels__header .header__container {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.levels__header .header__title {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n}\n\n.levels__header .header__title h3,\n.levels__header .header__title span {\n  font-weight: 400;\n  opacity: 0.9;\n}\n\n.levels__header .header__title h3 {\n  margin-right: 10px;\n}\n\n.levels__header .button__container {\n  position: absolute;\n  left: 0;\n  transform: translateX(-100%);\n  display: none;\n  z-index: -10;\n}\n\n.levels__buttons {\n  display: flex;\n  margin-left: 20px;\n}\n\n.levels__button span {\n  display: block;\n  padding-bottom: 2px;\n  color: var(--black);\n  opacity: 0.9;\n}\n\n/* BODY */\n\n.levels__body {\n  padding: 15px 0;\n}\n\n.levels__container {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.level__item {\n  width: 100%;\n  padding: 4px 15px;\n  display: flex;\n  align-items: center;\n\n  transition: all 0.2s ease-in-out;\n  cursor: pointer;\n}\n\n.level__number {\n  width: 25px;\n}\n\n.level__item span:not(:last-child) {\n  opacity: 0.9;\n}\n\n.level__status {\n  width: 15px;\n  height: 15px;\n  border-radius: 50%;\n  margin-left: auto;\n}\n\n.level--unfinished {\n  background-color: var(--border);\n}\n\n.level__item:hover {\n  background-color: var(--item--back);\n}\n\n.level__item:hover span {\n  opacity: 1;\n}\n\n.levels__body .button__container {\n  width: 100%;\n  padding: 20px;\n\n  display: flex;\n  justify-content: center;\n}\n\n/**/\n\n@media all and (max-width: 980px) {\n  .panel--visible .button__container {\n    display: block;\n  }\n}\n"],sourceRoot:""}]);const a=o},756:(n,e,t)=>{t.d(e,{Z:()=>a});var A=t(15),i=t.n(A),r=t(645),o=t.n(r)()(i());o.push([n.id,".main {\n  position: relative;\n  width: 100%;\n  display: flex;\n  flex-grow: 1;\n  gap: 20px;\n}\n\n.section__game {\n  max-width: 1180px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.section__levels {\n  min-width: 240px;\n  flex-grow: 1;\n  border: 1px solid var(--border);\n  background-color: var(--back);\n}\n\n.game {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 20px;\n}\n\n/**/\n\n@media all and (max-width: 980px) {\n  .section__game {\n    gap: 40px;\n  }\n\n  .game {\n    margin-top: 40px;\n  }\n\n  .section__levels {\n    position: fixed;\n    max-width: 260px;\n    width: 100%;\n    height: calc(100vh - 40px);\n    top: 20px;\n    right: 20px;\n    z-index: 100;\n\n    transform: translateX(150%);\n    transition: transform 0.3s ease-in-out;\n  }\n\n  .panel--visible {\n    transform: translateX(0);\n  }\n}\n\n@media all and (max-width: 750px) {\n  .game {\n    justify-content: flex-start;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/main.css"],names:[],mappings:"AAAA;EACE,kBAAkB;EAClB,WAAW;EACX,aAAa;EACb,YAAY;EACZ,SAAS;AACX;;AAEA;EACE,iBAAiB;EACjB,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;;AAEA;EACE,gBAAgB;EAChB,YAAY;EACZ,+BAA+B;EAC/B,6BAA6B;AAC/B;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,aAAa;EACb,sBAAsB;EACtB,8BAA8B;EAC9B,SAAS;AACX;;AAEA,GAAG;;AAEH;EACE;IACE,SAAS;EACX;;EAEA;IACE,gBAAgB;EAClB;;EAEA;IACE,eAAe;IACf,gBAAgB;IAChB,WAAW;IACX,0BAA0B;IAC1B,SAAS;IACT,WAAW;IACX,YAAY;;IAEZ,2BAA2B;IAC3B,sCAAsC;EACxC;;EAEA;IACE,wBAAwB;EAC1B;AACF;;AAEA;EACE;IACE,2BAA2B;EAC7B;AACF",sourcesContent:[".main {\n  position: relative;\n  width: 100%;\n  display: flex;\n  flex-grow: 1;\n  gap: 20px;\n}\n\n.section__game {\n  max-width: 1180px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.section__levels {\n  min-width: 240px;\n  flex-grow: 1;\n  border: 1px solid var(--border);\n  background-color: var(--back);\n}\n\n.game {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 20px;\n}\n\n/**/\n\n@media all and (max-width: 980px) {\n  .section__game {\n    gap: 40px;\n  }\n\n  .game {\n    margin-top: 40px;\n  }\n\n  .section__levels {\n    position: fixed;\n    max-width: 260px;\n    width: 100%;\n    height: calc(100vh - 40px);\n    top: 20px;\n    right: 20px;\n    z-index: 100;\n\n    transform: translateX(150%);\n    transition: transform 0.3s ease-in-out;\n  }\n\n  .panel--visible {\n    transform: translateX(0);\n  }\n}\n\n@media all and (max-width: 750px) {\n  .game {\n    justify-content: flex-start;\n  }\n}\n"],sourceRoot:""}]);const a=o},772:(n,e,t)=>{t.d(e,{Z:()=>a});var A=t(15),i=t.n(A),r=t(645),o=t.n(r)()(i());o.push([n.id,'* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  font-size: 14px;\n  color: var(--white);\n}\n\nbody {\n  width: 100%;\n  min-height: 100vh;\n  height: 100%;\n  background: var(--back);\n  font-family: "JetBrains Mono", monospace;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  gap: 20px;\n  padding: 20px;\n\n  overflow: hidden;\n}\n\n.content-width {\n  /* max-width: 1024px; */\n  width: 100%;\n}\n\n/**/\n\n@media all and (max-width: 980px) {\n  body {\n    overflow: scroll;\n    overflow-x: hidden;\n  }\n}\n\n@media all and (max-width: 750px) {\n  body {\n    gap: 60px;\n  }\n}\n\n\n',"",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAAA;EACE,UAAU;EACV,SAAS;EACT,sBAAsB;EACtB,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,iBAAiB;EACjB,YAAY;EACZ,uBAAuB;EACvB,wCAAwC;;EAExC,aAAa;EACb,sBAAsB;EACtB,8BAA8B;EAC9B,mBAAmB;EACnB,SAAS;EACT,aAAa;;EAEb,gBAAgB;AAClB;;AAEA;EACE,uBAAuB;EACvB,WAAW;AACb;;AAEA,GAAG;;AAEH;EACE;IACE,gBAAgB;IAChB,kBAAkB;EACpB;AACF;;AAEA;EACE;IACE,SAAS;EACX;AACF",sourcesContent:['* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  font-size: 14px;\n  color: var(--white);\n}\n\nbody {\n  width: 100%;\n  min-height: 100vh;\n  height: 100%;\n  background: var(--back);\n  font-family: "JetBrains Mono", monospace;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  gap: 20px;\n  padding: 20px;\n\n  overflow: hidden;\n}\n\n.content-width {\n  /* max-width: 1024px; */\n  width: 100%;\n}\n\n/**/\n\n@media all and (max-width: 980px) {\n  body {\n    overflow: scroll;\n    overflow-x: hidden;\n  }\n}\n\n@media all and (max-width: 750px) {\n  body {\n    gap: 60px;\n  }\n}\n\n\n'],sourceRoot:""}]);const a=o},179:(n,e,t)=>{t.d(e,{Z:()=>a});var A=t(15),i=t.n(A),r=t(645),o=t.n(r)()(i());o.push([n.id,":root {\n  --black: #1C1C1C;\n  --white: whitesmoke;\n  --red: orangered;\n  --orange: rgb(255, 106, 0);\n  --green: #7EC870;\n  --yellow: #ffe208;\n  --purple: #7c69fa;\n  --blue: rgb(130, 202, 247);\n  --back: #313131;\n  --border: #5d5d5d;\n  --item--back: #3d3d3d;\n  --button--grey: #f5f5f5;\n  --back--grey: #DDDDDD;\n  --text--grey: #868686;\n}","",{version:3,sources:["webpack://./src/styles/variables.css"],names:[],mappings:"AAAA;EACE,gBAAgB;EAChB,mBAAmB;EACnB,gBAAgB;EAChB,0BAA0B;EAC1B,gBAAgB;EAChB,iBAAiB;EACjB,iBAAiB;EACjB,0BAA0B;EAC1B,eAAe;EACf,iBAAiB;EACjB,qBAAqB;EACrB,uBAAuB;EACvB,qBAAqB;EACrB,qBAAqB;AACvB",sourcesContent:[":root {\n  --black: #1C1C1C;\n  --white: whitesmoke;\n  --red: orangered;\n  --orange: rgb(255, 106, 0);\n  --green: #7EC870;\n  --yellow: #ffe208;\n  --purple: #7c69fa;\n  --blue: rgb(130, 202, 247);\n  --back: #313131;\n  --border: #5d5d5d;\n  --item--back: #3d3d3d;\n  --button--grey: #f5f5f5;\n  --back--grey: #DDDDDD;\n  --text--grey: #868686;\n}"],sourceRoot:""}]);const a=o},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t=n(e);return e[2]?"@media ".concat(e[2]," {").concat(t,"}"):t})).join("")},e.i=function(n,t,A){"string"==typeof n&&(n=[[null,n,""]]);var i={};if(A)for(var r=0;r<this.length;r++){var o=this[r][0];null!=o&&(i[o]=!0)}for(var a=0;a<n.length;a++){var l=[].concat(n[a]);A&&i[l[0]]||(t&&(l[2]?l[2]="".concat(t," and ").concat(l[2]):l[2]=t),e.push(l))}},e}},15:n=>{function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,A=new Array(e);t<e;t++)A[t]=n[t];return A}n.exports=function(n){var t,A,i=(A=4,function(n){if(Array.isArray(n))return n}(t=n)||function(n,e){var t=n&&("undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"]);if(null!=t){var A,i,r=[],o=!0,a=!1;try{for(t=t.call(n);!(o=(A=t.next()).done)&&(r.push(A.value),!e||r.length!==e);o=!0);}catch(n){a=!0,i=n}finally{try{o||null==t.return||t.return()}finally{if(a)throw i}}return r}}(t,A)||function(n,t){if(n){if("string"==typeof n)return e(n,t);var A=Object.prototype.toString.call(n).slice(8,-1);return"Object"===A&&n.constructor&&(A=n.constructor.name),"Map"===A||"Set"===A?Array.from(n):"Arguments"===A||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(A)?e(n,t):void 0}}(t,A)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),r=i[1],o=i[3];if(!o)return r;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),s="/*# ".concat(l," */"),d=o.sources.map((function(n){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(n," */")}));return[r].concat(d).concat([s]).join("\n")}return[r].join("\n")}},643:(n,e,t)=>{t.r(e),t.d(e,{default:()=>o});var A=t(379),i=t.n(A),r=t(771);i()(r.Z,{insert:"head",singleton:!1});const o=r.Z.locals||{}},379:(n,e,t)=>{var A,i=function(){var n={};return function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}n[e]=t}return n[e]}}(),r=[];function o(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function a(n,e){for(var t={},A=[],i=0;i<n.length;i++){var a=n[i],l=e.base?a[0]+e.base:a[0],s=t[l]||0,d="".concat(l," ").concat(s);t[l]=s+1;var c=o(d),p={css:a[1],media:a[2],sourceMap:a[3]};-1!==c?(r[c].references++,r[c].updater(p)):r.push({identifier:d,updater:h(p,e),references:1}),A.push(d)}return A}function l(n){var e=document.createElement("style"),A=n.attributes||{};if(void 0===A.nonce){var r=t.nc;r&&(A.nonce=r)}if(Object.keys(A).forEach((function(n){e.setAttribute(n,A[n])})),"function"==typeof n.insert)n.insert(e);else{var o=i(n.insert||"head");if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}return e}var s,d=(s=[],function(n,e){return s[n]=e,s.filter(Boolean).join("\n")});function c(n,e,t,A){var i=t?"":A.media?"@media ".concat(A.media," {").concat(A.css,"}"):A.css;if(n.styleSheet)n.styleSheet.cssText=d(e,i);else{var r=document.createTextNode(i),o=n.childNodes;o[e]&&n.removeChild(o[e]),o.length?n.insertBefore(r,o[e]):n.appendChild(r)}}function p(n,e,t){var A=t.css,i=t.media,r=t.sourceMap;if(i?n.setAttribute("media",i):n.removeAttribute("media"),r&&"undefined"!=typeof btoa&&(A+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleSheet)n.styleSheet.cssText=A;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(A))}}var E=null,u=0;function h(n,e){var t,A,i;if(e.singleton){var r=u++;t=E||(E=l(e)),A=c.bind(null,t,r,!1),i=c.bind(null,t,r,!0)}else t=l(e),A=p.bind(null,t,e),i=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)};return A(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;A(n=e)}else i()}}n.exports=function(n,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===A&&(A=Boolean(window&&document&&document.all&&!window.atob)),A));var t=a(n=n||[],e);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var A=0;A<t.length;A++){var i=o(t[A]);r[i].references--}for(var l=a(n,e),s=0;s<t.length;s++){var d=o(t[s]);0===r[d].references&&(r[d].updater(),r.splice(d,1))}t=l}}}},77:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.renderApp=void 0;const A=t(408),i=t(202);e.renderApp=function(){const n=(0,i.createMain)(),e=(0,A.createFooter)();document.body.append(n),document.body.append(e)}},252:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createEditor=void 0;const A=t(564);e.createEditor=function(n){const e=(0,A.createElement)("div",n.classNames),t=`\n    <div class="editor__header">\n      <span class="editor__title">${n.title}</span>\n      <span class="editor__file">${n.fileName}</span>\n    </div>\n  `,i=`\n    <div class="editor__body">\n      <div class="body__panel--lines">${(()=>{let n="";for(let e=1;e<=25;e++)n+=`<span>${e}</span>`;return n})()}</div>\n      <div class="body__panel--content">\n        ${n.editorContent}\n      </div>\n    </div>\n  `;return e.insertAdjacentHTML("beforeend",t),e.insertAdjacentHTML("beforeend",i),e}},132:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createEditorsBlock=void 0;const A=t(564),i=t(252);e.createEditorsBlock=function(){const n=(0,A.createElement)("div",["game__block","block__editors"]),e=(0,i.createEditor)({classNames:["editor","editor--css"],title:"CSS Editor",fileName:"style.css",editorContent:'\n    <div class="input__container">\n      <input type="text" placeholder="Type in a CSS Selector..."></input>\n      <button class="button button--check">Enter</button>\n    </div>\n  '}),t=(0,i.createEditor)({classNames:["editor","editor--html"],title:"HTML View",fileName:"playground.html",editorContent:"<div class='content__container'></div>"});return n.append(e,t),n}},408:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createFooter=void 0;const A=t(564);e.createFooter=function(){const n=(0,A.createElement)("footer",["footer","content-width"]);return n.insertAdjacentHTML("afterbegin",'\n    <div class="footer__container">\n      <span>2023, <a href="https://rs.school/" target="_blank">RS School</a> — RS CSS Selectors</span>\n      <a href="https://github.com/HereEast" target="_blank">Here East</a>\n    </div>\n  '),n}},914:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createGameSection=void 0;const A=t(564),i=t(199),r=t(998),o=t(132);e.createGameSection=function(){const n=(0,A.createElement)("section",["section__game"]),e=(0,i.createHeader)(),t=(0,A.createElement)("section",["game"]),a=(0,r.createTaskBlock)(),l=(0,o.createEditorsBlock)();return t.append(a,l),n.append(e,t),n}},199:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createHeader=void 0;const A=t(564);e.createHeader=function(){const n=(0,A.createElement)("header",["header"]);return n.insertAdjacentHTML("afterbegin",'\n    <div class="header__title">\n      <h1 class=\'title__text\'>CSS Playground</h1>\n      <div class="title__icon">\n        \n    <svg class="icon" xmlns="http://www.w3.org/2000/svg">\n      <path d="M7.05037 0L2.5332e-07 12H7.05037L14 11.8286L7.05037 0Z" fill="#6BCB5B"/>\n      <circle cx="36.5" cy="6.5" r="6.5" fill="#FFE208"/>\n      <rect x="16" width="12" height="12" fill="#725CFA"/>\n    </svg>\n  \n      </div>\n    </div>  \n  '),n.insertAdjacentHTML("beforeend","\n    <div class=\"header__buttons\">\n      \n    <div class=\"header__levels\">\n      <span class=\"level__status level--unfinished\"></span><span>1/10</span>\n      <button class='button button--levels'>=</button>\n    </div>\n  \n      <button class='button button--hint'>Hint</button>\n      <button class='button button--reset'>Reset</button>\n    </div>\n  "),n}},612:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createLevelsBody=void 0;const A=t(564),i=t(131);e.createLevelsBody=function(){const n=(0,A.createElement)("div",["levels__body"]),e=function(){const n=(0,A.createElement)("div",["levels__container"]);return i.levelsData.forEach((e=>{const t=(0,A.createElement)("div",["level__item"]);t.innerHTML=`\n      <span class="level__number">${e.id}</span>\n      <span class="level__title">${e.title}</span>\n      <span class="level__status level--unfinished"></span>\n    `,n.append(t)})),n}();return n.append(e),n}},619:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createLevelsHeader=void 0;const A=t(564);e.createLevelsHeader=function(){const n=(0,A.createElement)("div",["levels__header"]);return n.insertAdjacentHTML("afterbegin",'\n    <div class="header__container">\n      <div class="header__title"">\n        <h3>Level</h3>\n        <span>1/10</span>\n      </div>\n      <div class="levels__buttons">\n        \n    <button class=\'button levels__button button--prev\'>\n      <span>&lt;</span>\n    </button>\n    \n        \n    <button class=\'button levels__button button--next\'>\n      <span>&gt;</span>\n    </button>\n    \n      </div>\n    </div>\n  '),n.insertAdjacentHTML("afterbegin",'\n    <div class="button__container">\n      <button class="button button--hide">Hide</button>\n    </div>\n  '),n}},861:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createLevelsSection=void 0;const A=t(564),i=t(619),r=t(612);e.createLevelsSection=function(){const n=(0,A.createElement)("section",["section__levels"]),e=(0,i.createLevelsHeader)(),t=(0,r.createLevelsBody)();return n.append(e,t),n}},202:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createMain=void 0;const A=t(564),i=t(914),r=t(861);e.createMain=function(){const n=(0,A.createElement)("main",["main","content-width"]),e=(0,i.createGameSection)(),t=(0,r.createLevelsSection)();return n.append(e,t),n}},998:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createTaskBlock=void 0;const A=t(564);e.createTaskBlock=function(){const n=(0,A.createElement)("div",["game__block","block__task"]);return n.insertAdjacentHTML("afterbegin",'\n    <h2 class="task__text">Here goes the task...</h2>\n    <div class="task__graphics">\n      <div class="graphics__container"></div>\n    </div>\n  '),n}},131:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.levelsData=void 0,e.levelsData=[{id:"1",title:"A",answer:"triangle"},{id:"2",title:"A B",answer:"triangle"},{id:"3",title:"#id",answer:"triangle"},{id:"4",title:".classname",answer:"triangle"},{id:"5",title:"A.classname",answer:"triangle"},{id:"6",title:"*",answer:"triangle"},{id:"7",title:"[attribute]",answer:"triangle"},{id:"8",title:":n-child(A)",answer:"triangle"},{id:"9",title:":empty",answer:"triangle"},{id:"10",title:":not(X)",answer:"triangle"}]},652:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.initListeners=void 0;const A=t(230);e.initListeners=function(){const n=document.querySelector(".button--levels"),e=document.querySelector(".button--hide");if(!n)throw Error(".button--levels is not found...");if(!e)throw Error(".button--hide is not found...");n.addEventListener("click",A.showPanel),e.addEventListener("click",A.hidePanel)}},230:(n,e)=>{function t(){const n=document.querySelector(".section__levels");if(!(n&&n instanceof HTMLElement))throw Error(".section__levels is not found...");return n}Object.defineProperty(e,"__esModule",{value:!0}),e.hidePanel=e.showPanel=void 0,e.showPanel=function(n){if(window.innerWidth>980)return;const e=n.target;if(console.log(e),!(e&&e instanceof HTMLButtonElement))return;if(!e.closest(".button--levels"))return;const A=t();null==A||A.classList.add("panel--visible")},e.hidePanel=function(n){if(window.innerWidth>980)return;const e=n.target;if(!(e&&e instanceof HTMLElement))return;if(!e.closest(".button--hide"))return;const A=t();null==A||A.classList.remove("panel--visible")}},564:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createElement=void 0,e.createElement=function(n,e,t){const A=document.createElement(n);return A.classList.add(...e),t&&(A.textContent=t),A}}},e={};function t(A){var i=e[A];if(void 0!==i)return i.exports;var r=e[A]={id:A,exports:{}};return n[A](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var A in e)t.o(e,A)&&!t.o(n,A)&&Object.defineProperty(n,A,{enumerable:!0,get:e[A]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.nc=void 0,(()=>{console.log("✅ CSS Playground"),t(643);const n=t(77),e=t(652);(0,n.renderApp)(),window.addEventListener("DOMContentLoaded",(()=>{console.log("✅ DOM Rendered"),(0,e.initListeners)()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFPaUcsZUFBZXpJLEVBQVN3QixPQUFPNE0sWUFBYSxDQUFFbE0sTUFBTyxXQUU3RE0sT0FBT2lHLGVBQWV6SSxFQUFTLGFBQWMsQ0FBRWtDLE9BQU8sR0FBTyxFQ0w5RG1MLEVBQW9CZ0IsUUFBS2IsRSxNQ0V6QmQsUUFBUUMsSUFBSSxvQkFDWixFQUFRLEtBQ1IsTUFBTTJCLEVBQVEsRUFBUSxJQUNoQkMsRUFBYyxFQUFRLE1BQzVCLEVBQUlELEVBQU01RixhQUNWbkUsT0FBTzZILGlCQUFpQixvQkFBb0IsS0FDeENNLFFBQVFDLElBQUksbUJBQ1osRUFBSTRCLEVBQVl2QyxnQkFBZ0IsRyIsInNvdXJjZXMiOlsid2VicGFjazovL05ld3NKUy8uL3NyYy9zdHlsZXMvYnV0dG9ucy5jc3MiLCJ3ZWJwYWNrOi8vTmV3c0pTLy4vc3JjL3N0eWxlcy9lZGl0b3JzLmNzcyIsIndlYnBhY2s6Ly9OZXdzSlMvLi9zcmMvc3R5bGVzL2Zvb3Rlci5jc3MiLCJ3ZWJwYWNrOi8vTmV3c0pTLy4vc3JjL3N0eWxlcy9ncmFwaGljcy5jc3MiLCJ3ZWJwYWNrOi8vTmV3c0pTLy4vc3JjL3N0eWxlcy9oZWFkZXIuY3NzIiwid2VicGFjazovL05ld3NKUy8uL3NyYy9zdHlsZXMvaW5kZXguY3NzIiwid2VicGFjazovL05ld3NKUy8uL3NyYy9zdHlsZXMvaW5wdXQuY3NzIiwid2VicGFjazovL05ld3NKUy8uL3NyYy9zdHlsZXMvbGV2ZWxzLmNzcyIsIndlYnBhY2s6Ly9OZXdzSlMvLi9zcmMvc3R5bGVzL21haW4uY3NzIiwid2VicGFjazovL05ld3NKUy8uL3NyYy9zdHlsZXMvc3R5bGVzLmNzcyIsIndlYnBhY2s6Ly9OZXdzSlMvLi9zcmMvc3R5bGVzL3ZhcmlhYmxlcy5jc3MiLCJ3ZWJwYWNrOi8vTmV3c0pTLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly9OZXdzSlMvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvY3NzV2l0aE1hcHBpbmdUb1N0cmluZy5qcyIsIndlYnBhY2s6Ly9OZXdzSlMvLi9zcmMvc3R5bGVzL2luZGV4LmNzcz82MzQ5Iiwid2VicGFjazovL05ld3NKUy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9OZXdzSlMvLi9zcmMvY29tcG9uZW50cy9hcHAudHMiLCJ3ZWJwYWNrOi8vTmV3c0pTLy4vc3JjL2NvbXBvbmVudHMvZWRpdG9ycy9lZGl0b3ItdGVtcGxhdGUudHMiLCJ3ZWJwYWNrOi8vTmV3c0pTLy4vc3JjL2NvbXBvbmVudHMvZWRpdG9ycy9lZGl0b3JzLnRzIiwid2VicGFjazovL05ld3NKUy8uL3NyYy9jb21wb25lbnRzL2Zvb3Rlci50cyIsIndlYnBhY2s6Ly9OZXdzSlMvLi9zcmMvY29tcG9uZW50cy9nYW1lLnRzIiwid2VicGFjazovL05ld3NKUy8uL3NyYy9jb21wb25lbnRzL2hlYWRlci50cyIsIndlYnBhY2s6Ly9OZXdzSlMvLi9zcmMvY29tcG9uZW50cy9sZXZlbHMvbGV2ZWxzLWJvZHkudHMiLCJ3ZWJwYWNrOi8vTmV3c0pTLy4vc3JjL2NvbXBvbmVudHMvbGV2ZWxzL2xldmVscy1oZWFkZXIudHMiLCJ3ZWJwYWNrOi8vTmV3c0pTLy4vc3JjL2NvbXBvbmVudHMvbGV2ZWxzL2xldmVscy50cyIsIndlYnBhY2s6Ly9OZXdzSlMvLi9zcmMvY29tcG9uZW50cy9tYWluLnRzIiwid2VicGFjazovL05ld3NKUy8uL3NyYy9jb21wb25lbnRzL3Rhc2sudHMiLCJ3ZWJwYWNrOi8vTmV3c0pTLy4vc3JjL2RhdGEvbGV2ZWxzLWRhdGEudHMiLCJ3ZWJwYWNrOi8vTmV3c0pTLy4vc3JjL3NjcmlwdHMvbGlzdGVuZXJzLnRzIiwid2VicGFjazovL05ld3NKUy8uL3NyYy9zY3JpcHRzL3RvZ2dsZS1zaWRlLXBhbmVsLnRzIiwid2VicGFjazovL05ld3NKUy8uL3NyYy91dGlscy9lbGVtZW50LnRzIiwid2VicGFjazovL05ld3NKUy93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9OZXdzSlMvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vTmV3c0pTL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9OZXdzSlMvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9OZXdzSlMvd2VicGFjay9ydW50aW1lL21ha2UgbmFtZXNwYWNlIG9iamVjdCIsIndlYnBhY2s6Ly9OZXdzSlMvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL05ld3NKUy8uL3NyYy9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi8qIExJTktTICovXFxuXFxuYSB7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxufVxcblxcbmE6OmJlZm9yZSB7XFxuICBjb250ZW50OiBcXFwiXFxcIjtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAycHg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1yZWQpO1xcbiAgbGVmdDogMDtcXG4gIGJvdHRvbTogMDtcXG4gIHotaW5kZXg6IC0xMDtcXG5cXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2UtaW4tb3V0O1xcbn1cXG5cXG5hOmhvdmVyOjpiZWZvcmUge1xcbiAgbGVmdDogMDtcXG4gIGhlaWdodDogOTAlO1xcbn1cXG5cXG4vKiBCVVRUT05TICovXFxuXFxuYnV0dG9uIHtcXG4gIG91dGxpbmU6IG5vbmU7XFxuICBib3JkZXItcmFkaXVzOiAwO1xcbn1cXG5cXG4uYnV0dG9uIHtcXG4gIGhlaWdodDogMjBweDtcXG4gIHBhZGRpbmc6IDAgMTBweDtcXG5cXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBmbGV4LXNocmluazogMDtcXG5cXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJ1dHRvbi0tZ3JleSk7XFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ibGFjayk7XFxuXFxuICBmb250LWZhbWlseTogXFxcIkpldEJyYWlucyBNb25vXFxcIiwgbW9ub3NwYWNlO1xcbiAgZm9udC1zaXplOiAxMnB4O1xcbiAgY29sb3I6IHZhcigtLWJsYWNrKTtcXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuXFxuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluLW91dDtcXG59XFxuXFxuLmJ1dHRvbjpob3ZlciB7XFxuICBwYWRkaW5nOiAwIDIwcHg7XFxufVxcblxcbi5idXR0b24tLWNoZWNrOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWdyZWVuKTtcXG59XFxuXFxuLmJ1dHRvbi0taGludDpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS15ZWxsb3cpO1xcbn1cXG5cXG4uYnV0dG9uLS1yZXNldDpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1ncmVlbik7XFxufVxcblxcbi5oZWFkZXIgLmJ1dHRvbi0tbGV2ZWxzOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXB1cnBsZSk7XFxufVxcblxcbi5sZXZlbHNfX2J1dHRvbiB7XFxuICB3aWR0aDogMzBweDtcXG59XFxuXFxuLmxldmVsc19fYnV0dG9uOmZpcnN0LWNoaWxkIHtcXG4gIGJvcmRlci1yaWdodDogbm9uZTtcXG59XFxuXFxuLmJ1dHRvbi0tcHJldjpob3ZlcixcXG4uYnV0dG9uLS1uZXh0OmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXB1cnBsZSk7XFxufVxcblxcbi5idXR0b24tLWhpZGU6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcmVkKTtcXG4gIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICgtLWJvcmRlcik7XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvYnV0dG9ucy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUEsVUFBVTs7QUFFVjtFQUNFLHFCQUFxQjtFQUNyQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxXQUFXO0VBQ1gsNEJBQTRCO0VBQzVCLE9BQU87RUFDUCxTQUFTO0VBQ1QsWUFBWTs7RUFFWixnQ0FBZ0M7QUFDbEM7O0FBRUE7RUFDRSxPQUFPO0VBQ1AsV0FBVztBQUNiOztBQUVBLFlBQVk7O0FBRVo7RUFDRSxhQUFhO0VBQ2IsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLGVBQWU7O0VBRWYsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsY0FBYzs7RUFFZCxxQ0FBcUM7RUFDckMsOEJBQThCOztFQUU5Qix3Q0FBd0M7RUFDeEMsZUFBZTtFQUNmLG1CQUFtQjtFQUNuQix5QkFBeUI7RUFDekIsZUFBZTs7RUFFZixnQ0FBZ0M7QUFDbEM7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsOEJBQThCO0FBQ2hDOztBQUVBO0VBQ0UsK0JBQStCO0FBQ2pDOztBQUVBO0VBQ0UsOEJBQThCO0FBQ2hDOztBQUVBO0VBQ0UsK0JBQStCO0FBQ2pDOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBOztFQUVFLCtCQUErQjtBQUNqQzs7QUFFQTtFQUNFLDRCQUE0QjtFQUM1QixrQ0FBa0M7QUFDcENcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLyogTElOS1MgKi9cXG5cXG5hIHtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxuXFxuYTo6YmVmb3JlIHtcXG4gIGNvbnRlbnQ6IFxcXCJcXFwiO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDJweDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXJlZCk7XFxuICBsZWZ0OiAwO1xcbiAgYm90dG9tOiAwO1xcbiAgei1pbmRleDogLTEwO1xcblxcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZS1pbi1vdXQ7XFxufVxcblxcbmE6aG92ZXI6OmJlZm9yZSB7XFxuICBsZWZ0OiAwO1xcbiAgaGVpZ2h0OiA5MCU7XFxufVxcblxcbi8qIEJVVFRPTlMgKi9cXG5cXG5idXR0b24ge1xcbiAgb3V0bGluZTogbm9uZTtcXG4gIGJvcmRlci1yYWRpdXM6IDA7XFxufVxcblxcbi5idXR0b24ge1xcbiAgaGVpZ2h0OiAyMHB4O1xcbiAgcGFkZGluZzogMCAxMHB4O1xcblxcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGZsZXgtc2hyaW5rOiAwO1xcblxcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYnV0dG9uLS1ncmV5KTtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWJsYWNrKTtcXG5cXG4gIGZvbnQtZmFtaWx5OiBcXFwiSmV0QnJhaW5zIE1vbm9cXFwiLCBtb25vc3BhY2U7XFxuICBmb250LXNpemU6IDEycHg7XFxuICBjb2xvcjogdmFyKC0tYmxhY2spO1xcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG5cXG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0O1xcbn1cXG5cXG4uYnV0dG9uOmhvdmVyIHtcXG4gIHBhZGRpbmc6IDAgMjBweDtcXG59XFxuXFxuLmJ1dHRvbi0tY2hlY2s6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZ3JlZW4pO1xcbn1cXG5cXG4uYnV0dG9uLS1oaW50OmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXllbGxvdyk7XFxufVxcblxcbi5idXR0b24tLXJlc2V0OmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWdyZWVuKTtcXG59XFxuXFxuLmhlYWRlciAuYnV0dG9uLS1sZXZlbHM6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHVycGxlKTtcXG59XFxuXFxuLmxldmVsc19fYnV0dG9uIHtcXG4gIHdpZHRoOiAzMHB4O1xcbn1cXG5cXG4ubGV2ZWxzX19idXR0b246Zmlyc3QtY2hpbGQge1xcbiAgYm9yZGVyLXJpZ2h0OiBub25lO1xcbn1cXG5cXG4uYnV0dG9uLS1wcmV2OmhvdmVyLFxcbi5idXR0b24tLW5leHQ6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHVycGxlKTtcXG59XFxuXFxuLmJ1dHRvbi0taGlkZTpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1yZWQpO1xcbiAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgKC0tYm9yZGVyKTtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvY3NzV2l0aE1hcHBpbmdUb1N0cmluZy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLmJsb2NrX19lZGl0b3JzIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgbWF4LWhlaWdodDogNDAwcHg7XFxuICBkaXNwbGF5OiBmbGV4O1xcbn1cXG5cXG4uZWRpdG9yIHtcXG4gIHdpZHRoOiA1MCU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG5cXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWJvcmRlcik7XFxufVxcblxcbi5lZGl0b3JfX2hlYWRlciB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogNDBweDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgZmxleC1zaHJpbms6IDA7XFxuICBwYWRkaW5nOiAwIDE1cHg7XFxuXFxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgdmFyKC0tYm9yZGVyKTtcXG59XFxuXFxuLmVkaXRvcl9fdGl0bGUge1xcbiAgb3BhY2l0eTogMC45O1xcbn1cXG5cXG4uZWRpdG9yX19maWxlIHtcXG4gIG9wYWNpdHk6IDAuNTtcXG59XFxuXFxuLmVkaXRvcl9fYm9keSB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcXG5cXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXdoaXRlKTtcXG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcXG59XFxuXFxuLmJvZHlfX3BhbmVsLS1saW5lcyB7XFxuICB3aWR0aDogNDBweDtcXG4gIHBhZGRpbmc6IDEwcHggMTBweDtcXG5cXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmFjay0tZ3JleSk7XFxufVxcblxcbi5ib2R5X19wYW5lbC0tbGluZXMgc3BhbiB7XFxuICB0ZXh0LWFsaWduOiByaWdodDtcXG4gIGNvbG9yOiB2YXIoLS10ZXh0LS1ncmV5KTtcXG59XFxuXFxuLmJvZHlfX3BhbmVsLS1jb250ZW50IHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgcGFkZGluZzogMTBweDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbn1cXG5cXG4vKiBDU1MsIEhUTUwgKi9cXG5cXG4uZWRpdG9yLS1jc3Mge1xcbiAgYm9yZGVyLXJpZ2h0OiBub25lO1xcbn1cXG5cXG4uZWRpdG9yLS1odG1sIC5ib2R5X19wYW5lbC0tbGluZXMge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCB2YXIoLS1ib3JkZXIpO1xcbn1cXG5cXG4uZWRpdG9yLS1odG1sIC5lZGl0b3JfX2JvZHkge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmFjayk7XFxufVxcblxcbi8qKi9cXG5cXG5AbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA3NTBweCkge1xcbiAgLmJsb2NrX19lZGl0b3JzIHtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiAyMHB4O1xcbiAgICBtYXgtaGVpZ2h0OiBpbml0aWFsO1xcbiAgfVxcblxcbiAgLmVkaXRvciB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBtYXgtaGVpZ2h0OiAzMjBweDtcXG4gICAgaGVpZ2h0OiAxMDAlO1xcbiAgfVxcblxcbiAgLmVkaXRvcl9fYm9keSB7XFxuICAgIG92ZXJmbG93LXk6IGhpZGRlbjtcXG4gIH1cXG5cXG4gIC5lZGl0b3ItLWNzcyB7XFxuICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkIHZhcigtLWJvcmRlcik7XFxuICB9XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvZWRpdG9ycy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxXQUFXO0VBQ1gsaUJBQWlCO0VBQ2pCLGFBQWE7QUFDZjs7QUFFQTtFQUNFLFVBQVU7RUFDVixhQUFhO0VBQ2Isc0JBQXNCOztFQUV0QiwrQkFBK0I7QUFDakM7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLGFBQWE7RUFDYiw4QkFBOEI7RUFDOUIsbUJBQW1CO0VBQ25CLGNBQWM7RUFDZCxlQUFlOztFQUVmLHNDQUFzQztBQUN4Qzs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFdBQVc7RUFDWCxhQUFhO0VBQ2IsdUJBQXVCOztFQUV2Qiw4QkFBOEI7RUFDOUIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsV0FBVztFQUNYLGtCQUFrQjs7RUFFbEIsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixtQ0FBbUM7QUFDckM7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsd0JBQXdCO0FBQzFCOztBQUVBO0VBQ0UsV0FBVztFQUNYLGFBQWE7RUFDYixhQUFhO0VBQ2Isc0JBQXNCO0FBQ3hCOztBQUVBLGNBQWM7O0FBRWQ7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSw2QkFBNkI7RUFDN0IscUNBQXFDO0FBQ3ZDOztBQUVBO0VBQ0UsNkJBQTZCO0FBQy9COztBQUVBLEdBQUc7O0FBRUg7RUFDRTtJQUNFLHNCQUFzQjtJQUN0QixTQUFTO0lBQ1QsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsV0FBVztJQUNYLGlCQUFpQjtJQUNqQixZQUFZO0VBQ2Q7O0VBRUE7SUFDRSxrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxxQ0FBcUM7RUFDdkM7QUFDRlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuYmxvY2tfX2VkaXRvcnMge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBtYXgtaGVpZ2h0OiA0MDBweDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxufVxcblxcbi5lZGl0b3Ige1xcbiAgd2lkdGg6IDUwJTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcblxcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tYm9yZGVyKTtcXG59XFxuXFxuLmVkaXRvcl9faGVhZGVyIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiA0MHB4O1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBmbGV4LXNocmluazogMDtcXG4gIHBhZGRpbmc6IDAgMTVweDtcXG5cXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB2YXIoLS1ib3JkZXIpO1xcbn1cXG5cXG4uZWRpdG9yX190aXRsZSB7XFxuICBvcGFjaXR5OiAwLjk7XFxufVxcblxcbi5lZGl0b3JfX2ZpbGUge1xcbiAgb3BhY2l0eTogMC41O1xcbn1cXG5cXG4uZWRpdG9yX19ib2R5IHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xcblxcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0td2hpdGUpO1xcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xcbn1cXG5cXG4uYm9keV9fcGFuZWwtLWxpbmVzIHtcXG4gIHdpZHRoOiA0MHB4O1xcbiAgcGFkZGluZzogMTBweCAxMHB4O1xcblxcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iYWNrLS1ncmV5KTtcXG59XFxuXFxuLmJvZHlfX3BhbmVsLS1saW5lcyBzcGFuIHtcXG4gIHRleHQtYWxpZ246IHJpZ2h0O1xcbiAgY29sb3I6IHZhcigtLXRleHQtLWdyZXkpO1xcbn1cXG5cXG4uYm9keV9fcGFuZWwtLWNvbnRlbnQge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBwYWRkaW5nOiAxMHB4O1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxufVxcblxcbi8qIENTUywgSFRNTCAqL1xcblxcbi5lZGl0b3ItLWNzcyB7XFxuICBib3JkZXItcmlnaHQ6IG5vbmU7XFxufVxcblxcbi5lZGl0b3ItLWh0bWwgLmJvZHlfX3BhbmVsLS1saW5lcyB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gIGJvcmRlci1yaWdodDogMXB4IHNvbGlkIHZhcigtLWJvcmRlcik7XFxufVxcblxcbi5lZGl0b3ItLWh0bWwgLmVkaXRvcl9fYm9keSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iYWNrKTtcXG59XFxuXFxuLyoqL1xcblxcbkBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDc1MHB4KSB7XFxuICAuYmxvY2tfX2VkaXRvcnMge1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBnYXA6IDIwcHg7XFxuICAgIG1heC1oZWlnaHQ6IGluaXRpYWw7XFxuICB9XFxuXFxuICAuZWRpdG9yIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIG1heC1oZWlnaHQ6IDMyMHB4O1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxuICB9XFxuXFxuICAuZWRpdG9yX19ib2R5IHtcXG4gICAgb3ZlcmZsb3cteTogaGlkZGVuO1xcbiAgfVxcblxcbiAgLmVkaXRvci0tY3NzIHtcXG4gICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgdmFyKC0tYm9yZGVyKTtcXG4gIH1cXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvY3NzV2l0aE1hcHBpbmdUb1N0cmluZy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLmZvb3RlciB7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuXFxuLmZvb3Rlcl9fY29udGFpbmVyIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBwYWRkaW5nOiAxMHB4IDIwcHg7XFxuXFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ib3JkZXIpO1xcbn1cXG5cXG4uZm9vdGVyIGEge1xcbiAgY29sb3I6IHZhcigtLXdoaXRlKTtcXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlcy9mb290ZXIuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsV0FBVztFQUNYLGFBQWE7RUFDYiw4QkFBOEI7RUFDOUIsbUJBQW1CO0VBQ25CLGtCQUFrQjs7RUFFbEIsK0JBQStCO0FBQ2pDOztBQUVBO0VBQ0UsbUJBQW1CO0VBQ25CLHFCQUFxQjtBQUN2QlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuZm9vdGVyIHtcXG4gIHdpZHRoOiAxMDAlO1xcbn1cXG5cXG4uZm9vdGVyX19jb250YWluZXIge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHBhZGRpbmc6IDEwcHggMjBweDtcXG5cXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWJvcmRlcik7XFxufVxcblxcbi5mb290ZXIgYSB7XFxuICBjb2xvcjogdmFyKC0td2hpdGUpO1xcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9jc3NXaXRoTWFwcGluZ1RvU3RyaW5nLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIuYmxvY2tfX3Rhc2sge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBnYXA6IDIwcHg7XFxufVxcblxcbi50YXNrX190ZXh0IHtcXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcblxcbi50YXNrX19ncmFwaGljcyB7XFxuICB3aWR0aDogMTAwJTtcXG4gIG1pbi1oZWlnaHQ6IDE2MHB4O1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XFxuXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1ibGFjayk7XFxufVxcblxcbi5ncmFwaGljc19fY29udGFpbmVyIHtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbn1cXG5cXG4vKiovXFxuXFxuQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogNzUwcHgpIHtcXG4gIC5ibG9ja19fdGFzayB7XFxuICAgIGhlaWdodDogYXV0bztcXG4gIH1cXG5cXG4gIC50YXNrX19ncmFwaGljcyB7XFxuICAgIGhlaWdodDogMjAwcHg7XFxuICB9XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvZ3JhcGhpY3MuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsV0FBVztFQUNYLFlBQVk7RUFDWixhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLDJCQUEyQjtFQUMzQixtQkFBbUI7RUFDbkIsU0FBUztBQUNYOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxpQkFBaUI7RUFDakIsWUFBWTtFQUNaLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsdUJBQXVCOztFQUV2Qiw4QkFBOEI7QUFDaEM7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLFlBQVk7QUFDZDs7QUFFQSxHQUFHOztBQUVIO0VBQ0U7SUFDRSxZQUFZO0VBQ2Q7O0VBRUE7SUFDRSxhQUFhO0VBQ2Y7QUFDRlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuYmxvY2tfX3Rhc2sge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBnYXA6IDIwcHg7XFxufVxcblxcbi50YXNrX190ZXh0IHtcXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcblxcbi50YXNrX19ncmFwaGljcyB7XFxuICB3aWR0aDogMTAwJTtcXG4gIG1pbi1oZWlnaHQ6IDE2MHB4O1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XFxuXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1ibGFjayk7XFxufVxcblxcbi5ncmFwaGljc19fY29udGFpbmVyIHtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbn1cXG5cXG4vKiovXFxuXFxuQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogNzUwcHgpIHtcXG4gIC5ibG9ja19fdGFzayB7XFxuICAgIGhlaWdodDogYXV0bztcXG4gIH1cXG5cXG4gIC50YXNrX19ncmFwaGljcyB7XFxuICAgIGhlaWdodDogMjAwcHg7XFxuICB9XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5oZWFkZXIge1xcbiAgd2lkdGg6IDEwMCU7XFxuXFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLmhlYWRlcl9fdGl0bGUge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBnYXA6IDVweDtcXG59XFxuXFxuaDEge1xcbiAgZm9udC13ZWlnaHQ6IDUwMDtcXG59XFxuXFxuLmhlYWRlcl9fYnV0dG9ucyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZ2FwOiA1cHg7XFxufVxcblxcbi5oZWFkZXJfX2xldmVscyB7XFxuICBkaXNwbGF5OiBub25lO1xcbn1cXG5cXG4uaGVhZGVyX19sZXZlbHMgLmxldmVsX19zdGF0dXMge1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICBtYXJnaW4tcmlnaHQ6IDVweDtcXG4gIG1hcmdpbi10b3A6IDJweDtcXG59XFxuXFxuLmJ1dHRvbi0tbGV2ZWxzIHtcXG4gIG1hcmdpbi1sZWZ0OiAxNXB4O1xcbn1cXG5cXG4vKiovXFxuXFxuQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogOTgwcHgpIHtcXG4gIC5oZWFkZXIge1xcbiAgICBwb3NpdGlvbjogZml4ZWQ7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBsZWZ0OiAwO1xcbiAgICB0b3A6IDA7XFxuICAgIHBhZGRpbmc6IDIwcHg7XFxuXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJhY2spO1xcbiAgfVxcblxcbiAgLmhlYWRlcl9fbGV2ZWxzIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gIH1cXG59XFxuXFxuLyogSUNPTiAqL1xcblxcbi50aXRsZV9faWNvbiB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLnRpdGxlX19pY29uIHN2ZyB7XFxuICB3aWR0aDogNjBweDtcXG4gIGhlaWdodDogMTNweDtcXG59XFxuXFxuLmhlYWRlcl9fdGl0bGUgLmljb24gcGF0aCxcXG4uaGVhZGVyX190aXRsZSAuaWNvbiBjaXJjbGUsXFxuLmhlYWRlcl9fdGl0bGUgLmljb24gcmVjdCB7XFxuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBjdWJpYy1iZXppZXIoMC41LCAxLjgsIDAuNiwgMS41KTtcXG59XFxuXFxuLmhlYWRlcl9fdGl0bGUgLmljb24gcGF0aCB7XFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XFxuICB0cmFuc2l0aW9uLWRlbGF5OiAwO1xcbn1cXG5cXG4uaGVhZGVyX190aXRsZSAuaWNvbiByZWN0IHtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcXG4gIHRyYW5zaXRpb24tZGVsYXk6IDAuMXM7XFxufVxcblxcbi5oZWFkZXJfX3RpdGxlIC5pY29uIGNpcmNsZSB7XFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoKTtcXG4gIHRyYW5zaXRpb24tZGVsYXk6IDAuMnM7XFxufVxcblxcbi5oZWFkZXJfX3RpdGxlOmhvdmVyIC5pY29uIHBhdGgge1xcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwcHgpO1xcbiAgdHJhbnNpdGlvbi1kZWxheTogMDtcXG59XFxuXFxuLmhlYWRlcl9fdGl0bGU6aG92ZXIgLmljb24gcmVjdCB7XFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTBweCk7XFxuICB0cmFuc2l0aW9uLWRlbGF5OiAwLjFzO1xcbn1cXG5cXG4uaGVhZGVyX190aXRsZTpob3ZlciAuaWNvbiBjaXJjbGUge1xcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwcHgpO1xcbiAgdHJhbnNpdGlvbi1kZWxheTogMC4ycztcXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlcy9oZWFkZXIuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsV0FBVzs7RUFFWCxhQUFhO0VBQ2IsOEJBQThCO0VBQzlCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsUUFBUTtBQUNWOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLFFBQVE7QUFDVjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxpQkFBaUI7RUFDakIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQjs7QUFFQSxHQUFHOztBQUVIO0VBQ0U7SUFDRSxlQUFlO0lBQ2YsV0FBVztJQUNYLE9BQU87SUFDUCxNQUFNO0lBQ04sYUFBYTs7SUFFYiw2QkFBNkI7RUFDL0I7O0VBRUE7SUFDRSxhQUFhO0VBQ2Y7QUFDRjs7QUFFQSxTQUFTOztBQUVUO0VBQ0UsYUFBYTtFQUNiLDJCQUEyQjtFQUMzQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtBQUNkOztBQUVBOzs7RUFHRSxxREFBcUQ7QUFDdkQ7O0FBRUE7RUFDRSx3QkFBd0I7RUFDeEIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0Usd0JBQXdCO0VBQ3hCLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLHVCQUF1QjtFQUN2QixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSwyQkFBMkI7RUFDM0IsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsMkJBQTJCO0VBQzNCLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLDJCQUEyQjtFQUMzQixzQkFBc0I7QUFDeEJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmhlYWRlciB7XFxuICB3aWR0aDogMTAwJTtcXG5cXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4uaGVhZGVyX190aXRsZSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGdhcDogNXB4O1xcbn1cXG5cXG5oMSB7XFxuICBmb250LXdlaWdodDogNTAwO1xcbn1cXG5cXG4uaGVhZGVyX19idXR0b25zIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBnYXA6IDVweDtcXG59XFxuXFxuLmhlYWRlcl9fbGV2ZWxzIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbi5oZWFkZXJfX2xldmVscyAubGV2ZWxfX3N0YXR1cyB7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIG1hcmdpbi1yaWdodDogNXB4O1xcbiAgbWFyZ2luLXRvcDogMnB4O1xcbn1cXG5cXG4uYnV0dG9uLS1sZXZlbHMge1xcbiAgbWFyZ2luLWxlZnQ6IDE1cHg7XFxufVxcblxcbi8qKi9cXG5cXG5AbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA5ODBweCkge1xcbiAgLmhlYWRlciB7XFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGxlZnQ6IDA7XFxuICAgIHRvcDogMDtcXG4gICAgcGFkZGluZzogMjBweDtcXG5cXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmFjayk7XFxuICB9XFxuXFxuICAuaGVhZGVyX19sZXZlbHMge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgfVxcbn1cXG5cXG4vKiBJQ09OICovXFxuXFxuLnRpdGxlX19pY29uIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4udGl0bGVfX2ljb24gc3ZnIHtcXG4gIHdpZHRoOiA2MHB4O1xcbiAgaGVpZ2h0OiAxM3B4O1xcbn1cXG5cXG4uaGVhZGVyX190aXRsZSAuaWNvbiBwYXRoLFxcbi5oZWFkZXJfX3RpdGxlIC5pY29uIGNpcmNsZSxcXG4uaGVhZGVyX190aXRsZSAuaWNvbiByZWN0IHtcXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGN1YmljLWJlemllcigwLjUsIDEuOCwgMC42LCAxLjUpO1xcbn1cXG5cXG4uaGVhZGVyX190aXRsZSAuaWNvbiBwYXRoIHtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcXG4gIHRyYW5zaXRpb24tZGVsYXk6IDA7XFxufVxcblxcbi5oZWFkZXJfX3RpdGxlIC5pY29uIHJlY3Qge1xcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xcbiAgdHJhbnNpdGlvbi1kZWxheTogMC4xcztcXG59XFxuXFxuLmhlYWRlcl9fdGl0bGUgLmljb24gY2lyY2xlIHtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgpO1xcbiAgdHJhbnNpdGlvbi1kZWxheTogMC4ycztcXG59XFxuXFxuLmhlYWRlcl9fdGl0bGU6aG92ZXIgLmljb24gcGF0aCB7XFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTBweCk7XFxuICB0cmFuc2l0aW9uLWRlbGF5OiAwO1xcbn1cXG5cXG4uaGVhZGVyX190aXRsZTpob3ZlciAuaWNvbiByZWN0IHtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMHB4KTtcXG4gIHRyYW5zaXRpb24tZGVsYXk6IDAuMXM7XFxufVxcblxcbi5oZWFkZXJfX3RpdGxlOmhvdmVyIC5pY29uIGNpcmNsZSB7XFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTBweCk7XFxuICB0cmFuc2l0aW9uLWRlbGF5OiAwLjJzO1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9jc3NXaXRoTWFwcGluZ1RvU3RyaW5nLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8wX19fIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGVzLmNzc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMV9fXyBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3ZhcmlhYmxlcy5jc3NcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzJfX18gZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9idXR0b25zLmNzc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfM19fXyBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2hlYWRlci5jc3NcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzRfX18gZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9tYWluLmNzc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfNV9fXyBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2Zvb3Rlci5jc3NcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzZfX18gZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9lZGl0b3JzLmNzc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfN19fXyBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2dyYXBoaWNzLmNzc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfOF9fXyBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2lucHV0LmNzc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfOV9fXyBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2xldmVscy5jc3NcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJAaW1wb3J0IHVybChodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PUludGVyOndnaHRANDAwOzYwMDs3MDAmZmFtaWx5PUpldEJyYWlucytNb25vOndnaHRAMzAwOzQwMDs1MDA7NjAwOzcwMCZkaXNwbGF5PXN3YXApO1wiXSk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMF9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMV9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMl9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfM19fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfNF9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfNV9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfNl9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfN19fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfOF9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfOV9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJcXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiXCIsXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9jc3NXaXRoTWFwcGluZ1RvU3RyaW5nLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIvKiBJTlBVVCAqL1xcblxcbi5pbnB1dF9fY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBnYXA6IDEwcHg7XFxufVxcblxcbmlucHV0IHtcXG4gIGZvbnQtZmFtaWx5OiBcXFwiSmV0QnJhaW5zIE1vbm9cXFwiLCBtb25vc3BhY2U7XFxuICBjb2xvcjogdmFyKC0tYmxhY2spO1xcblxcbiAgb3V0bGluZTogMDtcXG4gIGJvcmRlcjogMDtcXG4gIGJvcmRlci1yYWRpdXM6IDA7XFxuXFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMjBweDtcXG4gIHBhZGRpbmc6IDAgMTBweDtcXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlcy9pbnB1dC5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUEsVUFBVTs7QUFFVjtFQUNFLGFBQWE7RUFDYixTQUFTO0FBQ1g7O0FBRUE7RUFDRSx3Q0FBd0M7RUFDeEMsbUJBQW1COztFQUVuQixVQUFVO0VBQ1YsU0FBUztFQUNULGdCQUFnQjs7RUFFaEIsV0FBVztFQUNYLFlBQVk7RUFDWixlQUFlO0FBQ2pCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi8qIElOUFVUICovXFxuXFxuLmlucHV0X19jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGdhcDogMTBweDtcXG59XFxuXFxuaW5wdXQge1xcbiAgZm9udC1mYW1pbHk6IFxcXCJKZXRCcmFpbnMgTW9ub1xcXCIsIG1vbm9zcGFjZTtcXG4gIGNvbG9yOiB2YXIoLS1ibGFjayk7XFxuXFxuICBvdXRsaW5lOiAwO1xcbiAgYm9yZGVyOiAwO1xcbiAgYm9yZGVyLXJhZGl1czogMDtcXG5cXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAyMHB4O1xcbiAgcGFkZGluZzogMCAxMHB4O1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9jc3NXaXRoTWFwcGluZ1RvU3RyaW5nLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIubGV2ZWxzX19oZWFkZXIge1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDQwcHg7XFxuICBwYWRkaW5nOiAwIDE1cHg7XFxuXFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcblxcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHZhcigtLWJvcmRlcik7XFxufVxcblxcbi5sZXZlbHNfX2hlYWRlciAuaGVhZGVyX19jb250YWluZXIge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLmxldmVsc19faGVhZGVyIC5oZWFkZXJfX3RpdGxlIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG59XFxuXFxuLmxldmVsc19faGVhZGVyIC5oZWFkZXJfX3RpdGxlIGgzLFxcbi5sZXZlbHNfX2hlYWRlciAuaGVhZGVyX190aXRsZSBzcGFuIHtcXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XFxuICBvcGFjaXR5OiAwLjk7XFxufVxcblxcbi5sZXZlbHNfX2hlYWRlciAuaGVhZGVyX190aXRsZSBoMyB7XFxuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XFxufVxcblxcbi5sZXZlbHNfX2hlYWRlciAuYnV0dG9uX19jb250YWluZXIge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgbGVmdDogMDtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7XFxuICBkaXNwbGF5OiBub25lO1xcbiAgei1pbmRleDogLTEwO1xcbn1cXG5cXG4ubGV2ZWxzX19idXR0b25zIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBtYXJnaW4tbGVmdDogMjBweDtcXG59XFxuXFxuLmxldmVsc19fYnV0dG9uIHNwYW4ge1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICBwYWRkaW5nLWJvdHRvbTogMnB4O1xcbiAgY29sb3I6IHZhcigtLWJsYWNrKTtcXG4gIG9wYWNpdHk6IDAuOTtcXG59XFxuXFxuLyogQk9EWSAqL1xcblxcbi5sZXZlbHNfX2JvZHkge1xcbiAgcGFkZGluZzogMTVweCAwO1xcbn1cXG5cXG4ubGV2ZWxzX19jb250YWluZXIge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuXFxuLmxldmVsX19pdGVtIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgcGFkZGluZzogNHB4IDE1cHg7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG5cXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2UtaW4tb3V0O1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4ubGV2ZWxfX251bWJlciB7XFxuICB3aWR0aDogMjVweDtcXG59XFxuXFxuLmxldmVsX19pdGVtIHNwYW46bm90KDpsYXN0LWNoaWxkKSB7XFxuICBvcGFjaXR5OiAwLjk7XFxufVxcblxcbi5sZXZlbF9fc3RhdHVzIHtcXG4gIHdpZHRoOiAxNXB4O1xcbiAgaGVpZ2h0OiAxNXB4O1xcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XFxufVxcblxcbi5sZXZlbC0tdW5maW5pc2hlZCB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1ib3JkZXIpO1xcbn1cXG5cXG4ubGV2ZWxfX2l0ZW06aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taXRlbS0tYmFjayk7XFxufVxcblxcbi5sZXZlbF9faXRlbTpob3ZlciBzcGFuIHtcXG4gIG9wYWNpdHk6IDE7XFxufVxcblxcbi5sZXZlbHNfX2JvZHkgLmJ1dHRvbl9fY29udGFpbmVyIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgcGFkZGluZzogMjBweDtcXG5cXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuXFxuLyoqL1xcblxcbkBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDk4MHB4KSB7XFxuICAucGFuZWwtLXZpc2libGUgLmJ1dHRvbl9fY29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogYmxvY2s7XFxuICB9XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvbGV2ZWxzLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsWUFBWTtFQUNaLGVBQWU7O0VBRWYsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7O0VBRW5CLHNDQUFzQztBQUN4Qzs7QUFFQTtFQUNFLFdBQVc7RUFDWCxhQUFhO0VBQ2IsOEJBQThCO0VBQzlCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxhQUFhO0VBQ2IsOEJBQThCO0FBQ2hDOztBQUVBOztFQUVFLGdCQUFnQjtFQUNoQixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsT0FBTztFQUNQLDRCQUE0QjtFQUM1QixhQUFhO0VBQ2IsWUFBWTtBQUNkOztBQUVBO0VBQ0UsYUFBYTtFQUNiLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxtQkFBbUI7RUFDbkIsbUJBQW1CO0VBQ25CLFlBQVk7QUFDZDs7QUFFQSxTQUFTOztBQUVUO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxhQUFhO0VBQ2Isc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsV0FBVztFQUNYLGlCQUFpQjtFQUNqQixhQUFhO0VBQ2IsbUJBQW1COztFQUVuQixnQ0FBZ0M7RUFDaEMsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLCtCQUErQjtBQUNqQzs7QUFFQTtFQUNFLG1DQUFtQztBQUNyQzs7QUFFQTtFQUNFLFVBQVU7QUFDWjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxhQUFhOztFQUViLGFBQWE7RUFDYix1QkFBdUI7QUFDekI7O0FBRUEsR0FBRzs7QUFFSDtFQUNFO0lBQ0UsY0FBYztFQUNoQjtBQUNGXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5sZXZlbHNfX2hlYWRlciB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogNDBweDtcXG4gIHBhZGRpbmc6IDAgMTVweDtcXG5cXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuXFxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgdmFyKC0tYm9yZGVyKTtcXG59XFxuXFxuLmxldmVsc19faGVhZGVyIC5oZWFkZXJfX2NvbnRhaW5lciB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4ubGV2ZWxzX19oZWFkZXIgLmhlYWRlcl9fdGl0bGUge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbn1cXG5cXG4ubGV2ZWxzX19oZWFkZXIgLmhlYWRlcl9fdGl0bGUgaDMsXFxuLmxldmVsc19faGVhZGVyIC5oZWFkZXJfX3RpdGxlIHNwYW4ge1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gIG9wYWNpdHk6IDAuOTtcXG59XFxuXFxuLmxldmVsc19faGVhZGVyIC5oZWFkZXJfX3RpdGxlIGgzIHtcXG4gIG1hcmdpbi1yaWdodDogMTBweDtcXG59XFxuXFxuLmxldmVsc19faGVhZGVyIC5idXR0b25fX2NvbnRhaW5lciB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBsZWZ0OiAwO1xcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTtcXG4gIGRpc3BsYXk6IG5vbmU7XFxuICB6LWluZGV4OiAtMTA7XFxufVxcblxcbi5sZXZlbHNfX2J1dHRvbnMge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xcbn1cXG5cXG4ubGV2ZWxzX19idXR0b24gc3BhbiB7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIHBhZGRpbmctYm90dG9tOiAycHg7XFxuICBjb2xvcjogdmFyKC0tYmxhY2spO1xcbiAgb3BhY2l0eTogMC45O1xcbn1cXG5cXG4vKiBCT0RZICovXFxuXFxuLmxldmVsc19fYm9keSB7XFxuICBwYWRkaW5nOiAxNXB4IDA7XFxufVxcblxcbi5sZXZlbHNfX2NvbnRhaW5lciB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbn1cXG5cXG4ubGV2ZWxfX2l0ZW0ge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBwYWRkaW5nOiA0cHggMTVweDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcblxcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZS1pbi1vdXQ7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5sZXZlbF9fbnVtYmVyIHtcXG4gIHdpZHRoOiAyNXB4O1xcbn1cXG5cXG4ubGV2ZWxfX2l0ZW0gc3Bhbjpub3QoOmxhc3QtY2hpbGQpIHtcXG4gIG9wYWNpdHk6IDAuOTtcXG59XFxuXFxuLmxldmVsX19zdGF0dXMge1xcbiAgd2lkdGg6IDE1cHg7XFxuICBoZWlnaHQ6IDE1cHg7XFxuICBib3JkZXItcmFkaXVzOiA1MCU7XFxuICBtYXJnaW4tbGVmdDogYXV0bztcXG59XFxuXFxuLmxldmVsLS11bmZpbmlzaGVkIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJvcmRlcik7XFxufVxcblxcbi5sZXZlbF9faXRlbTpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1pdGVtLS1iYWNrKTtcXG59XFxuXFxuLmxldmVsX19pdGVtOmhvdmVyIHNwYW4ge1xcbiAgb3BhY2l0eTogMTtcXG59XFxuXFxuLmxldmVsc19fYm9keSAuYnV0dG9uX19jb250YWluZXIge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBwYWRkaW5nOiAyMHB4O1xcblxcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbn1cXG5cXG4vKiovXFxuXFxuQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogOTgwcHgpIHtcXG4gIC5wYW5lbC0tdmlzaWJsZSAuYnV0dG9uX19jb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBibG9jaztcXG4gIH1cXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvY3NzV2l0aE1hcHBpbmdUb1N0cmluZy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLm1haW4ge1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1ncm93OiAxO1xcbiAgZ2FwOiAyMHB4O1xcbn1cXG5cXG4uc2VjdGlvbl9fZ2FtZSB7XFxuICBtYXgtd2lkdGg6IDExODBweDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBnYXA6IDIwcHg7XFxufVxcblxcbi5zZWN0aW9uX19sZXZlbHMge1xcbiAgbWluLXdpZHRoOiAyNDBweDtcXG4gIGZsZXgtZ3JvdzogMTtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWJvcmRlcik7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iYWNrKTtcXG59XFxuXFxuLmdhbWUge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gIGdhcDogMjBweDtcXG59XFxuXFxuLyoqL1xcblxcbkBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDk4MHB4KSB7XFxuICAuc2VjdGlvbl9fZ2FtZSB7XFxuICAgIGdhcDogNDBweDtcXG4gIH1cXG5cXG4gIC5nYW1lIHtcXG4gICAgbWFyZ2luLXRvcDogNDBweDtcXG4gIH1cXG5cXG4gIC5zZWN0aW9uX19sZXZlbHMge1xcbiAgICBwb3NpdGlvbjogZml4ZWQ7XFxuICAgIG1heC13aWR0aDogMjYwcHg7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBoZWlnaHQ6IGNhbGMoMTAwdmggLSA0MHB4KTtcXG4gICAgdG9wOiAyMHB4O1xcbiAgICByaWdodDogMjBweDtcXG4gICAgei1pbmRleDogMTAwO1xcblxcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTUwJSk7XFxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGVhc2UtaW4tb3V0O1xcbiAgfVxcblxcbiAgLnBhbmVsLS12aXNpYmxlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xcbiAgfVxcbn1cXG5cXG5AbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA3NTBweCkge1xcbiAgLmdhbWUge1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XFxuICB9XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvbWFpbi5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLGFBQWE7RUFDYixZQUFZO0VBQ1osU0FBUztBQUNYOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLFdBQVc7RUFDWCxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLFNBQVM7QUFDWDs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixZQUFZO0VBQ1osK0JBQStCO0VBQy9CLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osYUFBYTtFQUNiLHNCQUFzQjtFQUN0Qiw4QkFBOEI7RUFDOUIsU0FBUztBQUNYOztBQUVBLEdBQUc7O0FBRUg7RUFDRTtJQUNFLFNBQVM7RUFDWDs7RUFFQTtJQUNFLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsV0FBVztJQUNYLDBCQUEwQjtJQUMxQixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7O0lBRVosMkJBQTJCO0lBQzNCLHNDQUFzQztFQUN4Qzs7RUFFQTtJQUNFLHdCQUF3QjtFQUMxQjtBQUNGOztBQUVBO0VBQ0U7SUFDRSwyQkFBMkI7RUFDN0I7QUFDRlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIubWFpbiB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICB3aWR0aDogMTAwJTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWdyb3c6IDE7XFxuICBnYXA6IDIwcHg7XFxufVxcblxcbi5zZWN0aW9uX19nYW1lIHtcXG4gIG1heC13aWR0aDogMTE4MHB4O1xcbiAgd2lkdGg6IDEwMCU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGdhcDogMjBweDtcXG59XFxuXFxuLnNlY3Rpb25fX2xldmVscyB7XFxuICBtaW4td2lkdGg6IDI0MHB4O1xcbiAgZmxleC1ncm93OiAxO1xcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tYm9yZGVyKTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJhY2spO1xcbn1cXG5cXG4uZ2FtZSB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgZ2FwOiAyMHB4O1xcbn1cXG5cXG4vKiovXFxuXFxuQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogOTgwcHgpIHtcXG4gIC5zZWN0aW9uX19nYW1lIHtcXG4gICAgZ2FwOiA0MHB4O1xcbiAgfVxcblxcbiAgLmdhbWUge1xcbiAgICBtYXJnaW4tdG9wOiA0MHB4O1xcbiAgfVxcblxcbiAgLnNlY3Rpb25fX2xldmVscyB7XFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXG4gICAgbWF4LXdpZHRoOiAyNjBweDtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogY2FsYygxMDB2aCAtIDQwcHgpO1xcbiAgICB0b3A6IDIwcHg7XFxuICAgIHJpZ2h0OiAyMHB4O1xcbiAgICB6LWluZGV4OiAxMDA7XFxuXFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxNTAlKTtcXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZS1pbi1vdXQ7XFxuICB9XFxuXFxuICAucGFuZWwtLXZpc2libGUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XFxuICB9XFxufVxcblxcbkBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDc1MHB4KSB7XFxuICAuZ2FtZSB7XFxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXG4gIH1cXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvY3NzV2l0aE1hcHBpbmdUb1N0cmluZy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiKiB7XFxuICBwYWRkaW5nOiAwO1xcbiAgbWFyZ2luOiAwO1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG4gIGNvbG9yOiB2YXIoLS13aGl0ZSk7XFxufVxcblxcbmJvZHkge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBtaW4taGVpZ2h0OiAxMDB2aDtcXG4gIGhlaWdodDogMTAwJTtcXG4gIGJhY2tncm91bmQ6IHZhcigtLWJhY2spO1xcbiAgZm9udC1mYW1pbHk6IFxcXCJKZXRCcmFpbnMgTW9ub1xcXCIsIG1vbm9zcGFjZTtcXG5cXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGdhcDogMjBweDtcXG4gIHBhZGRpbmc6IDIwcHg7XFxuXFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbn1cXG5cXG4uY29udGVudC13aWR0aCB7XFxuICAvKiBtYXgtd2lkdGg6IDEwMjRweDsgKi9cXG4gIHdpZHRoOiAxMDAlO1xcbn1cXG5cXG4vKiovXFxuXFxuQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogOTgwcHgpIHtcXG4gIGJvZHkge1xcbiAgICBvdmVyZmxvdzogc2Nyb2xsO1xcbiAgICBvdmVyZmxvdy14OiBoaWRkZW47XFxuICB9XFxufVxcblxcbkBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDc1MHB4KSB7XFxuICBib2R5IHtcXG4gICAgZ2FwOiA2MHB4O1xcbiAgfVxcbn1cXG5cXG5cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGVzL3N0eWxlcy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxVQUFVO0VBQ1YsU0FBUztFQUNULHNCQUFzQjtFQUN0QixlQUFlO0VBQ2YsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsV0FBVztFQUNYLGlCQUFpQjtFQUNqQixZQUFZO0VBQ1osdUJBQXVCO0VBQ3ZCLHdDQUF3Qzs7RUFFeEMsYUFBYTtFQUNiLHNCQUFzQjtFQUN0Qiw4QkFBOEI7RUFDOUIsbUJBQW1CO0VBQ25CLFNBQVM7RUFDVCxhQUFhOztFQUViLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLHVCQUF1QjtFQUN2QixXQUFXO0FBQ2I7O0FBRUEsR0FBRzs7QUFFSDtFQUNFO0lBQ0UsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtFQUNwQjtBQUNGOztBQUVBO0VBQ0U7SUFDRSxTQUFTO0VBQ1g7QUFDRlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIqIHtcXG4gIHBhZGRpbmc6IDA7XFxuICBtYXJnaW46IDA7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgZm9udC1zaXplOiAxNHB4O1xcbiAgY29sb3I6IHZhcigtLXdoaXRlKTtcXG59XFxuXFxuYm9keSB7XFxuICB3aWR0aDogMTAwJTtcXG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgYmFja2dyb3VuZDogdmFyKC0tYmFjayk7XFxuICBmb250LWZhbWlseTogXFxcIkpldEJyYWlucyBNb25vXFxcIiwgbW9ub3NwYWNlO1xcblxcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgZ2FwOiAyMHB4O1xcbiAgcGFkZGluZzogMjBweDtcXG5cXG4gIG92ZXJmbG93OiBoaWRkZW47XFxufVxcblxcbi5jb250ZW50LXdpZHRoIHtcXG4gIC8qIG1heC13aWR0aDogMTAyNHB4OyAqL1xcbiAgd2lkdGg6IDEwMCU7XFxufVxcblxcbi8qKi9cXG5cXG5AbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA5ODBweCkge1xcbiAgYm9keSB7XFxuICAgIG92ZXJmbG93OiBzY3JvbGw7XFxuICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcXG4gIH1cXG59XFxuXFxuQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogNzUwcHgpIHtcXG4gIGJvZHkge1xcbiAgICBnYXA6IDYwcHg7XFxuICB9XFxufVxcblxcblxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIjpyb290IHtcXG4gIC0tYmxhY2s6ICMxQzFDMUM7XFxuICAtLXdoaXRlOiB3aGl0ZXNtb2tlO1xcbiAgLS1yZWQ6IG9yYW5nZXJlZDtcXG4gIC0tb3JhbmdlOiByZ2IoMjU1LCAxMDYsIDApO1xcbiAgLS1ncmVlbjogIzdFQzg3MDtcXG4gIC0teWVsbG93OiAjZmZlMjA4O1xcbiAgLS1wdXJwbGU6ICM3YzY5ZmE7XFxuICAtLWJsdWU6IHJnYigxMzAsIDIwMiwgMjQ3KTtcXG4gIC0tYmFjazogIzMxMzEzMTtcXG4gIC0tYm9yZGVyOiAjNWQ1ZDVkO1xcbiAgLS1pdGVtLS1iYWNrOiAjM2QzZDNkO1xcbiAgLS1idXR0b24tLWdyZXk6ICNmNWY1ZjU7XFxuICAtLWJhY2stLWdyZXk6ICNEREREREQ7XFxuICAtLXRleHQtLWdyZXk6ICM4Njg2ODY7XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvdmFyaWFibGVzLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsZ0JBQWdCO0VBQ2hCLDBCQUEwQjtFQUMxQixnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLGlCQUFpQjtFQUNqQiwwQkFBMEI7RUFDMUIsZUFBZTtFQUNmLGlCQUFpQjtFQUNqQixxQkFBcUI7RUFDckIsdUJBQXVCO0VBQ3ZCLHFCQUFxQjtFQUNyQixxQkFBcUI7QUFDdkJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiOnJvb3Qge1xcbiAgLS1ibGFjazogIzFDMUMxQztcXG4gIC0td2hpdGU6IHdoaXRlc21va2U7XFxuICAtLXJlZDogb3JhbmdlcmVkO1xcbiAgLS1vcmFuZ2U6IHJnYigyNTUsIDEwNiwgMCk7XFxuICAtLWdyZWVuOiAjN0VDODcwO1xcbiAgLS15ZWxsb3c6ICNmZmUyMDg7XFxuICAtLXB1cnBsZTogIzdjNjlmYTtcXG4gIC0tYmx1ZTogcmdiKDEzMCwgMjAyLCAyNDcpO1xcbiAgLS1iYWNrOiAjMzEzMTMxO1xcbiAgLS1ib3JkZXI6ICM1ZDVkNWQ7XFxuICAtLWl0ZW0tLWJhY2s6ICMzZDNkM2Q7XFxuICAtLWJ1dHRvbi0tZ3JleTogI2Y1ZjVmNTtcXG4gIC0tYmFjay0tZ3JleTogI0RERERERDtcXG4gIC0tdGV4dC0tZ3JleTogIzg2ODY4NjtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoY29udGVudCwgXCJ9XCIpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gKG1vZHVsZXMsIG1lZGlhUXVlcnksIGRlZHVwZSkge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCBcIlwiXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBtb2R1bGVzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfaV0pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnRpbnVlXG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWFRdWVyeSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzJdID0gXCJcIi5jb25jYXQobWVkaWFRdWVyeSwgXCIgYW5kIFwiKS5jb25jYXQoaXRlbVsyXSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkgeyByZXR1cm4gX2FycmF5V2l0aEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFyciwgaSkgfHwgX25vbkl0ZXJhYmxlUmVzdCgpOyB9XG5cbmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7IH1cblxuZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikgeyBpZiAoIW8pIHJldHVybjsgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpOyBpZiAobiA9PT0gXCJPYmplY3RcIiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOyBpZiAobiA9PT0gXCJNYXBcIiB8fCBuID09PSBcIlNldFwiKSByZXR1cm4gQXJyYXkuZnJvbShvKTsgaWYgKG4gPT09IFwiQXJndW1lbnRzXCIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB9XG5cbmZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7IGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoOyBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfVxuXG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7IHZhciBfaSA9IGFyciAmJiAodHlwZW9mIFN5bWJvbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBhcnJbU3ltYm9sLml0ZXJhdG9yXSB8fCBhcnJbXCJAQGl0ZXJhdG9yXCJdKTsgaWYgKF9pID09IG51bGwpIHJldHVybjsgdmFyIF9hcnIgPSBbXTsgdmFyIF9uID0gdHJ1ZTsgdmFyIF9kID0gZmFsc2U7IHZhciBfcywgX2U7IHRyeSB7IGZvciAoX2kgPSBfaS5jYWxsKGFycik7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsgX2Fyci5wdXNoKF9zLnZhbHVlKTsgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOyB9IH0gY2F0Y2ggKGVycikgeyBfZCA9IHRydWU7IF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdICE9IG51bGwpIF9pW1wicmV0dXJuXCJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfVxuXG5mdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7IH1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pIHtcbiAgdmFyIF9pdGVtID0gX3NsaWNlZFRvQXJyYXkoaXRlbSwgNCksXG4gICAgICBjb250ZW50ID0gX2l0ZW1bMV0sXG4gICAgICBjc3NNYXBwaW5nID0gX2l0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJpbXBvcnQgYXBpIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICAgICAgICBpbXBvcnQgY29udGVudCBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2luZGV4LmNzc1wiO1xuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCBkZWZhdWx0IGNvbnRlbnQubG9jYWxzIHx8IHt9OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgaXNPbGRJRSA9IGZ1bmN0aW9uIGlzT2xkSUUoKSB7XG4gIHZhciBtZW1vO1xuICByZXR1cm4gZnVuY3Rpb24gbWVtb3JpemUoKSB7XG4gICAgaWYgKHR5cGVvZiBtZW1vID09PSAndW5kZWZpbmVkJykge1xuICAgICAgLy8gVGVzdCBmb3IgSUUgPD0gOSBhcyBwcm9wb3NlZCBieSBCcm93c2VyaGFja3NcbiAgICAgIC8vIEBzZWUgaHR0cDovL2Jyb3dzZXJoYWNrcy5jb20vI2hhY2stZTcxZDg2OTJmNjUzMzQxNzNmZWU3MTVjMjIyY2I4MDVcbiAgICAgIC8vIFRlc3RzIGZvciBleGlzdGVuY2Ugb2Ygc3RhbmRhcmQgZ2xvYmFscyBpcyB0byBhbGxvdyBzdHlsZS1sb2FkZXJcbiAgICAgIC8vIHRvIG9wZXJhdGUgY29ycmVjdGx5IGludG8gbm9uLXN0YW5kYXJkIGVudmlyb25tZW50c1xuICAgICAgLy8gQHNlZSBodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlci9pc3N1ZXMvMTc3XG4gICAgICBtZW1vID0gQm9vbGVhbih3aW5kb3cgJiYgZG9jdW1lbnQgJiYgZG9jdW1lbnQuYWxsICYmICF3aW5kb3cuYXRvYik7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1lbW87XG4gIH07XG59KCk7XG5cbnZhciBnZXRUYXJnZXQgPSBmdW5jdGlvbiBnZXRUYXJnZXQoKSB7XG4gIHZhciBtZW1vID0ge307XG4gIHJldHVybiBmdW5jdGlvbiBtZW1vcml6ZSh0YXJnZXQpIHtcbiAgICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbiAgfTtcbn0oKTtcblxudmFyIHN0eWxlc0luRG9tID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5Eb20ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5Eb21baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXggIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGVzSW5Eb20ucHVzaCh7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IGFkZFN0eWxlKG9iaiwgb3B0aW9ucyksXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gIHZhciBhdHRyaWJ1dGVzID0gb3B0aW9ucy5hdHRyaWJ1dGVzIHx8IHt9O1xuXG4gIGlmICh0eXBlb2YgYXR0cmlidXRlcy5ub25jZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09ICd1bmRlZmluZWQnID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gICAgaWYgKG5vbmNlKSB7XG4gICAgICBhdHRyaWJ1dGVzLm5vbmNlID0gbm9uY2U7XG4gICAgfVxuICB9XG5cbiAgT2JqZWN0LmtleXMoYXR0cmlidXRlcykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKGtleSwgYXR0cmlidXRlc1trZXldKTtcbiAgfSk7XG5cbiAgaWYgKHR5cGVvZiBvcHRpb25zLmluc2VydCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIG9wdGlvbnMuaW5zZXJ0KHN0eWxlKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KG9wdGlvbnMuaW5zZXJ0IHx8ICdoZWFkJyk7XG5cbiAgICBpZiAoIXRhcmdldCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgICB9XG5cbiAgICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuICB9XG5cbiAgcmV0dXJuIHN0eWxlO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZS5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZSk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG52YXIgcmVwbGFjZVRleHQgPSBmdW5jdGlvbiByZXBsYWNlVGV4dCgpIHtcbiAgdmFyIHRleHRTdG9yZSA9IFtdO1xuICByZXR1cm4gZnVuY3Rpb24gcmVwbGFjZShpbmRleCwgcmVwbGFjZW1lbnQpIHtcbiAgICB0ZXh0U3RvcmVbaW5kZXhdID0gcmVwbGFjZW1lbnQ7XG4gICAgcmV0dXJuIHRleHRTdG9yZS5maWx0ZXIoQm9vbGVhbikuam9pbignXFxuJyk7XG4gIH07XG59KCk7XG5cbmZ1bmN0aW9uIGFwcGx5VG9TaW5nbGV0b25UYWcoc3R5bGUsIGluZGV4LCByZW1vdmUsIG9iaikge1xuICB2YXIgY3NzID0gcmVtb3ZlID8gJycgOiBvYmoubWVkaWEgPyBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpLmNvbmNhdChvYmouY3NzLCBcIn1cIikgOiBvYmouY3NzOyAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG4gIGlmIChzdHlsZS5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gcmVwbGFjZVRleHQoaW5kZXgsIGNzcyk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIGNzc05vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpO1xuICAgIHZhciBjaGlsZE5vZGVzID0gc3R5bGUuY2hpbGROb2RlcztcblxuICAgIGlmIChjaGlsZE5vZGVzW2luZGV4XSkge1xuICAgICAgc3R5bGUucmVtb3ZlQ2hpbGQoY2hpbGROb2Rlc1tpbmRleF0pO1xuICAgIH1cblxuICAgIGlmIChjaGlsZE5vZGVzLmxlbmd0aCkge1xuICAgICAgc3R5bGUuaW5zZXJ0QmVmb3JlKGNzc05vZGUsIGNoaWxkTm9kZXNbaW5kZXhdKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGUuYXBwZW5kQ2hpbGQoY3NzTm9kZSk7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGFwcGx5VG9UYWcoc3R5bGUsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gb2JqLmNzcztcbiAgdmFyIG1lZGlhID0gb2JqLm1lZGlhO1xuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAobWVkaWEpIHtcbiAgICBzdHlsZS5zZXRBdHRyaWJ1dGUoJ21lZGlhJywgbWVkaWEpO1xuICB9IGVsc2Uge1xuICAgIHN0eWxlLnJlbW92ZUF0dHJpYnV0ZSgnbWVkaWEnKTtcbiAgfVxuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIGlmIChzdHlsZS5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZS5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG52YXIgc2luZ2xldG9uID0gbnVsbDtcbnZhciBzaW5nbGV0b25Db3VudGVyID0gMDtcblxuZnVuY3Rpb24gYWRkU3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBzdHlsZTtcbiAgdmFyIHVwZGF0ZTtcbiAgdmFyIHJlbW92ZTtcblxuICBpZiAob3B0aW9ucy5zaW5nbGV0b24pIHtcbiAgICB2YXIgc3R5bGVJbmRleCA9IHNpbmdsZXRvbkNvdW50ZXIrKztcbiAgICBzdHlsZSA9IHNpbmdsZXRvbiB8fCAoc2luZ2xldG9uID0gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpKTtcbiAgICB1cGRhdGUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIGZhbHNlKTtcbiAgICByZW1vdmUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIHRydWUpO1xuICB9IGVsc2Uge1xuICAgIHN0eWxlID0gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICAgIHVwZGF0ZSA9IGFwcGx5VG9UYWcuYmluZChudWxsLCBzdHlsZSwgb3B0aW9ucyk7XG5cbiAgICByZW1vdmUgPSBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpO1xuICAgIH07XG4gIH1cblxuICB1cGRhdGUob2JqKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVN0eWxlKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB1cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVtb3ZlKCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9OyAvLyBGb3JjZSBzaW5nbGUtdGFnIHNvbHV0aW9uIG9uIElFNi05LCB3aGljaCBoYXMgYSBoYXJkIGxpbWl0IG9uIHRoZSAjIG9mIDxzdHlsZT5cbiAgLy8gdGFncyBpdCB3aWxsIGFsbG93IG9uIGEgcGFnZVxuXG4gIGlmICghb3B0aW9ucy5zaW5nbGV0b24gJiYgdHlwZW9mIG9wdGlvbnMuc2luZ2xldG9uICE9PSAnYm9vbGVhbicpIHtcbiAgICBvcHRpb25zLnNpbmdsZXRvbiA9IGlzT2xkSUUoKTtcbiAgfVxuXG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGlmIChPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobmV3TGlzdCkgIT09ICdbb2JqZWN0IEFycmF5XScpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5Eb21bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRG9tW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRG9tLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnJlbmRlckFwcCA9IHZvaWQgMDtcbmNvbnN0IGZvb3Rlcl8xID0gcmVxdWlyZShcIi4vZm9vdGVyXCIpO1xuY29uc3QgbWFpbl8xID0gcmVxdWlyZShcIi4vbWFpblwiKTtcbmZ1bmN0aW9uIHJlbmRlckFwcCgpIHtcbiAgICBjb25zdCBtYWluID0gKDAsIG1haW5fMS5jcmVhdGVNYWluKSgpO1xuICAgIGNvbnN0IGZvb3RlciA9ICgwLCBmb290ZXJfMS5jcmVhdGVGb290ZXIpKCk7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmQobWFpbik7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmQoZm9vdGVyKTtcbn1cbmV4cG9ydHMucmVuZGVyQXBwID0gcmVuZGVyQXBwO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZUVkaXRvciA9IHZvaWQgMDtcbmNvbnN0IGVsZW1lbnRfMSA9IHJlcXVpcmUoXCIuLi8uLi91dGlscy9lbGVtZW50XCIpO1xuZnVuY3Rpb24gY3JlYXRlRWRpdG9yKHBhcmFtcykge1xuICAgIGNvbnN0IGVkaXRvciA9ICgwLCBlbGVtZW50XzEuY3JlYXRlRWxlbWVudCkoXCJkaXZcIiwgcGFyYW1zLmNsYXNzTmFtZXMpO1xuICAgIGNvbnN0IGVkaXRvckhlYWRlciA9IGBcbiAgICA8ZGl2IGNsYXNzPVwiZWRpdG9yX19oZWFkZXJcIj5cbiAgICAgIDxzcGFuIGNsYXNzPVwiZWRpdG9yX190aXRsZVwiPiR7cGFyYW1zLnRpdGxlfTwvc3Bhbj5cbiAgICAgIDxzcGFuIGNsYXNzPVwiZWRpdG9yX19maWxlXCI+JHtwYXJhbXMuZmlsZU5hbWV9PC9zcGFuPlxuICAgIDwvZGl2PlxuICBgO1xuICAgIGNvbnN0IGxpbmVzU3BhbnMgPSAoKSA9PiB7XG4gICAgICAgIGxldCBzcGFucyA9IFwiXCI7XG4gICAgICAgIGZvciAobGV0IGkgPSAxOyBpIDw9IDI1OyBpKyspIHtcbiAgICAgICAgICAgIHNwYW5zICs9IGA8c3Bhbj4ke2l9PC9zcGFuPmA7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNwYW5zO1xuICAgIH07XG4gICAgY29uc3QgZWRpdG9yQm9keSA9IGBcbiAgICA8ZGl2IGNsYXNzPVwiZWRpdG9yX19ib2R5XCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiYm9keV9fcGFuZWwtLWxpbmVzXCI+JHtsaW5lc1NwYW5zKCl9PC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPVwiYm9keV9fcGFuZWwtLWNvbnRlbnRcIj5cbiAgICAgICAgJHtwYXJhbXMuZWRpdG9yQ29udGVudH1cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICBgO1xuICAgIGVkaXRvci5pbnNlcnRBZGphY2VudEhUTUwoXCJiZWZvcmVlbmRcIiwgZWRpdG9ySGVhZGVyKTtcbiAgICBlZGl0b3IuaW5zZXJ0QWRqYWNlbnRIVE1MKFwiYmVmb3JlZW5kXCIsIGVkaXRvckJvZHkpO1xuICAgIHJldHVybiBlZGl0b3I7XG59XG5leHBvcnRzLmNyZWF0ZUVkaXRvciA9IGNyZWF0ZUVkaXRvcjtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVFZGl0b3JzQmxvY2sgPSB2b2lkIDA7XG5jb25zdCBlbGVtZW50XzEgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHMvZWxlbWVudFwiKTtcbmNvbnN0IGVkaXRvcl90ZW1wbGF0ZV8xID0gcmVxdWlyZShcIi4vZWRpdG9yLXRlbXBsYXRlXCIpO1xuLy8gRWRpdG9yc1xuZnVuY3Rpb24gY3JlYXRlRWRpdG9yc0Jsb2NrKCkge1xuICAgIGNvbnN0IGVkaXRvcnNCbG9jayA9ICgwLCBlbGVtZW50XzEuY3JlYXRlRWxlbWVudCkoXCJkaXZcIiwgW1wiZ2FtZV9fYmxvY2tcIiwgXCJibG9ja19fZWRpdG9yc1wiXSk7XG4gICAgY29uc3QgY3NzRWRpdG9yID0gY3JlYXRlQ1NTRWRpdG9yKCk7XG4gICAgY29uc3QgaHRtbEVkaXRvciA9IGNyZWF0ZUhUTUxFZGl0b3IoKTtcbiAgICBlZGl0b3JzQmxvY2suYXBwZW5kKGNzc0VkaXRvciwgaHRtbEVkaXRvcik7XG4gICAgcmV0dXJuIGVkaXRvcnNCbG9jaztcbn1cbmV4cG9ydHMuY3JlYXRlRWRpdG9yc0Jsb2NrID0gY3JlYXRlRWRpdG9yc0Jsb2NrO1xuLy8gQ1NTXG5mdW5jdGlvbiBjcmVhdGVDU1NFZGl0b3IoKSB7XG4gICAgY29uc3QgY29udGVudCA9IGBcbiAgICA8ZGl2IGNsYXNzPVwiaW5wdXRfX2NvbnRhaW5lclwiPlxuICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgcGxhY2Vob2xkZXI9XCJUeXBlIGluIGEgQ1NTIFNlbGVjdG9yLi4uXCI+PC9pbnB1dD5cbiAgICAgIDxidXR0b24gY2xhc3M9XCJidXR0b24gYnV0dG9uLS1jaGVja1wiPkVudGVyPC9idXR0b24+XG4gICAgPC9kaXY+XG4gIGA7XG4gICAgY29uc3QgcGFyYW1zID0ge1xuICAgICAgICBjbGFzc05hbWVzOiBbXCJlZGl0b3JcIiwgXCJlZGl0b3ItLWNzc1wiXSxcbiAgICAgICAgdGl0bGU6IFwiQ1NTIEVkaXRvclwiLFxuICAgICAgICBmaWxlTmFtZTogXCJzdHlsZS5jc3NcIixcbiAgICAgICAgZWRpdG9yQ29udGVudDogY29udGVudCxcbiAgICB9O1xuICAgIGNvbnN0IGNzc0VkaXRvciA9ICgwLCBlZGl0b3JfdGVtcGxhdGVfMS5jcmVhdGVFZGl0b3IpKHBhcmFtcyk7XG4gICAgcmV0dXJuIGNzc0VkaXRvcjtcbn1cbi8vIEhUTUxcbmZ1bmN0aW9uIGNyZWF0ZUhUTUxFZGl0b3IoKSB7XG4gICAgY29uc3QgY29udGVudCA9IFwiPGRpdiBjbGFzcz0nY29udGVudF9fY29udGFpbmVyJz48L2Rpdj5cIjtcbiAgICBjb25zdCBwYXJhbXMgPSB7XG4gICAgICAgIGNsYXNzTmFtZXM6IFtcImVkaXRvclwiLCBcImVkaXRvci0taHRtbFwiXSxcbiAgICAgICAgdGl0bGU6IFwiSFRNTCBWaWV3XCIsXG4gICAgICAgIGZpbGVOYW1lOiBcInBsYXlncm91bmQuaHRtbFwiLFxuICAgICAgICBlZGl0b3JDb250ZW50OiBjb250ZW50LFxuICAgIH07XG4gICAgY29uc3QgaHRtbEVkaXRvciA9ICgwLCBlZGl0b3JfdGVtcGxhdGVfMS5jcmVhdGVFZGl0b3IpKHBhcmFtcyk7XG4gICAgcmV0dXJuIGh0bWxFZGl0b3I7XG59XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlRm9vdGVyID0gdm9pZCAwO1xuY29uc3QgZWxlbWVudF8xID0gcmVxdWlyZShcIi4uL3V0aWxzL2VsZW1lbnRcIik7XG5mdW5jdGlvbiBjcmVhdGVGb290ZXIoKSB7XG4gICAgY29uc3QgZm9vdGVyID0gKDAsIGVsZW1lbnRfMS5jcmVhdGVFbGVtZW50KShcImZvb3RlclwiLCBbXCJmb290ZXJcIiwgXCJjb250ZW50LXdpZHRoXCJdKTtcbiAgICBjb25zdCBsaW5rUlMgPSBcImh0dHBzOi8vcnMuc2Nob29sL1wiO1xuICAgIGNvbnN0IGxpbmtHSCA9IFwiaHR0cHM6Ly9naXRodWIuY29tL0hlcmVFYXN0XCI7XG4gICAgY29uc3QgZm9vdGVyQ29udGVudCA9IGBcbiAgICA8ZGl2IGNsYXNzPVwiZm9vdGVyX19jb250YWluZXJcIj5cbiAgICAgIDxzcGFuPjIwMjMsIDxhIGhyZWY9XCIke2xpbmtSU31cIiB0YXJnZXQ9XCJfYmxhbmtcIj5SUyBTY2hvb2w8L2E+IOKAlCBSUyBDU1MgU2VsZWN0b3JzPC9zcGFuPlxuICAgICAgPGEgaHJlZj1cIiR7bGlua0dIfVwiIHRhcmdldD1cIl9ibGFua1wiPkhlcmUgRWFzdDwvYT5cbiAgICA8L2Rpdj5cbiAgYDtcbiAgICBmb290ZXIuaW5zZXJ0QWRqYWNlbnRIVE1MKFwiYWZ0ZXJiZWdpblwiLCBmb290ZXJDb250ZW50KTtcbiAgICByZXR1cm4gZm9vdGVyO1xufVxuZXhwb3J0cy5jcmVhdGVGb290ZXIgPSBjcmVhdGVGb290ZXI7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlR2FtZVNlY3Rpb24gPSB2b2lkIDA7XG5jb25zdCBlbGVtZW50XzEgPSByZXF1aXJlKFwiLi4vdXRpbHMvZWxlbWVudFwiKTtcbmNvbnN0IGhlYWRlcl8xID0gcmVxdWlyZShcIi4vaGVhZGVyXCIpO1xuY29uc3QgdGFza18xID0gcmVxdWlyZShcIi4vdGFza1wiKTtcbmNvbnN0IGVkaXRvcnNfMSA9IHJlcXVpcmUoXCIuL2VkaXRvcnMvZWRpdG9yc1wiKTtcbi8vXG5mdW5jdGlvbiBjcmVhdGVHYW1lU2VjdGlvbigpIHtcbiAgICBjb25zdCBnYW1lU2VjdGlvbiA9ICgwLCBlbGVtZW50XzEuY3JlYXRlRWxlbWVudCkoXCJzZWN0aW9uXCIsIFtcInNlY3Rpb25fX2dhbWVcIl0pO1xuICAgIGNvbnN0IGhlYWRlciA9ICgwLCBoZWFkZXJfMS5jcmVhdGVIZWFkZXIpKCk7XG4gICAgY29uc3QgZ2FtZSA9ICgwLCBlbGVtZW50XzEuY3JlYXRlRWxlbWVudCkoXCJzZWN0aW9uXCIsIFtcImdhbWVcIl0pO1xuICAgIGNvbnN0IHRhc2tCbG9jayA9ICgwLCB0YXNrXzEuY3JlYXRlVGFza0Jsb2NrKSgpO1xuICAgIGNvbnN0IGVkaXRvcnNCbG9jayA9ICgwLCBlZGl0b3JzXzEuY3JlYXRlRWRpdG9yc0Jsb2NrKSgpO1xuICAgIGdhbWUuYXBwZW5kKHRhc2tCbG9jaywgZWRpdG9yc0Jsb2NrKTtcbiAgICBnYW1lU2VjdGlvbi5hcHBlbmQoaGVhZGVyLCBnYW1lKTtcbiAgICByZXR1cm4gZ2FtZVNlY3Rpb247XG59XG5leHBvcnRzLmNyZWF0ZUdhbWVTZWN0aW9uID0gY3JlYXRlR2FtZVNlY3Rpb247XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlSGVhZGVyID0gdm9pZCAwO1xuY29uc3QgZWxlbWVudF8xID0gcmVxdWlyZShcIi4uL3V0aWxzL2VsZW1lbnRcIik7XG5mdW5jdGlvbiBjcmVhdGVIZWFkZXIoKSB7XG4gICAgY29uc3QgaGVhZGVyID0gKDAsIGVsZW1lbnRfMS5jcmVhdGVFbGVtZW50KShcImhlYWRlclwiLCBbXCJoZWFkZXJcIl0pO1xuICAgIGNvbnN0IHRpdGxlID0gY3JlYXRlVGl0bGUoKTtcbiAgICBjb25zdCBidXR0b25zID0gY3JlYXRlSGVhZGVyQnV0dG9ucygpO1xuICAgIGhlYWRlci5pbnNlcnRBZGphY2VudEhUTUwoXCJhZnRlcmJlZ2luXCIsIHRpdGxlKTtcbiAgICBoZWFkZXIuaW5zZXJ0QWRqYWNlbnRIVE1MKFwiYmVmb3JlZW5kXCIsIGJ1dHRvbnMpO1xuICAgIHJldHVybiBoZWFkZXI7XG59XG5leHBvcnRzLmNyZWF0ZUhlYWRlciA9IGNyZWF0ZUhlYWRlcjtcbi8vIFRpdGxlXG5mdW5jdGlvbiBjcmVhdGVUaXRsZSgpIHtcbiAgICBjb25zdCBTVkdJY29uID0gYFxuICAgIDxzdmcgY2xhc3M9XCJpY29uXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPlxuICAgICAgPHBhdGggZD1cIk03LjA1MDM3IDBMMi41MzMyZS0wNyAxMkg3LjA1MDM3TDE0IDExLjgyODZMNy4wNTAzNyAwWlwiIGZpbGw9XCIjNkJDQjVCXCIvPlxuICAgICAgPGNpcmNsZSBjeD1cIjM2LjVcIiBjeT1cIjYuNVwiIHI9XCI2LjVcIiBmaWxsPVwiI0ZGRTIwOFwiLz5cbiAgICAgIDxyZWN0IHg9XCIxNlwiIHdpZHRoPVwiMTJcIiBoZWlnaHQ9XCIxMlwiIGZpbGw9XCIjNzI1Q0ZBXCIvPlxuICAgIDwvc3ZnPlxuICBgO1xuICAgIGNvbnN0IGhlYWRlclRpdGxlID0gYFxuICAgIDxkaXYgY2xhc3M9XCJoZWFkZXJfX3RpdGxlXCI+XG4gICAgICA8aDEgY2xhc3M9J3RpdGxlX190ZXh0Jz5DU1MgUGxheWdyb3VuZDwvaDE+XG4gICAgICA8ZGl2IGNsYXNzPVwidGl0bGVfX2ljb25cIj5cbiAgICAgICAgJHtTVkdJY29ufVxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+ICBcbiAgYDtcbiAgICByZXR1cm4gaGVhZGVyVGl0bGU7XG59XG4vLyBCdXR0b25zXG5mdW5jdGlvbiBjcmVhdGVIZWFkZXJCdXR0b25zKCkge1xuICAgIGNvbnN0IGJ1dHRvbkhpbnQgPSBcIjxidXR0b24gY2xhc3M9J2J1dHRvbiBidXR0b24tLWhpbnQnPkhpbnQ8L2J1dHRvbj5cIjtcbiAgICBjb25zdCBidXR0b25SZXNldCA9IFwiPGJ1dHRvbiBjbGFzcz0nYnV0dG9uIGJ1dHRvbi0tcmVzZXQnPlJlc2V0PC9idXR0b24+XCI7XG4gICAgY29uc3QgYnV0dG9uTGV2ZWxzID0gXCI8YnV0dG9uIGNsYXNzPSdidXR0b24gYnV0dG9uLS1sZXZlbHMnPj08L2J1dHRvbj5cIjtcbiAgICBjb25zdCBsZXZlbEluZm8gPSBgXG4gICAgPGRpdiBjbGFzcz1cImhlYWRlcl9fbGV2ZWxzXCI+XG4gICAgICA8c3BhbiBjbGFzcz1cImxldmVsX19zdGF0dXMgbGV2ZWwtLXVuZmluaXNoZWRcIj48L3NwYW4+PHNwYW4+MS8xMDwvc3Bhbj5cbiAgICAgICR7YnV0dG9uTGV2ZWxzfVxuICAgIDwvZGl2PlxuICBgO1xuICAgIGNvbnN0IGhlYWRlckJ1dHRvbnMgPSBgXG4gICAgPGRpdiBjbGFzcz1cImhlYWRlcl9fYnV0dG9uc1wiPlxuICAgICAgJHtsZXZlbEluZm99XG4gICAgICAke2J1dHRvbkhpbnR9XG4gICAgICAke2J1dHRvblJlc2V0fVxuICAgIDwvZGl2PlxuICBgO1xuICAgIHJldHVybiBoZWFkZXJCdXR0b25zO1xufVxuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZUxldmVsc0JvZHkgPSB2b2lkIDA7XG5jb25zdCBlbGVtZW50XzEgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHMvZWxlbWVudFwiKTtcbmNvbnN0IGxldmVsc19kYXRhXzEgPSByZXF1aXJlKFwiLi4vLi4vZGF0YS9sZXZlbHMtZGF0YVwiKTtcbmZ1bmN0aW9uIGNyZWF0ZUxldmVsc0JvZHkoKSB7XG4gICAgY29uc3QgbGV2ZWxzQm9keSA9ICgwLCBlbGVtZW50XzEuY3JlYXRlRWxlbWVudCkoXCJkaXZcIiwgW1wibGV2ZWxzX19ib2R5XCJdKTtcbiAgICBjb25zdCBsZXZlbHNDb250YWluZXIgPSBjcmVhdGVMZXZlbEl0ZW1zKCk7XG4gICAgbGV2ZWxzQm9keS5hcHBlbmQobGV2ZWxzQ29udGFpbmVyKTtcbiAgICByZXR1cm4gbGV2ZWxzQm9keTtcbn1cbmV4cG9ydHMuY3JlYXRlTGV2ZWxzQm9keSA9IGNyZWF0ZUxldmVsc0JvZHk7XG5mdW5jdGlvbiBjcmVhdGVMZXZlbEl0ZW1zKCkge1xuICAgIGNvbnN0IGxldmVsc0NvbnRhaW5lciA9ICgwLCBlbGVtZW50XzEuY3JlYXRlRWxlbWVudCkoXCJkaXZcIiwgW1wibGV2ZWxzX19jb250YWluZXJcIl0pO1xuICAgIGxldmVsc19kYXRhXzEubGV2ZWxzRGF0YS5mb3JFYWNoKChsZXZlbCkgPT4ge1xuICAgICAgICBjb25zdCBpdGVtID0gKDAsIGVsZW1lbnRfMS5jcmVhdGVFbGVtZW50KShcImRpdlwiLCBbXCJsZXZlbF9faXRlbVwiXSk7XG4gICAgICAgIGl0ZW0uaW5uZXJIVE1MID0gYFxuICAgICAgPHNwYW4gY2xhc3M9XCJsZXZlbF9fbnVtYmVyXCI+JHtsZXZlbC5pZH08L3NwYW4+XG4gICAgICA8c3BhbiBjbGFzcz1cImxldmVsX190aXRsZVwiPiR7bGV2ZWwudGl0bGV9PC9zcGFuPlxuICAgICAgPHNwYW4gY2xhc3M9XCJsZXZlbF9fc3RhdHVzIGxldmVsLS11bmZpbmlzaGVkXCI+PC9zcGFuPlxuICAgIGA7XG4gICAgICAgIGxldmVsc0NvbnRhaW5lci5hcHBlbmQoaXRlbSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIGxldmVsc0NvbnRhaW5lcjtcbn1cbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVMZXZlbHNIZWFkZXIgPSB2b2lkIDA7XG5jb25zdCBlbGVtZW50XzEgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHMvZWxlbWVudFwiKTtcbmZ1bmN0aW9uIGNyZWF0ZUxldmVsc0hlYWRlcigpIHtcbiAgICBjb25zdCBoZWFkZXIgPSAoMCwgZWxlbWVudF8xLmNyZWF0ZUVsZW1lbnQpKFwiZGl2XCIsIFtcImxldmVsc19faGVhZGVyXCJdKTtcbiAgICBjb25zdCBidXR0b25QcmV2ID0gYFxuICAgIDxidXR0b24gY2xhc3M9J2J1dHRvbiBsZXZlbHNfX2J1dHRvbiBidXR0b24tLXByZXYnPlxuICAgICAgPHNwYW4+Jmx0Ozwvc3Bhbj5cbiAgICA8L2J1dHRvbj5cbiAgICBgO1xuICAgIGNvbnN0IGJ1dHRvbk5leHQgPSBgXG4gICAgPGJ1dHRvbiBjbGFzcz0nYnV0dG9uIGxldmVsc19fYnV0dG9uIGJ1dHRvbi0tbmV4dCc+XG4gICAgICA8c3Bhbj4mZ3Q7PC9zcGFuPlxuICAgIDwvYnV0dG9uPlxuICAgIGA7XG4gICAgY29uc3QgaGVhZGVyQ29udGVudCA9IGBcbiAgICA8ZGl2IGNsYXNzPVwiaGVhZGVyX19jb250YWluZXJcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJoZWFkZXJfX3RpdGxlXCJcIj5cbiAgICAgICAgPGgzPkxldmVsPC9oMz5cbiAgICAgICAgPHNwYW4+MS8xMDwvc3Bhbj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz1cImxldmVsc19fYnV0dG9uc1wiPlxuICAgICAgICAke2J1dHRvblByZXZ9XG4gICAgICAgICR7YnV0dG9uTmV4dH1cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICBgO1xuICAgIGNvbnN0IGJ1dHRvbkhpZGUgPSBgXG4gICAgPGRpdiBjbGFzcz1cImJ1dHRvbl9fY29udGFpbmVyXCI+XG4gICAgICA8YnV0dG9uIGNsYXNzPVwiYnV0dG9uIGJ1dHRvbi0taGlkZVwiPkhpZGU8L2J1dHRvbj5cbiAgICA8L2Rpdj5cbiAgYDtcbiAgICBoZWFkZXIuaW5zZXJ0QWRqYWNlbnRIVE1MKFwiYWZ0ZXJiZWdpblwiLCBoZWFkZXJDb250ZW50KTtcbiAgICBoZWFkZXIuaW5zZXJ0QWRqYWNlbnRIVE1MKFwiYWZ0ZXJiZWdpblwiLCBidXR0b25IaWRlKTtcbiAgICByZXR1cm4gaGVhZGVyO1xufVxuZXhwb3J0cy5jcmVhdGVMZXZlbHNIZWFkZXIgPSBjcmVhdGVMZXZlbHNIZWFkZXI7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlTGV2ZWxzU2VjdGlvbiA9IHZvaWQgMDtcbmNvbnN0IGVsZW1lbnRfMSA9IHJlcXVpcmUoXCIuLi8uLi91dGlscy9lbGVtZW50XCIpO1xuY29uc3QgbGV2ZWxzX2hlYWRlcl8xID0gcmVxdWlyZShcIi4vbGV2ZWxzLWhlYWRlclwiKTtcbmNvbnN0IGxldmVsc19ib2R5XzEgPSByZXF1aXJlKFwiLi9sZXZlbHMtYm9keVwiKTtcbi8vIExldmVsc1xuZnVuY3Rpb24gY3JlYXRlTGV2ZWxzU2VjdGlvbigpIHtcbiAgICBjb25zdCBsZXZlbHNQYW5lbCA9ICgwLCBlbGVtZW50XzEuY3JlYXRlRWxlbWVudCkoXCJzZWN0aW9uXCIsIFtcInNlY3Rpb25fX2xldmVsc1wiXSk7XG4gICAgY29uc3QgaGVhZGVyID0gKDAsIGxldmVsc19oZWFkZXJfMS5jcmVhdGVMZXZlbHNIZWFkZXIpKCk7XG4gICAgY29uc3QgYm9keSA9ICgwLCBsZXZlbHNfYm9keV8xLmNyZWF0ZUxldmVsc0JvZHkpKCk7XG4gICAgbGV2ZWxzUGFuZWwuYXBwZW5kKGhlYWRlciwgYm9keSk7XG4gICAgcmV0dXJuIGxldmVsc1BhbmVsO1xufVxuZXhwb3J0cy5jcmVhdGVMZXZlbHNTZWN0aW9uID0gY3JlYXRlTGV2ZWxzU2VjdGlvbjtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVNYWluID0gdm9pZCAwO1xuY29uc3QgZWxlbWVudF8xID0gcmVxdWlyZShcIi4uL3V0aWxzL2VsZW1lbnRcIik7XG5jb25zdCBnYW1lXzEgPSByZXF1aXJlKFwiLi9nYW1lXCIpO1xuY29uc3QgbGV2ZWxzXzEgPSByZXF1aXJlKFwiLi9sZXZlbHMvbGV2ZWxzXCIpO1xuLy8gTWFpblxuZnVuY3Rpb24gY3JlYXRlTWFpbigpIHtcbiAgICBjb25zdCBtYWluID0gKDAsIGVsZW1lbnRfMS5jcmVhdGVFbGVtZW50KShcIm1haW5cIiwgW1wibWFpblwiLCBcImNvbnRlbnQtd2lkdGhcIl0pO1xuICAgIGNvbnN0IGdhbWVTZWN0aW9uID0gKDAsIGdhbWVfMS5jcmVhdGVHYW1lU2VjdGlvbikoKTtcbiAgICBjb25zdCBsZXZlbHNTZWN0aW9uID0gKDAsIGxldmVsc18xLmNyZWF0ZUxldmVsc1NlY3Rpb24pKCk7XG4gICAgbWFpbi5hcHBlbmQoZ2FtZVNlY3Rpb24sIGxldmVsc1NlY3Rpb24pO1xuICAgIHJldHVybiBtYWluO1xufVxuZXhwb3J0cy5jcmVhdGVNYWluID0gY3JlYXRlTWFpbjtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVUYXNrQmxvY2sgPSB2b2lkIDA7XG5jb25zdCBlbGVtZW50XzEgPSByZXF1aXJlKFwiLi4vdXRpbHMvZWxlbWVudFwiKTtcbi8vIFRhc2tcbmZ1bmN0aW9uIGNyZWF0ZVRhc2tCbG9jaygpIHtcbiAgICBjb25zdCB0YXNrQmxvY2sgPSAoMCwgZWxlbWVudF8xLmNyZWF0ZUVsZW1lbnQpKFwiZGl2XCIsIFtcImdhbWVfX2Jsb2NrXCIsIFwiYmxvY2tfX3Rhc2tcIl0pO1xuICAgIGNvbnN0IGNvbnRlbnQgPSBgXG4gICAgPGgyIGNsYXNzPVwidGFza19fdGV4dFwiPkhlcmUgZ29lcyB0aGUgdGFzay4uLjwvaDI+XG4gICAgPGRpdiBjbGFzcz1cInRhc2tfX2dyYXBoaWNzXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiZ3JhcGhpY3NfX2NvbnRhaW5lclwiPjwvZGl2PlxuICAgIDwvZGl2PlxuICBgO1xuICAgIHRhc2tCbG9jay5pbnNlcnRBZGphY2VudEhUTUwoXCJhZnRlcmJlZ2luXCIsIGNvbnRlbnQpO1xuICAgIHJldHVybiB0YXNrQmxvY2s7XG59XG5leHBvcnRzLmNyZWF0ZVRhc2tCbG9jayA9IGNyZWF0ZVRhc2tCbG9jaztcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5sZXZlbHNEYXRhID0gdm9pZCAwO1xuZXhwb3J0cy5sZXZlbHNEYXRhID0gW1xuICAgIHtcbiAgICAgICAgaWQ6IFwiMVwiLFxuICAgICAgICB0aXRsZTogXCJBXCIsXG4gICAgICAgIGFuc3dlcjogXCJ0cmlhbmdsZVwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICBpZDogXCIyXCIsXG4gICAgICAgIHRpdGxlOiBcIkEgQlwiLFxuICAgICAgICBhbnN3ZXI6IFwidHJpYW5nbGVcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgaWQ6IFwiM1wiLFxuICAgICAgICB0aXRsZTogXCIjaWRcIixcbiAgICAgICAgYW5zd2VyOiBcInRyaWFuZ2xlXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGlkOiBcIjRcIixcbiAgICAgICAgdGl0bGU6IFwiLmNsYXNzbmFtZVwiLFxuICAgICAgICBhbnN3ZXI6IFwidHJpYW5nbGVcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgaWQ6IFwiNVwiLFxuICAgICAgICB0aXRsZTogXCJBLmNsYXNzbmFtZVwiLFxuICAgICAgICBhbnN3ZXI6IFwidHJpYW5nbGVcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgaWQ6IFwiNlwiLFxuICAgICAgICB0aXRsZTogXCIqXCIsXG4gICAgICAgIGFuc3dlcjogXCJ0cmlhbmdsZVwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICBpZDogXCI3XCIsXG4gICAgICAgIHRpdGxlOiBcIlthdHRyaWJ1dGVdXCIsXG4gICAgICAgIGFuc3dlcjogXCJ0cmlhbmdsZVwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICBpZDogXCI4XCIsXG4gICAgICAgIHRpdGxlOiBcIjpuLWNoaWxkKEEpXCIsXG4gICAgICAgIGFuc3dlcjogXCJ0cmlhbmdsZVwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICBpZDogXCI5XCIsXG4gICAgICAgIHRpdGxlOiBcIjplbXB0eVwiLFxuICAgICAgICBhbnN3ZXI6IFwidHJpYW5nbGVcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgaWQ6IFwiMTBcIixcbiAgICAgICAgdGl0bGU6IFwiOm5vdChYKVwiLFxuICAgICAgICBhbnN3ZXI6IFwidHJpYW5nbGVcIixcbiAgICB9LFxuXTtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pbml0TGlzdGVuZXJzID0gdm9pZCAwO1xuY29uc3QgdG9nZ2xlX3NpZGVfcGFuZWxfMSA9IHJlcXVpcmUoXCIuL3RvZ2dsZS1zaWRlLXBhbmVsXCIpO1xuZnVuY3Rpb24gaW5pdExpc3RlbmVycygpIHtcbiAgICBjb25zdCBzaG93QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5idXR0b24tLWxldmVsc1wiIC8qIFNlbGVjdG9yLlNob3dMZXZlbHNCdG4gKi8pO1xuICAgIGNvbnN0IGhpZGVCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmJ1dHRvbi0taGlkZVwiIC8qIFNlbGVjdG9yLkhpZGVMZXZlbHNCdG4gKi8pO1xuICAgIGlmICghc2hvd0J1dHRvbilcbiAgICAgICAgdGhyb3cgRXJyb3IoYCR7XCIuYnV0dG9uLS1sZXZlbHNcIiAvKiBTZWxlY3Rvci5TaG93TGV2ZWxzQnRuICovfSBpcyBub3QgZm91bmQuLi5gKTtcbiAgICBpZiAoIWhpZGVCdXR0b24pXG4gICAgICAgIHRocm93IEVycm9yKGAke1wiLmJ1dHRvbi0taGlkZVwiIC8qIFNlbGVjdG9yLkhpZGVMZXZlbHNCdG4gKi99IGlzIG5vdCBmb3VuZC4uLmApO1xuICAgIHNob3dCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRvZ2dsZV9zaWRlX3BhbmVsXzEuc2hvd1BhbmVsKTtcbiAgICBoaWRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0b2dnbGVfc2lkZV9wYW5lbF8xLmhpZGVQYW5lbCk7XG4gICAgLy8gd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xuICAgIC8vICAgY29uc29sZS5sb2coZS50YXJnZXQpO1xuICAgIC8vIH0pO1xufVxuZXhwb3J0cy5pbml0TGlzdGVuZXJzID0gaW5pdExpc3RlbmVycztcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5oaWRlUGFuZWwgPSBleHBvcnRzLnNob3dQYW5lbCA9IHZvaWQgMDtcbi8vIFNob3dcbmZ1bmN0aW9uIHNob3dQYW5lbChlKSB7XG4gICAgaWYgKHdpbmRvdy5pbm5lcldpZHRoID4gOTgwKVxuICAgICAgICByZXR1cm47XG4gICAgY29uc3QgdGFyZ2V0ID0gZS50YXJnZXQ7XG4gICAgY29uc29sZS5sb2codGFyZ2V0KTtcbiAgICBpZiAoIXRhcmdldCB8fCAhKHRhcmdldCBpbnN0YW5jZW9mIEhUTUxCdXR0b25FbGVtZW50KSlcbiAgICAgICAgcmV0dXJuO1xuICAgIGlmICghdGFyZ2V0LmNsb3Nlc3QoXCIuYnV0dG9uLS1sZXZlbHNcIiAvKiBTZWxlY3Rvci5TaG93TGV2ZWxzQnRuICovKSlcbiAgICAgICAgcmV0dXJuO1xuICAgIGNvbnN0IGxldmVsc1BhbmVsID0gZ2V0TGV2ZWxzUGFuZWwoKTtcbiAgICBsZXZlbHNQYW5lbCA9PT0gbnVsbCB8fCBsZXZlbHNQYW5lbCA9PT0gdm9pZCAwID8gdm9pZCAwIDogbGV2ZWxzUGFuZWwuY2xhc3NMaXN0LmFkZChcInBhbmVsLS12aXNpYmxlXCIpO1xufVxuZXhwb3J0cy5zaG93UGFuZWwgPSBzaG93UGFuZWw7XG4vLyBIaWRlXG5mdW5jdGlvbiBoaWRlUGFuZWwoZSkge1xuICAgIGlmICh3aW5kb3cuaW5uZXJXaWR0aCA+IDk4MClcbiAgICAgICAgcmV0dXJuO1xuICAgIGNvbnN0IHRhcmdldCA9IGUudGFyZ2V0O1xuICAgIGlmICghdGFyZ2V0IHx8ICEodGFyZ2V0IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpKVxuICAgICAgICByZXR1cm47XG4gICAgaWYgKCF0YXJnZXQuY2xvc2VzdChcIi5idXR0b24tLWhpZGVcIiAvKiBTZWxlY3Rvci5IaWRlTGV2ZWxzQnRuICovKSlcbiAgICAgICAgcmV0dXJuO1xuICAgIGNvbnN0IGxldmVsc1BhbmVsID0gZ2V0TGV2ZWxzUGFuZWwoKTtcbiAgICBsZXZlbHNQYW5lbCA9PT0gbnVsbCB8fCBsZXZlbHNQYW5lbCA9PT0gdm9pZCAwID8gdm9pZCAwIDogbGV2ZWxzUGFuZWwuY2xhc3NMaXN0LnJlbW92ZShcInBhbmVsLS12aXNpYmxlXCIpO1xufVxuZXhwb3J0cy5oaWRlUGFuZWwgPSBoaWRlUGFuZWw7XG4vLyBHZXQgcGFuZWxcbmZ1bmN0aW9uIGdldExldmVsc1BhbmVsKCkge1xuICAgIGNvbnN0IGxldmVsc1BhbmVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zZWN0aW9uX19sZXZlbHNcIiAvKiBTZWxlY3Rvci5MZXZlbHNQYW5lbCAqLyk7XG4gICAgaWYgKCFsZXZlbHNQYW5lbCB8fCAhKGxldmVsc1BhbmVsIGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpKSB7XG4gICAgICAgIHRocm93IEVycm9yKGAke1wiLnNlY3Rpb25fX2xldmVsc1wiIC8qIFNlbGVjdG9yLkxldmVsc1BhbmVsICovfSBpcyBub3QgZm91bmQuLi5gKTtcbiAgICB9XG4gICAgcmV0dXJuIGxldmVsc1BhbmVsO1xufVxuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZUVsZW1lbnQgPSB2b2lkIDA7XG4vLyBDcmVhdGUgZWxlbWVudFxuZnVuY3Rpb24gY3JlYXRlRWxlbWVudCh0YWcsIGNsYXNzTmFtZXMsIHRleHQpIHtcbiAgICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0YWcpO1xuICAgIGVsZW1lbnQuY2xhc3NMaXN0LmFkZCguLi5jbGFzc05hbWVzKTtcbiAgICBpZiAodGV4dClcbiAgICAgICAgZWxlbWVudC50ZXh0Q29udGVudCA9IHRleHQ7XG4gICAgcmV0dXJuIGVsZW1lbnQ7XG59XG5leHBvcnRzLmNyZWF0ZUVsZW1lbnQgPSBjcmVhdGVFbGVtZW50O1xuIiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIi8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uciA9IChleHBvcnRzKSA9PiB7XG5cdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXHR9XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zb2xlLmxvZyhcIuKchSBDU1MgUGxheWdyb3VuZFwiKTtcbnJlcXVpcmUoXCIuL3N0eWxlcy9pbmRleC5jc3NcIik7XG5jb25zdCBhcHBfMSA9IHJlcXVpcmUoXCIuL2NvbXBvbmVudHMvYXBwXCIpO1xuY29uc3QgbGlzdGVuZXJzXzEgPSByZXF1aXJlKFwiLi9zY3JpcHRzL2xpc3RlbmVyc1wiKTtcbigwLCBhcHBfMS5yZW5kZXJBcHApKCk7XG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKFwi4pyFIERPTSBSZW5kZXJlZFwiKTtcbiAgICAoMCwgbGlzdGVuZXJzXzEuaW5pdExpc3RlbmVycykoKTtcbn0pO1xuIl0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiaSIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwiY29uY2F0Iiwiam9pbiIsIm1vZHVsZXMiLCJtZWRpYVF1ZXJ5IiwiZGVkdXBlIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImxlbmd0aCIsIl9pIiwiX2FycmF5TGlrZVRvQXJyYXkiLCJhcnIiLCJsZW4iLCJhcnIyIiwiQXJyYXkiLCJfaXRlbSIsImlzQXJyYXkiLCJfYXJyYXlXaXRoSG9sZXMiLCJTeW1ib2wiLCJpdGVyYXRvciIsIl9zIiwiX2UiLCJfYXJyIiwiX24iLCJfZCIsImNhbGwiLCJuZXh0IiwiZG9uZSIsInZhbHVlIiwiZXJyIiwiX2l0ZXJhYmxlVG9BcnJheUxpbWl0IiwibyIsIm1pbkxlbiIsIm4iLCJPYmplY3QiLCJwcm90b3R5cGUiLCJzbGljZSIsImNvbnN0cnVjdG9yIiwibmFtZSIsImZyb20iLCJ0ZXN0IiwiX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IiwiVHlwZUVycm9yIiwiX25vbkl0ZXJhYmxlUmVzdCIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJvcHRpb25zIiwibG9jYWxzIiwibWVtbyIsImdldFRhcmdldCIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsInN0eWxlc0luRG9tIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXgiLCJvYmoiLCJjc3MiLCJtZWRpYSIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkU3R5bGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZSIsImNyZWF0ZUVsZW1lbnQiLCJhdHRyaWJ1dGVzIiwibm9uY2UiLCJrZXlzIiwiZm9yRWFjaCIsImtleSIsInNldEF0dHJpYnV0ZSIsImluc2VydCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJ0ZXh0U3RvcmUiLCJyZXBsYWNlVGV4dCIsInJlcGxhY2VtZW50IiwiZmlsdGVyIiwiQm9vbGVhbiIsImFwcGx5VG9TaW5nbGV0b25UYWciLCJyZW1vdmUiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImNzc05vZGUiLCJjcmVhdGVUZXh0Tm9kZSIsImNoaWxkTm9kZXMiLCJyZW1vdmVDaGlsZCIsImluc2VydEJlZm9yZSIsImFwcGx5VG9UYWciLCJyZW1vdmVBdHRyaWJ1dGUiLCJmaXJzdENoaWxkIiwic2luZ2xldG9uIiwic2luZ2xldG9uQ291bnRlciIsInVwZGF0ZSIsInN0eWxlSW5kZXgiLCJiaW5kIiwicGFyZW50Tm9kZSIsInJlbW92ZVN0eWxlRWxlbWVudCIsIm5ld09iaiIsImFsbCIsImF0b2IiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2luZGV4Iiwic3BsaWNlIiwiZGVmaW5lUHJvcGVydHkiLCJyZW5kZXJBcHAiLCJmb290ZXJfMSIsIm1haW5fMSIsIm1haW4iLCJjcmVhdGVNYWluIiwiZm9vdGVyIiwiY3JlYXRlRm9vdGVyIiwiYm9keSIsImFwcGVuZCIsImNyZWF0ZUVkaXRvciIsImVsZW1lbnRfMSIsInBhcmFtcyIsImVkaXRvciIsImNsYXNzTmFtZXMiLCJlZGl0b3JIZWFkZXIiLCJ0aXRsZSIsImZpbGVOYW1lIiwiZWRpdG9yQm9keSIsInNwYW5zIiwibGluZXNTcGFucyIsImVkaXRvckNvbnRlbnQiLCJpbnNlcnRBZGphY2VudEhUTUwiLCJjcmVhdGVFZGl0b3JzQmxvY2siLCJlZGl0b3JfdGVtcGxhdGVfMSIsImVkaXRvcnNCbG9jayIsImNzc0VkaXRvciIsImh0bWxFZGl0b3IiLCJjcmVhdGVHYW1lU2VjdGlvbiIsImhlYWRlcl8xIiwidGFza18xIiwiZWRpdG9yc18xIiwiZ2FtZVNlY3Rpb24iLCJoZWFkZXIiLCJjcmVhdGVIZWFkZXIiLCJnYW1lIiwidGFza0Jsb2NrIiwiY3JlYXRlVGFza0Jsb2NrIiwiY3JlYXRlTGV2ZWxzQm9keSIsImxldmVsc19kYXRhXzEiLCJsZXZlbHNCb2R5IiwibGV2ZWxzQ29udGFpbmVyIiwibGV2ZWxzRGF0YSIsImxldmVsIiwiaW5uZXJIVE1MIiwiY3JlYXRlTGV2ZWxJdGVtcyIsImNyZWF0ZUxldmVsc0hlYWRlciIsImNyZWF0ZUxldmVsc1NlY3Rpb24iLCJsZXZlbHNfaGVhZGVyXzEiLCJsZXZlbHNfYm9keV8xIiwibGV2ZWxzUGFuZWwiLCJnYW1lXzEiLCJsZXZlbHNfMSIsImxldmVsc1NlY3Rpb24iLCJhbnN3ZXIiLCJpbml0TGlzdGVuZXJzIiwidG9nZ2xlX3NpZGVfcGFuZWxfMSIsInNob3dCdXR0b24iLCJoaWRlQnV0dG9uIiwiYWRkRXZlbnRMaXN0ZW5lciIsInNob3dQYW5lbCIsImhpZGVQYW5lbCIsImdldExldmVsc1BhbmVsIiwiSFRNTEVsZW1lbnQiLCJpbm5lcldpZHRoIiwiY29uc29sZSIsImxvZyIsIkhUTUxCdXR0b25FbGVtZW50IiwiY2xvc2VzdCIsImNsYXNzTGlzdCIsImFkZCIsInRhZyIsInRleHQiLCJlbGVtZW50IiwidGV4dENvbnRlbnQiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJ1bmRlZmluZWQiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImVudW1lcmFibGUiLCJnZXQiLCJwcm9wIiwiaGFzT3duUHJvcGVydHkiLCJyIiwidG9TdHJpbmdUYWciLCJuYyIsImFwcF8xIiwibGlzdGVuZXJzXzEiXSwic291cmNlUm9vdCI6IiJ9