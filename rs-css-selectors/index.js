(()=>{"use strict";var n={4238:(n,e,t)=>{t.d(e,{Z:()=>c});var l=t(4015),a=t.n(l),o=t(3645),A=t.n(o),i=t(9118),r=t(7973),s=t(550),d=A()(a());d.i(i.Z),d.i(r.Z),d.i(s.Z),d.push([n.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]);const c=d},7973:(n,e,t)=>{t.d(e,{Z:()=>i});var l=t(4015),a=t.n(l),o=t(3645),A=t.n(o)()(a());A.push([n.id,".dance {\n  animation: dance 1s ease-in infinite;\n}\n\n@keyframes dance {\n  0% { transform: translate(0, 0) rotate(0deg); }\n  25% { transform: translate(2px, 2px) rotate(5deg); }\n  50% { transform: translate(0, 0) rotate(0eg); }\n  75% { transform: translate(-2px, 2px) rotate(-5deg); }\n  100% { transform: translate(0, 0) rotate(0deg); }\n}","",{version:3,sources:["webpack://./src/styles/animation/dance.css"],names:[],mappings:"AAAA;EACE,oCAAoC;AACtC;;AAEA;EACE,KAAK,uCAAuC,EAAE;EAC9C,MAAM,2CAA2C,EAAE;EACnD,MAAM,sCAAsC,EAAE;EAC9C,MAAM,6CAA6C,EAAE;EACrD,OAAO,uCAAuC,EAAE;AAClD",sourcesContent:[".dance {\n  animation: dance 1s ease-in infinite;\n}\n\n@keyframes dance {\n  0% { transform: translate(0, 0) rotate(0deg); }\n  25% { transform: translate(2px, 2px) rotate(5deg); }\n  50% { transform: translate(0, 0) rotate(0eg); }\n  75% { transform: translate(-2px, 2px) rotate(-5deg); }\n  100% { transform: translate(0, 0) rotate(0deg); }\n}"],sourceRoot:""}]);const i=A},550:(n,e,t)=>{t.d(e,{Z:()=>i});var l=t(4015),a=t.n(l),o=t(3645),A=t.n(o)()(a());A.push([n.id,".hide {\n  transition: all 0.2s cubic-bezier(2, 4.5, 1, 1.5);\n  animation: hide 1.5s forwards;\n}\n\n@keyframes hide {\n  0% {\n    transform: translateX(0);\n  }\n\n  50% {\n    transform: translateX(120px);\n  }\n\n  100% {\n    transform: translateX(-1000px);\n  }\n}","",{version:3,sources:["webpack://./src/styles/animation/hide.css"],names:[],mappings:"AAAA;EACE,iDAAiD;EACjD,6BAA6B;AAC/B;;AAEA;EACE;IACE,wBAAwB;EAC1B;;EAEA;IACE,4BAA4B;EAC9B;;EAEA;IACE,8BAA8B;EAChC;AACF",sourcesContent:[".hide {\n  transition: all 0.2s cubic-bezier(2, 4.5, 1, 1.5);\n  animation: hide 1.5s forwards;\n}\n\n@keyframes hide {\n  0% {\n    transform: translateX(0);\n  }\n\n  50% {\n    transform: translateX(120px);\n  }\n\n  100% {\n    transform: translateX(-1000px);\n  }\n}"],sourceRoot:""}]);const i=A},9118:(n,e,t)=>{t.d(e,{Z:()=>i});var l=t(4015),a=t.n(l),o=t(3645),A=t.n(o)()(a());A.push([n.id,".shake {\n  animation: shake-animation 0.5s cubic-bezier(.36,.07,.19,.97) both;\n  transform: translate3d(0, 0, 0);\n  perspective: 1000px;\n}\n\n@keyframes shake-animation {\n  10%, 90% {\n    transform: translate3d(-1px, 0, 0);\n  }\n  \n  20%, 80% {\n    transform: translate3d(2px, 0, 0);\n  }\n\n  30%, 50%, 70% {\n    transform: translate3d(-4px, 0, 0);\n  }\n\n  40%, 60% {\n    transform: translate3d(4px, 0, 0);\n  }\n}","",{version:3,sources:["webpack://./src/styles/animation/shake.css"],names:[],mappings:"AAAA;EACE,kEAAkE;EAClE,+BAA+B;EAC/B,mBAAmB;AACrB;;AAEA;EACE;IACE,kCAAkC;EACpC;;EAEA;IACE,iCAAiC;EACnC;;EAEA;IACE,kCAAkC;EACpC;;EAEA;IACE,iCAAiC;EACnC;AACF",sourcesContent:[".shake {\n  animation: shake-animation 0.5s cubic-bezier(.36,.07,.19,.97) both;\n  transform: translate3d(0, 0, 0);\n  perspective: 1000px;\n}\n\n@keyframes shake-animation {\n  10%, 90% {\n    transform: translate3d(-1px, 0, 0);\n  }\n  \n  20%, 80% {\n    transform: translate3d(2px, 0, 0);\n  }\n\n  30%, 50%, 70% {\n    transform: translate3d(-4px, 0, 0);\n  }\n\n  40%, 60% {\n    transform: translate3d(4px, 0, 0);\n  }\n}"],sourceRoot:""}]);const i=A},7559:(n,e,t)=>{t.d(e,{Z:()=>i});var l=t(4015),a=t.n(l),o=t(3645),A=t.n(o)()(a());A.push([n.id,'/* LINKS */\n\na {\n  display: inline-block;\n  position: relative;\n}\n\na::before {\n  content: "";\n  position: absolute;\n  width: 100%;\n  height: 2px;\n  background-color: var(--red);\n  left: 0;\n  bottom: 0;\n  z-index: -10;\n\n  transition: all 0.2s ease-in-out;\n}\n\na:hover::before {\n  left: 0;\n  height: 90%;\n}\n\n/* BUTTONS */\n\nbutton {\n  outline: none;\n  border-radius: 0;\n}\n\n.button {\n  height: 20px;\n  padding: 0 10px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n\n  background-color: var(--button--grey);\n  border: 1px solid var(--black);\n\n  font-family: "JetBrains Mono", monospace;\n  font-size: 12px;\n  color: var(--black);\n  text-transform: uppercase;\n  cursor: pointer;\n\n  transition: all 0.3s ease-in-out;\n}\n\n.button:hover {\n  padding: 0 20px;\n}\n\n.button--check:hover {\n  background-color: var(--green);\n}\n\n.button--hint:hover {\n  background-color: var(--yellow);\n}\n\n.button--reset:hover {\n  background-color: var(--green);\n}\n\n.header .button--levels:hover {\n  background-color: var(--purple);\n}\n\n.levels__button {\n  width: 30px;\n}\n\n.levels__button:first-child {\n  border-right: none;\n}\n\n.button--prev:hover,\n.button--next:hover {\n  background-color: var(--yellow);\n}\n\n.button--hide {\n  height: 42px;\n}\n\n.button--hide:hover {\n  background-color: var(--red);\n}\n',"",{version:3,sources:["webpack://./src/styles/buttons.css"],names:[],mappings:"AAAA,UAAU;;AAEV;EACE,qBAAqB;EACrB,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,WAAW;EACX,WAAW;EACX,4BAA4B;EAC5B,OAAO;EACP,SAAS;EACT,YAAY;;EAEZ,gCAAgC;AAClC;;AAEA;EACE,OAAO;EACP,WAAW;AACb;;AAEA,YAAY;;AAEZ;EACE,aAAa;EACb,gBAAgB;AAClB;;AAEA;EACE,YAAY;EACZ,eAAe;;EAEf,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,cAAc;;EAEd,qCAAqC;EACrC,8BAA8B;;EAE9B,wCAAwC;EACxC,eAAe;EACf,mBAAmB;EACnB,yBAAyB;EACzB,eAAe;;EAEf,gCAAgC;AAClC;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,+BAA+B;AACjC;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,+BAA+B;AACjC;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,kBAAkB;AACpB;;AAEA;;EAEE,+BAA+B;AACjC;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,4BAA4B;AAC9B",sourcesContent:['/* LINKS */\n\na {\n  display: inline-block;\n  position: relative;\n}\n\na::before {\n  content: "";\n  position: absolute;\n  width: 100%;\n  height: 2px;\n  background-color: var(--red);\n  left: 0;\n  bottom: 0;\n  z-index: -10;\n\n  transition: all 0.2s ease-in-out;\n}\n\na:hover::before {\n  left: 0;\n  height: 90%;\n}\n\n/* BUTTONS */\n\nbutton {\n  outline: none;\n  border-radius: 0;\n}\n\n.button {\n  height: 20px;\n  padding: 0 10px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n\n  background-color: var(--button--grey);\n  border: 1px solid var(--black);\n\n  font-family: "JetBrains Mono", monospace;\n  font-size: 12px;\n  color: var(--black);\n  text-transform: uppercase;\n  cursor: pointer;\n\n  transition: all 0.3s ease-in-out;\n}\n\n.button:hover {\n  padding: 0 20px;\n}\n\n.button--check:hover {\n  background-color: var(--green);\n}\n\n.button--hint:hover {\n  background-color: var(--yellow);\n}\n\n.button--reset:hover {\n  background-color: var(--green);\n}\n\n.header .button--levels:hover {\n  background-color: var(--purple);\n}\n\n.levels__button {\n  width: 30px;\n}\n\n.levels__button:first-child {\n  border-right: none;\n}\n\n.button--prev:hover,\n.button--next:hover {\n  background-color: var(--yellow);\n}\n\n.button--hide {\n  height: 42px;\n}\n\n.button--hide:hover {\n  background-color: var(--red);\n}\n'],sourceRoot:""}]);const i=A},6410:(n,e,t)=>{t.d(e,{Z:()=>i});var l=t(4015),a=t.n(l),o=t(3645),A=t.n(o)()(a());A.push([n.id,".block__editors {\n  width: 100%;\n  max-height: 400px;\n  display: flex;\n}\n\n.editor {\n  width: 50%;\n  display: flex;\n  flex-direction: column;\n\n  border: 1px solid var(--border);\n}\n\n.editor__header {\n  width: 100%;\n  height: 40px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-shrink: 0;\n  padding: 0 15px;\n\n  border-bottom: 1px solid var(--border);\n}\n\n.editor__title {\n  opacity: 0.9;\n}\n\n.editor__file {\n  opacity: 0.5;\n}\n\n.editor__body {\n  width: 100%;\n  display: flex;\n  align-items: flex-start;\n\n  background-color: var(--white);\n  overflow-y: scroll;\n}\n\n.body__panel--lines {\n  width: 40px;\n  padding: 10px 10px;\n\n  display: flex;\n  flex-direction: column;\n  background-color: var(--back--grey);\n}\n\n.body__panel--lines span {\n  text-align: right;\n  color: var(--text--grey);\n}\n\n.body__panel--content {\n  width: 100%;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n}\n\n/* CSS, HTML */\n\n.editor--css {\n  border-right: none;\n}\n\n.editor--html .body__panel--lines {\n  background-color: transparent;\n  border-right: 1px solid var(--border);\n}\n\n.editor--html .editor__body {\n  background-color: var(--back);\n}\n\n.editor--html .content__container {\n  display: flex;\n  flex-direction: column;\n}\n\n/**/\n\n@media all and (max-width: 750px) {\n  .block__editors {\n    flex-direction: column;\n    gap: 20px;\n    max-height: initial;\n  }\n\n  .editor {\n    width: 100%;\n    max-height: 320px;\n    height: 100%;\n  }\n\n  .editor__body {\n    overflow-y: hidden;\n  }\n\n  .editor--css {\n    border-right: 1px solid var(--border);\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/editors.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,iBAAiB;EACjB,aAAa;AACf;;AAEA;EACE,UAAU;EACV,aAAa;EACb,sBAAsB;;EAEtB,+BAA+B;AACjC;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,cAAc;EACd,eAAe;;EAEf,sCAAsC;AACxC;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,WAAW;EACX,aAAa;EACb,uBAAuB;;EAEvB,8BAA8B;EAC9B,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,kBAAkB;;EAElB,aAAa;EACb,sBAAsB;EACtB,mCAAmC;AACrC;;AAEA;EACE,iBAAiB;EACjB,wBAAwB;AAC1B;;AAEA;EACE,WAAW;EACX,aAAa;EACb,aAAa;EACb,sBAAsB;AACxB;;AAEA,cAAc;;AAEd;EACE,kBAAkB;AACpB;;AAEA;EACE,6BAA6B;EAC7B,qCAAqC;AACvC;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA,GAAG;;AAEH;EACE;IACE,sBAAsB;IACtB,SAAS;IACT,mBAAmB;EACrB;;EAEA;IACE,WAAW;IACX,iBAAiB;IACjB,YAAY;EACd;;EAEA;IACE,kBAAkB;EACpB;;EAEA;IACE,qCAAqC;EACvC;AACF",sourcesContent:[".block__editors {\n  width: 100%;\n  max-height: 400px;\n  display: flex;\n}\n\n.editor {\n  width: 50%;\n  display: flex;\n  flex-direction: column;\n\n  border: 1px solid var(--border);\n}\n\n.editor__header {\n  width: 100%;\n  height: 40px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-shrink: 0;\n  padding: 0 15px;\n\n  border-bottom: 1px solid var(--border);\n}\n\n.editor__title {\n  opacity: 0.9;\n}\n\n.editor__file {\n  opacity: 0.5;\n}\n\n.editor__body {\n  width: 100%;\n  display: flex;\n  align-items: flex-start;\n\n  background-color: var(--white);\n  overflow-y: scroll;\n}\n\n.body__panel--lines {\n  width: 40px;\n  padding: 10px 10px;\n\n  display: flex;\n  flex-direction: column;\n  background-color: var(--back--grey);\n}\n\n.body__panel--lines span {\n  text-align: right;\n  color: var(--text--grey);\n}\n\n.body__panel--content {\n  width: 100%;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n}\n\n/* CSS, HTML */\n\n.editor--css {\n  border-right: none;\n}\n\n.editor--html .body__panel--lines {\n  background-color: transparent;\n  border-right: 1px solid var(--border);\n}\n\n.editor--html .editor__body {\n  background-color: var(--back);\n}\n\n.editor--html .content__container {\n  display: flex;\n  flex-direction: column;\n}\n\n/**/\n\n@media all and (max-width: 750px) {\n  .block__editors {\n    flex-direction: column;\n    gap: 20px;\n    max-height: initial;\n  }\n\n  .editor {\n    width: 100%;\n    max-height: 320px;\n    height: 100%;\n  }\n\n  .editor__body {\n    overflow-y: hidden;\n  }\n\n  .editor--css {\n    border-right: 1px solid var(--border);\n  }\n}\n"],sourceRoot:""}]);const i=A},7348:(n,e,t)=>{t.d(e,{Z:()=>i});var l=t(4015),a=t.n(l),o=t(3645),A=t.n(o)()(a());A.push([n.id,".footer {\n  width: 100%;\n}\n\n.footer__container {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 20px;\n\n  border: 1px solid var(--border);\n}\n\n.footer a {\n  color: var(--white);\n  text-decoration: none;\n}\n","",{version:3,sources:["webpack://./src/styles/footer.css"],names:[],mappings:"AAAA;EACE,WAAW;AACb;;AAEA;EACE,WAAW;EACX,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,kBAAkB;;EAElB,+BAA+B;AACjC;;AAEA;EACE,mBAAmB;EACnB,qBAAqB;AACvB",sourcesContent:[".footer {\n  width: 100%;\n}\n\n.footer__container {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 20px;\n\n  border: 1px solid var(--border);\n}\n\n.footer a {\n  color: var(--white);\n  text-decoration: none;\n}\n"],sourceRoot:""}]);const i=A},5984:(n,e,t)=>{t.d(e,{Z:()=>i});var l=t(4015),a=t.n(l),o=t(3645),A=t.n(o)()(a());A.push([n.id,".block__task {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 20px;\n}\n\n.task__text {\n  font-weight: 400;\n  text-align: center;\n  opacity: 0.9;\n}\n\n.graphics__container {\n  position: relative;\n  width: 100%;\n  min-height: 160px;\n  height: 100%;\n  padding: 10px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: var(--black);\n}\n\n/**/\n\n@media all and (max-width: 750px) {\n  .block__task {\n    height: auto;\n  }\n\n  .task__graphics {\n    height: 200px;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/graphics.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,YAAY;EACZ,aAAa;EACb,sBAAsB;EACtB,2BAA2B;EAC3B,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,gBAAgB;EAChB,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,iBAAiB;EACjB,YAAY;EACZ,aAAa;;EAEb,aAAa;EACb,uBAAuB;EACvB,mBAAmB;;EAEnB,8BAA8B;AAChC;;AAEA,GAAG;;AAEH;EACE;IACE,YAAY;EACd;;EAEA;IACE,aAAa;EACf;AACF",sourcesContent:[".block__task {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 20px;\n}\n\n.task__text {\n  font-weight: 400;\n  text-align: center;\n  opacity: 0.9;\n}\n\n.graphics__container {\n  position: relative;\n  width: 100%;\n  min-height: 160px;\n  height: 100%;\n  padding: 10px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: var(--black);\n}\n\n/**/\n\n@media all and (max-width: 750px) {\n  .block__task {\n    height: auto;\n  }\n\n  .task__graphics {\n    height: 200px;\n  }\n}\n"],sourceRoot:""}]);const i=A},3497:(n,e,t)=>{t.d(e,{Z:()=>i});var l=t(4015),a=t.n(l),o=t(3645),A=t.n(o)()(a());A.push([n.id,".header {\n  width: 100%;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.header__logo {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\nh1 {\n  font-weight: 500;\n}\n\n.header__controls,\n.header__buttons {\n  display: flex;\n  gap: 5px;\n}\n\n.level__info {\n  display: flex;\n}\n\n.header__levels {\n  display: none;\n}\n\n.header__levels .level__status {\n  display: block;\n  margin-right: 5px;\n  margin-top: 2px;\n}\n\n.button--levels {\n  margin-left: 15px;\n}\n\n/**/\n\n@media all and (max-width: 980px) {\n  .header {\n    position: fixed;\n    width: 100%;\n    left: 0;\n    top: 0;\n    padding: 20px;\n\n    background-color: var(--back);\n  }\n\n  .header__levels {\n    display: flex;\n  }\n}\n\n/* ICON */\n\n.logo__icon {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n}\n\n.logo__icon svg {\n  width: 60px;\n  height: 13px;\n}\n\n.header__logo .icon path,\n.header__logo .icon circle,\n.header__logo .icon rect {\n  transition: all 0.2s cubic-bezier(0.5, 1.8, 0.6, 1.5);\n}\n\n.header__logo .icon path {\n  transform: translateX(0);\n  transition-delay: 0;\n}\n\n.header__logo .icon rect {\n  transform: translateX(0);\n  transition-delay: 0.1s;\n}\n\n.header__logo .icon circle {\n  transform: translateX();\n  transition-delay: 0.2s;\n}\n\n.header__logo:hover .icon path {\n  transform: translateX(10px);\n  transition-delay: 0;\n}\n\n.header__logo:hover .icon rect {\n  transform: translateX(10px);\n  transition-delay: 0.1s;\n}\n\n.header__logo:hover .icon circle {\n  transform: translateX(10px);\n  transition-delay: 0.2s;\n}\n","",{version:3,sources:["webpack://./src/styles/header.css"],names:[],mappings:"AAAA;EACE,WAAW;;EAEX,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,QAAQ;AACV;;AAEA;EACE,gBAAgB;AAClB;;AAEA;;EAEE,aAAa;EACb,QAAQ;AACV;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,cAAc;EACd,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,iBAAiB;AACnB;;AAEA,GAAG;;AAEH;EACE;IACE,eAAe;IACf,WAAW;IACX,OAAO;IACP,MAAM;IACN,aAAa;;IAEb,6BAA6B;EAC/B;;EAEA;IACE,aAAa;EACf;AACF;;AAEA,SAAS;;AAET;EACE,aAAa;EACb,2BAA2B;EAC3B,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;;;EAGE,qDAAqD;AACvD;;AAEA;EACE,wBAAwB;EACxB,mBAAmB;AACrB;;AAEA;EACE,wBAAwB;EACxB,sBAAsB;AACxB;;AAEA;EACE,uBAAuB;EACvB,sBAAsB;AACxB;;AAEA;EACE,2BAA2B;EAC3B,mBAAmB;AACrB;;AAEA;EACE,2BAA2B;EAC3B,sBAAsB;AACxB;;AAEA;EACE,2BAA2B;EAC3B,sBAAsB;AACxB",sourcesContent:[".header {\n  width: 100%;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.header__logo {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\nh1 {\n  font-weight: 500;\n}\n\n.header__controls,\n.header__buttons {\n  display: flex;\n  gap: 5px;\n}\n\n.level__info {\n  display: flex;\n}\n\n.header__levels {\n  display: none;\n}\n\n.header__levels .level__status {\n  display: block;\n  margin-right: 5px;\n  margin-top: 2px;\n}\n\n.button--levels {\n  margin-left: 15px;\n}\n\n/**/\n\n@media all and (max-width: 980px) {\n  .header {\n    position: fixed;\n    width: 100%;\n    left: 0;\n    top: 0;\n    padding: 20px;\n\n    background-color: var(--back);\n  }\n\n  .header__levels {\n    display: flex;\n  }\n}\n\n/* ICON */\n\n.logo__icon {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n}\n\n.logo__icon svg {\n  width: 60px;\n  height: 13px;\n}\n\n.header__logo .icon path,\n.header__logo .icon circle,\n.header__logo .icon rect {\n  transition: all 0.2s cubic-bezier(0.5, 1.8, 0.6, 1.5);\n}\n\n.header__logo .icon path {\n  transform: translateX(0);\n  transition-delay: 0;\n}\n\n.header__logo .icon rect {\n  transform: translateX(0);\n  transition-delay: 0.1s;\n}\n\n.header__logo .icon circle {\n  transform: translateX();\n  transition-delay: 0.2s;\n}\n\n.header__logo:hover .icon path {\n  transform: translateX(10px);\n  transition-delay: 0;\n}\n\n.header__logo:hover .icon rect {\n  transform: translateX(10px);\n  transition-delay: 0.1s;\n}\n\n.header__logo:hover .icon circle {\n  transform: translateX(10px);\n  transition-delay: 0.2s;\n}\n"],sourceRoot:""}]);const i=A},3771:(n,e,t)=>{t.d(e,{Z:()=>B});var l=t(4015),a=t.n(l),o=t(3645),A=t.n(o),i=t(8772),r=t(7179),s=t(7559),d=t(3497),c=t(8756),p=t(7348),E=t(6410),u=t(5984),h=t(2675),g=t(100),v=t(3361),C=t(4238),b=t(1574),f=A()(a());f.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&family=JetBrains+Mono:wght@300;400;500;600;700&display=swap);"]),f.i(i.Z),f.i(r.Z),f.i(s.Z),f.i(d.Z),f.i(c.Z),f.i(p.Z),f.i(E.Z),f.i(u.Z),f.i(h.Z),f.i(g.Z),f.i(v.Z),f.i(C.Z),f.i(b.Z),f.push([n.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]);const B=f},2675:(n,e,t)=>{t.d(e,{Z:()=>i});var l=t(4015),a=t.n(l),o=t(3645),A=t.n(o)()(a());A.push([n.id,'/* INPUT */\n\n.input__container {\n  display: flex;\n  gap: 10px;\n}\n\ninput {\n  font-family: "JetBrains Mono", monospace;\n  color: var(--black);\n\n  outline: 0;\n  border: 0;\n  border-radius: 0;\n\n  width: 100%;\n  height: 20px;\n  padding: 0 10px;\n\n  transition: all 0.5s ease-in-out;\n}',"",{version:3,sources:["webpack://./src/styles/input.css"],names:[],mappings:"AAAA,UAAU;;AAEV;EACE,aAAa;EACb,SAAS;AACX;;AAEA;EACE,wCAAwC;EACxC,mBAAmB;;EAEnB,UAAU;EACV,SAAS;EACT,gBAAgB;;EAEhB,WAAW;EACX,YAAY;EACZ,eAAe;;EAEf,gCAAgC;AAClC",sourcesContent:['/* INPUT */\n\n.input__container {\n  display: flex;\n  gap: 10px;\n}\n\ninput {\n  font-family: "JetBrains Mono", monospace;\n  color: var(--black);\n\n  outline: 0;\n  border: 0;\n  border-radius: 0;\n\n  width: 100%;\n  height: 20px;\n  padding: 0 10px;\n\n  transition: all 0.5s ease-in-out;\n}'],sourceRoot:""}]);const i=A},100:(n,e,t)=>{t.d(e,{Z:()=>i});var l=t(4015),a=t.n(l),o=t(3645),A=t.n(o)()(a());A.push([n.id,".levels__header {\n  width: 100%;\n  height: 40px;\n  padding: 0 15px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  border-bottom: 1px solid var(--border);\n}\n\n.levels__header .header__container {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.levels__header .header__data {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n}\n\n.levels__header .header__data h3,\n.levels__header__data span {\n  font-weight: 400;\n  opacity: 0.9;\n}\n\n.levels__header .header__data h3 {\n  margin-right: 10px;\n}\n\n.levels__header .header__buttons {\n  display: flex;\n  margin-left: 20px;\n}\n\n.button--prev span,\n.button--next span {\n  display: block;\n  padding-bottom: 2px;\n  color: var(--black);\n  opacity: 0.9;\n}\n\n/* BODY */\n\n.levels__body {\n  padding: 15px 0;\n}\n\n.levels__container {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.level__item {\n  width: 100%;\n  padding: 4px 15px;\n  display: flex;\n  align-items: center;\n\n  transition: all 0.2s ease-in-out;\n  cursor: pointer;\n}\n\n.level__number {\n  width: 25px;\n}\n\n.level__item span:not(:last-child) {\n  opacity: 0.9;\n}\n\n/* STATUS */\n\n.level__status {\n  width: 15px;\n  height: 15px;\n  border-radius: 50%;\n  margin-left: auto;\n\n  background-color: var(--border);\n}\n\n.level--done .level__status {\n  background-color: var(--green);\n}\n\n.level--hint .level__status {\n  background-color: var(--yellow);\n}\n\n/**/\n\n.level--current {\n  background-color: var(--item--back);\n}\n\n.level__item:hover {\n  background-color: var(--item--back);\n}\n\n.level__item:hover span {\n  opacity: 1;\n}\n\n/* CLOSE BUTTON */\n\n.section__levels .button__container {\n  position: absolute;\n  top: 0;\n  left: 0;\n  transform: translateX(-100%);\n  display: none;\n}\n\n@media all and (max-width: 980px) {\n  .panel--visible .button__container {\n    display: block;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/levels.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,YAAY;EACZ,eAAe;;EAEf,aAAa;EACb,uBAAuB;EACvB,mBAAmB;;EAEnB,sCAAsC;AACxC;;AAEA;EACE,WAAW;EACX,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,8BAA8B;AAChC;;AAEA;;EAEE,gBAAgB;EAChB,YAAY;AACd;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,iBAAiB;AACnB;;AAEA;;EAEE,cAAc;EACd,mBAAmB;EACnB,mBAAmB;EACnB,YAAY;AACd;;AAEA,SAAS;;AAET;EACE,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,WAAW;EACX,iBAAiB;EACjB,aAAa;EACb,mBAAmB;;EAEnB,gCAAgC;EAChC,eAAe;AACjB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,YAAY;AACd;;AAEA,WAAW;;AAEX;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,iBAAiB;;EAEjB,+BAA+B;AACjC;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,+BAA+B;AACjC;;AAEA,GAAG;;AAEH;EACE,mCAAmC;AACrC;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,UAAU;AACZ;;AAEA,iBAAiB;;AAEjB;EACE,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,4BAA4B;EAC5B,aAAa;AACf;;AAEA;EACE;IACE,cAAc;EAChB;AACF",sourcesContent:[".levels__header {\n  width: 100%;\n  height: 40px;\n  padding: 0 15px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  border-bottom: 1px solid var(--border);\n}\n\n.levels__header .header__container {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.levels__header .header__data {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n}\n\n.levels__header .header__data h3,\n.levels__header__data span {\n  font-weight: 400;\n  opacity: 0.9;\n}\n\n.levels__header .header__data h3 {\n  margin-right: 10px;\n}\n\n.levels__header .header__buttons {\n  display: flex;\n  margin-left: 20px;\n}\n\n.button--prev span,\n.button--next span {\n  display: block;\n  padding-bottom: 2px;\n  color: var(--black);\n  opacity: 0.9;\n}\n\n/* BODY */\n\n.levels__body {\n  padding: 15px 0;\n}\n\n.levels__container {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.level__item {\n  width: 100%;\n  padding: 4px 15px;\n  display: flex;\n  align-items: center;\n\n  transition: all 0.2s ease-in-out;\n  cursor: pointer;\n}\n\n.level__number {\n  width: 25px;\n}\n\n.level__item span:not(:last-child) {\n  opacity: 0.9;\n}\n\n/* STATUS */\n\n.level__status {\n  width: 15px;\n  height: 15px;\n  border-radius: 50%;\n  margin-left: auto;\n\n  background-color: var(--border);\n}\n\n.level--done .level__status {\n  background-color: var(--green);\n}\n\n.level--hint .level__status {\n  background-color: var(--yellow);\n}\n\n/**/\n\n.level--current {\n  background-color: var(--item--back);\n}\n\n.level__item:hover {\n  background-color: var(--item--back);\n}\n\n.level__item:hover span {\n  opacity: 1;\n}\n\n/* CLOSE BUTTON */\n\n.section__levels .button__container {\n  position: absolute;\n  top: 0;\n  left: 0;\n  transform: translateX(-100%);\n  display: none;\n}\n\n@media all and (max-width: 980px) {\n  .panel--visible .button__container {\n    display: block;\n  }\n}\n"],sourceRoot:""}]);const i=A},549:(n,e,t)=>{t.d(e,{Z:()=>i});var l=t(4015),a=t.n(l),o=t(3645),A=t.n(o)()(a());A.push([n.id,"/* LEVEL 1 */\n\n.level--1 .playground {\n  gap: 10px;\n}\n\n.level--1 .tag-line:nth-child(2),\n.level--1 .tag-line:nth-child(3),\n.level--1 .tag-line:nth-child(4) {\n  padding-left: 20px;\n}\n\n.level--1 circle {\n  width: 100px;\n  height: 100px;\n}\n","",{version:3,sources:["webpack://./src/styles/levels/level-1.css"],names:[],mappings:"AAAA,YAAY;;AAEZ;EACE,SAAS;AACX;;AAEA;;;EAGE,kBAAkB;AACpB;;AAEA;EACE,YAAY;EACZ,aAAa;AACf",sourcesContent:["/* LEVEL 1 */\n\n.level--1 .playground {\n  gap: 10px;\n}\n\n.level--1 .tag-line:nth-child(2),\n.level--1 .tag-line:nth-child(3),\n.level--1 .tag-line:nth-child(4) {\n  padding-left: 20px;\n}\n\n.level--1 circle {\n  width: 100px;\n  height: 100px;\n}\n"],sourceRoot:""}]);const i=A},6748:(n,e,t)=>{t.d(e,{Z:()=>i});var l=t(4015),a=t.n(l),o=t(3645),A=t.n(o)()(a());A.push([n.id,"/* LEVEL 10 */\n\n.level--10 .tag-line {\n  padding-left: 20px;\n}\n\n.level--10 .tag-line:nth-child(3),\n.level--10 .tag-line:nth-child(6) {\n  padding-left: 40px;\n}\n\n.level--10 .tag-line:first-child,\n.level--10 .tag-line:last-child {\n  padding-left: 0;\n}\n\n.level--10 box {\n  width: 110px;\n  height: 110px;\n}\n\n.level--10 box:nth-child(2) {\n  background-color: var(--border);\n}\n\n.level--10 ball {\n  background-color: var(--green);\n}\n\n.level--10 ball.yellow {\n  background-color: var(--yellow);\n}\n\n.level--10 ball.small {\n  width: 40px;\n  height: 40px;\n}\n\n","",{version:3,sources:["webpack://./src/styles/levels/level-10.css"],names:[],mappings:"AAAA,aAAa;;AAEb;EACE,kBAAkB;AACpB;;AAEA;;EAEE,kBAAkB;AACpB;;AAEA;;EAEE,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,+BAA+B;AACjC;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,+BAA+B;AACjC;;AAEA;EACE,WAAW;EACX,YAAY;AACd",sourcesContent:["/* LEVEL 10 */\n\n.level--10 .tag-line {\n  padding-left: 20px;\n}\n\n.level--10 .tag-line:nth-child(3),\n.level--10 .tag-line:nth-child(6) {\n  padding-left: 40px;\n}\n\n.level--10 .tag-line:first-child,\n.level--10 .tag-line:last-child {\n  padding-left: 0;\n}\n\n.level--10 box {\n  width: 110px;\n  height: 110px;\n}\n\n.level--10 box:nth-child(2) {\n  background-color: var(--border);\n}\n\n.level--10 ball {\n  background-color: var(--green);\n}\n\n.level--10 ball.yellow {\n  background-color: var(--yellow);\n}\n\n.level--10 ball.small {\n  width: 40px;\n  height: 40px;\n}\n\n"],sourceRoot:""}]);const i=A},9903:(n,e,t)=>{t.d(e,{Z:()=>i});var l=t(4015),a=t.n(l),o=t(3645),A=t.n(o)()(a());A.push([n.id,"/* LEVEL 2 */\n\n.level--2 .tag-line:nth-child(2),\n.level--2 .tag-line:nth-child(n+5):nth-child(-n+7) {\n  padding-left: 20px;\n}\n\n.level--2 .tag-line:nth-child(3),\n.level--2 .tag-line:nth-child(4) {\n  padding-left: 40px;\n}\n\n.level--2 fish {\n  position: relative;\n  width: 180px;\n  height: 100px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.level--2 fish ball {\n  width: 40px;\n  height: 40px;\n  background-color: var(--yellow);\n  position: absolute;\n}\n\n.level--2 fish ball:first-child {\n  left: 35px;\n}\n\n.level--2 fish ball:last-child {\n  right: 60px;\n}\n\n.level--2 ball {\n  background-color: var(--green);\n}","",{version:3,sources:["webpack://./src/styles/levels/level-2.css"],names:[],mappings:"AAAA,YAAY;;AAEZ;;EAEE,kBAAkB;AACpB;;AAEA;;EAEE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,aAAa;;EAEb,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,+BAA+B;EAC/B,kBAAkB;AACpB;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,8BAA8B;AAChC",sourcesContent:["/* LEVEL 2 */\n\n.level--2 .tag-line:nth-child(2),\n.level--2 .tag-line:nth-child(n+5):nth-child(-n+7) {\n  padding-left: 20px;\n}\n\n.level--2 .tag-line:nth-child(3),\n.level--2 .tag-line:nth-child(4) {\n  padding-left: 40px;\n}\n\n.level--2 fish {\n  position: relative;\n  width: 180px;\n  height: 100px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.level--2 fish ball {\n  width: 40px;\n  height: 40px;\n  background-color: var(--yellow);\n  position: absolute;\n}\n\n.level--2 fish ball:first-child {\n  left: 35px;\n}\n\n.level--2 fish ball:last-child {\n  right: 60px;\n}\n\n.level--2 ball {\n  background-color: var(--green);\n}"],sourceRoot:""}]);const i=A},8544:(n,e,t)=>{t.d(e,{Z:()=>p});var l=t(4015),a=t.n(l),o=t(3645),A=t.n(o),i=t(1667),r=t.n(i),s=t(4212),d=A()(a()),c=r()(s);d.push([n.id,"/* LEVEL 3 */\n\n.level--3 .playground {\n  gap: 10px;\n}\n\n.level--3 .tag-line {\n  padding-left: 20px;\n}\n\n.level--3 .tag-line:first-child,\n.level--3 .tag-line:last-child {\n  padding-left: 0;\n}\n\n.level--3 bear:nth-child(2) {\n  background-image: url("+c+");\n}\n","",{version:3,sources:["webpack://./src/styles/levels/level-3.css"],names:[],mappings:"AAAA,YAAY;;AAEZ;EACE,SAAS;AACX;;AAEA;EACE,kBAAkB;AACpB;;AAEA;;EAEE,eAAe;AACjB;;AAEA;EACE,yDAAoD;AACtD",sourcesContent:['/* LEVEL 3 */\n\n.level--3 .playground {\n  gap: 10px;\n}\n\n.level--3 .tag-line {\n  padding-left: 20px;\n}\n\n.level--3 .tag-line:first-child,\n.level--3 .tag-line:last-child {\n  padding-left: 0;\n}\n\n.level--3 bear:nth-child(2) {\n  background-image: url("../../assets/bear--pink.svg");\n}\n'],sourceRoot:""}]);const p=d},9355:(n,e,t)=>{t.d(e,{Z:()=>i});var l=t(4015),a=t.n(l),o=t(3645),A=t.n(o)()(a());A.push([n.id,"/* LEVEL 4 */\n\n.level--4 .tag-line {\n  padding-left: 20px;\n}\n\n.level--4 .tag-line:nth-child(5) {\n  padding-left: 40px;\n}\n\n.level--4 .tag-line:first-child,\n.level--4 .tag-line:last-child {\n  padding-left: 0;\n}\n\n.level--4 box {\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.level--4 box duck {\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n\n  position: absolute;\n  width: 50px;\n  height: 50px;\n}\n\n@media all and (max-width: 550px) {\n  .level--4 .playground {\n    gap: 15px;\n  }\n}","",{version:3,sources:["webpack://./src/styles/levels/level-4.css"],names:[],mappings:"AAAA,YAAY;;AAEZ;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;;EAEE,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,2BAA2B;EAC3B,wBAAwB;EACxB,4BAA4B;;EAE5B,kBAAkB;EAClB,WAAW;EACX,YAAY;AACd;;AAEA;EACE;IACE,SAAS;EACX;AACF",sourcesContent:["/* LEVEL 4 */\n\n.level--4 .tag-line {\n  padding-left: 20px;\n}\n\n.level--4 .tag-line:nth-child(5) {\n  padding-left: 40px;\n}\n\n.level--4 .tag-line:first-child,\n.level--4 .tag-line:last-child {\n  padding-left: 0;\n}\n\n.level--4 box {\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.level--4 box duck {\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n\n  position: absolute;\n  width: 50px;\n  height: 50px;\n}\n\n@media all and (max-width: 550px) {\n  .level--4 .playground {\n    gap: 15px;\n  }\n}"],sourceRoot:""}]);const i=A},4973:(n,e,t)=>{t.d(e,{Z:()=>p});var l=t(4015),a=t.n(l),o=t(3645),A=t.n(o),i=t(1667),r=t.n(i),s=t(3797),d=A()(a()),c=r()(s);d.push([n.id,"/* LEVEL 5 */\n\n.level--5 .tag-line {\n  padding-left: 20px;\n}\n\n.level--5 .tag-line:nth-child(4),\n.level--5 .tag-line:nth-child(7) {\n  padding-left: 40px;\n}\n\n.level--5 .tag-line:first-child,\n.level--5 .tag-line:last-child {\n  padding-left: 0;\n}\n\n.level--5 ball,\n.level--5 box {\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.level--5 ball {\n  width: 110px;\n  height: 110px;\n}\n\n.level--5 ball fish,\n.level--5 box fish {\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n\n  position: absolute;\n  width: 60px;\n  height: 40px;\n}\n\n.level--5 fish {\n  background-image: url("+c+");\n}\n\n@media all and (max-width: 550px) {\n  .level--5 .playground {\n    gap: 15px;\n  }\n}","",{version:3,sources:["webpack://./src/styles/levels/level-5.css"],names:[],mappings:"AAAA,YAAY;;AAEZ;EACE,kBAAkB;AACpB;;AAEA;;EAEE,kBAAkB;AACpB;;AAEA;;EAEE,eAAe;AACjB;;AAEA;;EAEE,kBAAkB;EAClB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,aAAa;AACf;;AAEA;;EAEE,2BAA2B;EAC3B,wBAAwB;EACxB,4BAA4B;;EAE5B,kBAAkB;EAClB,WAAW;EACX,YAAY;AACd;;AAEA;EACE,yDAAsD;AACxD;;AAEA;EACE;IACE,SAAS;EACX;AACF",sourcesContent:['/* LEVEL 5 */\n\n.level--5 .tag-line {\n  padding-left: 20px;\n}\n\n.level--5 .tag-line:nth-child(4),\n.level--5 .tag-line:nth-child(7) {\n  padding-left: 40px;\n}\n\n.level--5 .tag-line:first-child,\n.level--5 .tag-line:last-child {\n  padding-left: 0;\n}\n\n.level--5 ball,\n.level--5 box {\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.level--5 ball {\n  width: 110px;\n  height: 110px;\n}\n\n.level--5 ball fish,\n.level--5 box fish {\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n\n  position: absolute;\n  width: 60px;\n  height: 40px;\n}\n\n.level--5 fish {\n  background-image: url("../../assets/fish--yellow.svg");\n}\n\n@media all and (max-width: 550px) {\n  .level--5 .playground {\n    gap: 15px;\n  }\n}'],sourceRoot:""}]);const p=d},9219:(n,e,t)=>{t.d(e,{Z:()=>i});var l=t(4015),a=t.n(l),o=t(3645),A=t.n(o)()(a());A.push([n.id,"/* LEVEL 6 */\n\n.level--6 .tag-line {\n  padding-left: 20px;\n}\n\n.level--6 .tag-line:nth-child(5) {\n  padding-left: 40px;\n}\n\n.level--6 .tag-line:first-child,\n.level--6 .tag-line:last-child {\n  padding-left: 0;\n}\n\n.level--6 ball:first-child {\n  margin-right: -5px;\n  background-color: var(--pink);\n}\n\n.level--6 box {\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.level--6 box triangle {\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 0 30px 50px 30px;\n  border-color: transparent transparent var(--yellow) transparent;\n}","",{version:3,sources:["webpack://./src/styles/levels/level-6.css"],names:[],mappings:"AAAA,YAAY;;AAEZ;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;;EAEE,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,6BAA6B;AAC/B;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,QAAQ;EACR,SAAS;EACT,mBAAmB;EACnB,8BAA8B;EAC9B,+DAA+D;AACjE",sourcesContent:["/* LEVEL 6 */\n\n.level--6 .tag-line {\n  padding-left: 20px;\n}\n\n.level--6 .tag-line:nth-child(5) {\n  padding-left: 40px;\n}\n\n.level--6 .tag-line:first-child,\n.level--6 .tag-line:last-child {\n  padding-left: 0;\n}\n\n.level--6 ball:first-child {\n  margin-right: -5px;\n  background-color: var(--pink);\n}\n\n.level--6 box {\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.level--6 box triangle {\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 0 30px 50px 30px;\n  border-color: transparent transparent var(--yellow) transparent;\n}"],sourceRoot:""}]);const i=A},6048:(n,e,t)=>{t.d(e,{Z:()=>p});var l=t(4015),a=t.n(l),o=t(3645),A=t.n(o),i=t(1667),r=t.n(i),s=t(5141),d=A()(a()),c=r()(s);d.push([n.id,"/* LEVEL 7 */\n\n.level--7 .tag-line {\n  padding-left: 20px;\n}\n\n.level--7 .tag-line:nth-child(4),\n.level--7 .tag-line:nth-child(7) {\n  padding-left: 40px;\n}\n\n.level--7 .tag-line:first-child,\n.level--7 .tag-line:last-child {\n  padding-left: 0;\n}\n\n.level--7 box {\n  background-color: var(--yellow);\n}\n\n.level--7 ball {\n  background-color: var(--border);\n}\n\n.level--7 box bear,\n.level--7 ball bear {\n  background-image: url("+c+");\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n\n  position: absolute;\n  width: 50px;\n  height: 60px;\n}\n\n.level--7 ball {\n  width: 120px;\n  height: 120px;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.level--7 box::after,\n.level--7 ball::after {\n  content: attr(kid);\n  position: absolute;\n  padding: 3px 10px;\n  background-color: whitesmoke;\n  color: var(--black);\n  font-family: Arial, Helvetica, sans-serif;\n  letter-spacing: 0.05ch;\n\n  bottom: -10px;\n  right: 10px;\n}\n","",{version:3,sources:["webpack://./src/styles/levels/level-7.css"],names:[],mappings:"AAAA,YAAY;;AAEZ;EACE,kBAAkB;AACpB;;AAEA;;EAEE,kBAAkB;AACpB;;AAEA;;EAEE,eAAe;AACjB;;AAEA;EACE,+BAA+B;AACjC;;AAEA;EACE,+BAA+B;AACjC;;AAEA;;EAEE,yDAAqD;EACrD,2BAA2B;EAC3B,wBAAwB;EACxB,4BAA4B;;EAE5B,kBAAkB;EAClB,WAAW;EACX,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,kBAAkB;EAClB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;;EAEE,kBAAkB;EAClB,kBAAkB;EAClB,iBAAiB;EACjB,4BAA4B;EAC5B,mBAAmB;EACnB,yCAAyC;EACzC,sBAAsB;;EAEtB,aAAa;EACb,WAAW;AACb",sourcesContent:['/* LEVEL 7 */\n\n.level--7 .tag-line {\n  padding-left: 20px;\n}\n\n.level--7 .tag-line:nth-child(4),\n.level--7 .tag-line:nth-child(7) {\n  padding-left: 40px;\n}\n\n.level--7 .tag-line:first-child,\n.level--7 .tag-line:last-child {\n  padding-left: 0;\n}\n\n.level--7 box {\n  background-color: var(--yellow);\n}\n\n.level--7 ball {\n  background-color: var(--border);\n}\n\n.level--7 box bear,\n.level--7 ball bear {\n  background-image: url("../../assets/bear--small.svg");\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n\n  position: absolute;\n  width: 50px;\n  height: 60px;\n}\n\n.level--7 ball {\n  width: 120px;\n  height: 120px;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.level--7 box::after,\n.level--7 ball::after {\n  content: attr(kid);\n  position: absolute;\n  padding: 3px 10px;\n  background-color: whitesmoke;\n  color: var(--black);\n  font-family: Arial, Helvetica, sans-serif;\n  letter-spacing: 0.05ch;\n\n  bottom: -10px;\n  right: 10px;\n}\n'],sourceRoot:""}]);const p=d},7990:(n,e,t)=>{t.d(e,{Z:()=>i});var l=t(4015),a=t.n(l),o=t(3645),A=t.n(o)()(a());A.push([n.id,"/* LEVEL 8 */\n\n.level--8 .playground {\n  gap: 10px;\n}\n\n.level--8 .tag-line {\n  padding-left: 20px;\n}\n\n.level--8 .tag-line:first-child,\n.level--8 .tag-line:last-child {\n  padding-left: 0;\n}\n\n@media all and (max-width: 550px) {\n  .level--8 duck {\n    width: 90px;\n    height: 90px;\n  }\n}","",{version:3,sources:["webpack://./src/styles/levels/level-8.css"],names:[],mappings:"AAAA,YAAY;;AAEZ;EACE,SAAS;AACX;;AAEA;EACE,kBAAkB;AACpB;;AAEA;;EAEE,eAAe;AACjB;;AAEA;EACE;IACE,WAAW;IACX,YAAY;EACd;AACF",sourcesContent:["/* LEVEL 8 */\n\n.level--8 .playground {\n  gap: 10px;\n}\n\n.level--8 .tag-line {\n  padding-left: 20px;\n}\n\n.level--8 .tag-line:first-child,\n.level--8 .tag-line:last-child {\n  padding-left: 0;\n}\n\n@media all and (max-width: 550px) {\n  .level--8 duck {\n    width: 90px;\n    height: 90px;\n  }\n}"],sourceRoot:""}]);const i=A},9823:(n,e,t)=>{t.d(e,{Z:()=>i});var l=t(4015),a=t.n(l),o=t(3645),A=t.n(o)()(a());A.push([n.id,"/* LEVEL 9 */\n\n.level--9 .tag-line {\n  padding-left: 20px;\n}\n\n.level--9 .tag-line:nth-child(6) {\n  padding-left: 40px;\n}\n\n.level--9 .tag-line:first-child,\n.level--9 .tag-line:last-child {\n  padding-left: 0;\n}\n\n.level--9 box {\n  background-color: var(--border);\n}\n\n.level--9 box:nth-child(2) {\n  background-color: var(--purple);\n}\n\n.level--9 box triangle {\n  border-width: 0 30px 45px 30px;\n  border-color: transparent transparent var(--yellow) transparent;\n}\n\n@media all and (max-width: 550px) {\n  .level--9 box {\n    width: 90px;\n    height: 90px;\n  }\n}","",{version:3,sources:["webpack://./src/styles/levels/level-9.css"],names:[],mappings:"AAAA,YAAY;;AAEZ;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;;EAEE,eAAe;AACjB;;AAEA;EACE,+BAA+B;AACjC;;AAEA;EACE,+BAA+B;AACjC;;AAEA;EACE,8BAA8B;EAC9B,+DAA+D;AACjE;;AAEA;EACE;IACE,WAAW;IACX,YAAY;EACd;AACF",sourcesContent:["/* LEVEL 9 */\n\n.level--9 .tag-line {\n  padding-left: 20px;\n}\n\n.level--9 .tag-line:nth-child(6) {\n  padding-left: 40px;\n}\n\n.level--9 .tag-line:first-child,\n.level--9 .tag-line:last-child {\n  padding-left: 0;\n}\n\n.level--9 box {\n  background-color: var(--border);\n}\n\n.level--9 box:nth-child(2) {\n  background-color: var(--purple);\n}\n\n.level--9 box triangle {\n  border-width: 0 30px 45px 30px;\n  border-color: transparent transparent var(--yellow) transparent;\n}\n\n@media all and (max-width: 550px) {\n  .level--9 box {\n    width: 90px;\n    height: 90px;\n  }\n}"],sourceRoot:""}]);const i=A},3361:(n,e,t)=>{t.d(e,{Z:()=>k});var l=t(4015),a=t.n(l),o=t(3645),A=t.n(o),i=t(549),r=t(9903),s=t(8544),d=t(9355),c=t(4973),p=t(9219),E=t(6048),u=t(7990),h=t(9823),g=t(6748),v=t(1667),C=t.n(v),b=t(3008),f=t(5824),B=t(18),m=A()(a());m.i(i.Z),m.i(r.Z),m.i(s.Z),m.i(d.Z),m.i(c.Z),m.i(p.Z),m.i(E.Z),m.i(u.Z),m.i(h.Z),m.i(g.Z);var x=C()(b),_=C()(f),y=C()(B);m.push([n.id,".main .tag-line {\n  font-weight: 300;\n  opacity: 0.5;\n  cursor: default;\n\n  transition: all 0.1s ease-in-out;\n}\n\n.main .tag-line.highlight {\n  opacity: 1;\n}\n\n.playground {\n  min-width: 460px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n}\n\n.playground > * {\n  position: relative;\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n\n  transform: translateX(0);\n}\n\n.playground .tooltip {\n  position: absolute;\n  padding: 10px 15px;\n  background-color: var(--white);\n  color: var(--black);\n  line-height: 1;\n  font-size: 13px;\n\n  pointer-events: none;\n  z-index: 100;\n}\n\nbox {\n  width: 100px;\n  height: 100px;\n  background-color: var(--purple);\n\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\ntriangle {\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 0 60px 90px 60px;\n  border-color: transparent transparent var(--green) transparent;\n}\n\ntriangle.small {\n  border-width: 0 30px 45px 30px;\n}\n\nball {\n  width: 90px;\n  height: 90px;\n  border-radius: 50%;\n  background-color: var(--purple);\n}\n\nball.small {\n  width: 50px;\n  height: 50px;\n  background-color: var(--green);\n}\n\nfish {\n  width: 100px;\n  height: 100px;\n  background-image: url("+x+");\n}\n\nduck {\n  width: 100px;\n  height: 100px;\n  background-image: url("+_+");\n}\n\nbear {\n  width: 80px;\n  height: 100px;\n  background-image: url("+y+");\n}\n","",{version:3,sources:["webpack://./src/styles/levels/levels-styles.css"],names:[],mappings:"AAAA;EACE,gBAAgB;EAChB,YAAY;EACZ,eAAe;;EAEf,gCAAgC;AAClC;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,gBAAgB;EAChB,WAAW;EACX,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,kBAAkB;EAClB,2BAA2B;EAC3B,wBAAwB;EACxB,4BAA4B;;EAE5B,wBAAwB;AAC1B;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,8BAA8B;EAC9B,mBAAmB;EACnB,cAAc;EACd,eAAe;;EAEf,oBAAoB;EACpB,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,+BAA+B;;EAE/B,kBAAkB;EAClB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,QAAQ;EACR,SAAS;EACT,mBAAmB;EACnB,8BAA8B;EAC9B,8DAA8D;AAChE;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,+BAA+B;AACjC;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,8BAA8B;AAChC;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,yDAA8C;AAChD;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,yDAA8C;AAChD;;AAEA;EACE,WAAW;EACX,aAAa;EACb,yDAA8C;AAChD",sourcesContent:['.main .tag-line {\n  font-weight: 300;\n  opacity: 0.5;\n  cursor: default;\n\n  transition: all 0.1s ease-in-out;\n}\n\n.main .tag-line.highlight {\n  opacity: 1;\n}\n\n.playground {\n  min-width: 460px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n}\n\n.playground > * {\n  position: relative;\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n\n  transform: translateX(0);\n}\n\n.playground .tooltip {\n  position: absolute;\n  padding: 10px 15px;\n  background-color: var(--white);\n  color: var(--black);\n  line-height: 1;\n  font-size: 13px;\n\n  pointer-events: none;\n  z-index: 100;\n}\n\nbox {\n  width: 100px;\n  height: 100px;\n  background-color: var(--purple);\n\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\ntriangle {\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 0 60px 90px 60px;\n  border-color: transparent transparent var(--green) transparent;\n}\n\ntriangle.small {\n  border-width: 0 30px 45px 30px;\n}\n\nball {\n  width: 90px;\n  height: 90px;\n  border-radius: 50%;\n  background-color: var(--purple);\n}\n\nball.small {\n  width: 50px;\n  height: 50px;\n  background-color: var(--green);\n}\n\nfish {\n  width: 100px;\n  height: 100px;\n  background-image: url("../../assets/fish.svg");\n}\n\nduck {\n  width: 100px;\n  height: 100px;\n  background-image: url("../../assets/duck.svg");\n}\n\nbear {\n  width: 80px;\n  height: 100px;\n  background-image: url("../../assets/bear.svg");\n}\n\n@import "./level-1.css";\n@import "./level-2.css";\n@import "./level-3.css";\n@import "./level-4.css";\n@import "./level-5.css";\n@import "./level-6.css";\n@import "./level-7.css";\n@import "./level-8.css";\n@import "./level-9.css";\n@import "./level-10.css";\n'],sourceRoot:""}]);const k=m},8756:(n,e,t)=>{t.d(e,{Z:()=>i});var l=t(4015),a=t.n(l),o=t(3645),A=t.n(o)()(a());A.push([n.id,".main {\n  position: relative;\n  width: 100%;\n  display: flex;\n  flex-grow: 1;\n  gap: 20px;\n}\n\n.section__game {\n  max-width: 1180px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.section__levels {\n  position: relative;\n  min-width: 240px;\n  flex-grow: 1;\n  border: 1px solid var(--border);\n  background-color: var(--back);\n}\n\n.game {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 20px;\n}\n\n/**/\n\n@media all and (max-width: 980px) {\n  .section__game {\n    gap: 40px;\n  }\n\n  .game {\n    margin-top: 40px;\n  }\n\n  .section__levels {\n    position: fixed;\n    max-width: 260px;\n    width: 100%;\n    height: calc(100vh - 40px);\n    top: 20px;\n    right: 20px;\n    z-index: 100;\n\n    transform: translateX(150%);\n    transition: transform 0.3s ease-in-out;\n  }\n\n  .panel--visible {\n    transform: translateX(0);\n  }\n}\n\n@media all and (max-width: 750px) {\n  .game {\n    justify-content: flex-start;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/main.css"],names:[],mappings:"AAAA;EACE,kBAAkB;EAClB,WAAW;EACX,aAAa;EACb,YAAY;EACZ,SAAS;AACX;;AAEA;EACE,iBAAiB;EACjB,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;;AAEA;EACE,kBAAkB;EAClB,gBAAgB;EAChB,YAAY;EACZ,+BAA+B;EAC/B,6BAA6B;AAC/B;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,aAAa;EACb,sBAAsB;EACtB,8BAA8B;EAC9B,SAAS;AACX;;AAEA,GAAG;;AAEH;EACE;IACE,SAAS;EACX;;EAEA;IACE,gBAAgB;EAClB;;EAEA;IACE,eAAe;IACf,gBAAgB;IAChB,WAAW;IACX,0BAA0B;IAC1B,SAAS;IACT,WAAW;IACX,YAAY;;IAEZ,2BAA2B;IAC3B,sCAAsC;EACxC;;EAEA;IACE,wBAAwB;EAC1B;AACF;;AAEA;EACE;IACE,2BAA2B;EAC7B;AACF",sourcesContent:[".main {\n  position: relative;\n  width: 100%;\n  display: flex;\n  flex-grow: 1;\n  gap: 20px;\n}\n\n.section__game {\n  max-width: 1180px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.section__levels {\n  position: relative;\n  min-width: 240px;\n  flex-grow: 1;\n  border: 1px solid var(--border);\n  background-color: var(--back);\n}\n\n.game {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 20px;\n}\n\n/**/\n\n@media all and (max-width: 980px) {\n  .section__game {\n    gap: 40px;\n  }\n\n  .game {\n    margin-top: 40px;\n  }\n\n  .section__levels {\n    position: fixed;\n    max-width: 260px;\n    width: 100%;\n    height: calc(100vh - 40px);\n    top: 20px;\n    right: 20px;\n    z-index: 100;\n\n    transform: translateX(150%);\n    transition: transform 0.3s ease-in-out;\n  }\n\n  .panel--visible {\n    transform: translateX(0);\n  }\n}\n\n@media all and (max-width: 750px) {\n  .game {\n    justify-content: flex-start;\n  }\n}\n"],sourceRoot:""}]);const i=A},1574:(n,e,t)=>{t.d(e,{Z:()=>p});var l=t(4015),a=t.n(l),o=t(3645),A=t.n(o),i=t(1667),r=t.n(i),s=t(18),d=A()(a()),c=r()(s);d.push([n.id,".popup__container {\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  transform: translateY(-100%);\n  visibility: hidden;\n\n  transition: all 0.8s cubic-bezier(.47,1.64,.41,.8);\n}\n\n.show-popup {\n  visibility: visible;\n  transform: translateY(0);\n\n  transition: all 1.2s cubic-bezier(.47,1.64,.41,.8);\n}\n\n.overlay {\n  background-color: var(--overlay);\n}\n\n.popup {\n  max-width: 460px;\n  width: 100%;\n  padding: 40px 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  background-color: var(--back);\n}\n\n.popup__content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n}\n\n.popup__buttons {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 5px;\n}\n\n.popup__image bear {\n  display: block;\n  width: 50px;\n  height: 75px;\n  background-image: url("+c+");\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n}\n\n.popup__text {\n  text-align: center;\n}\n\n.popup__text span {\n  display: block;\n  margin-top: 5px;\n}","",{version:3,sources:["webpack://./src/styles/popup.css"],names:[],mappings:"AAAA;EACE,eAAe;EACf,YAAY;EACZ,aAAa;EACb,MAAM;EACN,OAAO;EACP,aAAa;EACb,uBAAuB;EACvB,mBAAmB;;EAEnB,4BAA4B;EAC5B,kBAAkB;;EAElB,kDAAkD;AACpD;;AAEA;EACE,mBAAmB;EACnB,wBAAwB;;EAExB,kDAAkD;AACpD;;AAEA;EACE,gCAAgC;AAClC;;AAEA;EACE,gBAAgB;EAChB,WAAW;EACX,kBAAkB;EAClB,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;EACT,6BAA6B;AAC/B;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,QAAQ;AACV;;AAEA;EACE,cAAc;EACd,WAAW;EACX,YAAY;EACZ,yDAA2C;EAC3C,wBAAwB;EACxB,4BAA4B;EAC5B,2BAA2B;AAC7B;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,cAAc;EACd,eAAe;AACjB",sourcesContent:['.popup__container {\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  transform: translateY(-100%);\n  visibility: hidden;\n\n  transition: all 0.8s cubic-bezier(.47,1.64,.41,.8);\n}\n\n.show-popup {\n  visibility: visible;\n  transform: translateY(0);\n\n  transition: all 1.2s cubic-bezier(.47,1.64,.41,.8);\n}\n\n.overlay {\n  background-color: var(--overlay);\n}\n\n.popup {\n  max-width: 460px;\n  width: 100%;\n  padding: 40px 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  background-color: var(--back);\n}\n\n.popup__content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n}\n\n.popup__buttons {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 5px;\n}\n\n.popup__image bear {\n  display: block;\n  width: 50px;\n  height: 75px;\n  background-image: url("../assets/bear.svg");\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n}\n\n.popup__text {\n  text-align: center;\n}\n\n.popup__text span {\n  display: block;\n  margin-top: 5px;\n}'],sourceRoot:""}]);const p=d},8772:(n,e,t)=>{t.d(e,{Z:()=>i});var l=t(4015),a=t.n(l),o=t(3645),A=t.n(o)()(a());A.push([n.id,'* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  font-size: 14px;\n  color: var(--white);\n}\n\nbody {\n  width: 100%;\n  min-height: 100vh;\n  height: 100%;\n  background: var(--back);\n  font-family: "JetBrains Mono", monospace;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  gap: 20px;\n  padding: 20px;\n\n  overflow: hidden;\n}\n\n.content-width {\n  /* max-width: 1024px; */\n  width: 100%;\n}\n\n/**/\n\n@media all and (max-width: 980px) {\n  body {\n    overflow: scroll;\n    overflow-x: hidden;\n  }\n}\n\n@media all and (max-width: 750px) {\n  body {\n    gap: 60px;\n  }\n}\n\n\n',"",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAAA;EACE,UAAU;EACV,SAAS;EACT,sBAAsB;EACtB,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,iBAAiB;EACjB,YAAY;EACZ,uBAAuB;EACvB,wCAAwC;;EAExC,aAAa;EACb,sBAAsB;EACtB,8BAA8B;EAC9B,mBAAmB;EACnB,SAAS;EACT,aAAa;;EAEb,gBAAgB;AAClB;;AAEA;EACE,uBAAuB;EACvB,WAAW;AACb;;AAEA,GAAG;;AAEH;EACE;IACE,gBAAgB;IAChB,kBAAkB;EACpB;AACF;;AAEA;EACE;IACE,SAAS;EACX;AACF",sourcesContent:['* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  font-size: 14px;\n  color: var(--white);\n}\n\nbody {\n  width: 100%;\n  min-height: 100vh;\n  height: 100%;\n  background: var(--back);\n  font-family: "JetBrains Mono", monospace;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  gap: 20px;\n  padding: 20px;\n\n  overflow: hidden;\n}\n\n.content-width {\n  /* max-width: 1024px; */\n  width: 100%;\n}\n\n/**/\n\n@media all and (max-width: 980px) {\n  body {\n    overflow: scroll;\n    overflow-x: hidden;\n  }\n}\n\n@media all and (max-width: 750px) {\n  body {\n    gap: 60px;\n  }\n}\n\n\n'],sourceRoot:""}]);const i=A},7179:(n,e,t)=>{t.d(e,{Z:()=>i});var l=t(4015),a=t.n(l),o=t(3645),A=t.n(o)()(a());A.push([n.id,":root {\n  --black: rgb(28, 28, 28);\n  --white: whitesmoke;\n  --red: #ff4500;\n  --orange: rgb(255, 106, 0);\n  --green: #66ce51;\n  --yellow: #ffd208;\n  --purple: #7c69fa;\n  --blue: rgb(88, 174, 255);\n  --pink: #FF74E9;\n  --back: #313131;\n  --border: #5d5d5d;\n  --item--back: #3d3d3d;\n  --button--grey: #f5f5f5;\n  --button--hover-grey: #d8d8d8;\n  --back--grey: #DDDDDD;\n  --text--grey: #868686;\n  --blink-color: rgb(175, 230, 181);\n  --overlay: rgba(28, 28, 28, 0.8);\n}","",{version:3,sources:["webpack://./src/styles/variables.css"],names:[],mappings:"AAAA;EACE,wBAAwB;EACxB,mBAAmB;EACnB,cAAc;EACd,0BAA0B;EAC1B,gBAAgB;EAChB,iBAAiB;EACjB,iBAAiB;EACjB,yBAAyB;EACzB,eAAe;EACf,eAAe;EACf,iBAAiB;EACjB,qBAAqB;EACrB,uBAAuB;EACvB,6BAA6B;EAC7B,qBAAqB;EACrB,qBAAqB;EACrB,iCAAiC;EACjC,gCAAgC;AAClC",sourcesContent:[":root {\n  --black: rgb(28, 28, 28);\n  --white: whitesmoke;\n  --red: #ff4500;\n  --orange: rgb(255, 106, 0);\n  --green: #66ce51;\n  --yellow: #ffd208;\n  --purple: #7c69fa;\n  --blue: rgb(88, 174, 255);\n  --pink: #FF74E9;\n  --back: #313131;\n  --border: #5d5d5d;\n  --item--back: #3d3d3d;\n  --button--grey: #f5f5f5;\n  --button--hover-grey: #d8d8d8;\n  --back--grey: #DDDDDD;\n  --text--grey: #868686;\n  --blink-color: rgb(175, 230, 181);\n  --overlay: rgba(28, 28, 28, 0.8);\n}"],sourceRoot:""}]);const i=A},3645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t=n(e);return e[2]?"@media ".concat(e[2]," {").concat(t,"}"):t})).join("")},e.i=function(n,t,l){"string"==typeof n&&(n=[[null,n,""]]);var a={};if(l)for(var o=0;o<this.length;o++){var A=this[o][0];null!=A&&(a[A]=!0)}for(var i=0;i<n.length;i++){var r=[].concat(n[i]);l&&a[r[0]]||(t&&(r[2]?r[2]="".concat(t," and ").concat(r[2]):r[2]=t),e.push(r))}},e}},4015:n=>{function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,l=new Array(e);t<e;t++)l[t]=n[t];return l}n.exports=function(n){var t,l,a=(l=4,function(n){if(Array.isArray(n))return n}(t=n)||function(n,e){var t=n&&("undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"]);if(null!=t){var l,a,o=[],A=!0,i=!1;try{for(t=t.call(n);!(A=(l=t.next()).done)&&(o.push(l.value),!e||o.length!==e);A=!0);}catch(n){i=!0,a=n}finally{try{A||null==t.return||t.return()}finally{if(i)throw a}}return o}}(t,l)||function(n,t){if(n){if("string"==typeof n)return e(n,t);var l=Object.prototype.toString.call(n).slice(8,-1);return"Object"===l&&n.constructor&&(l=n.constructor.name),"Map"===l||"Set"===l?Array.from(n):"Arguments"===l||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(l)?e(n,t):void 0}}(t,l)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=a[1],A=a[3];if(!A)return o;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(A)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),s="/*# ".concat(r," */"),d=A.sources.map((function(n){return"/*# sourceURL=".concat(A.sourceRoot||"").concat(n," */")}));return[o].concat(d).concat([s]).join("\n")}return[o].join("\n")}},1667:n=>{n.exports=function(n,e){return e||(e={}),"string"!=typeof(n=n&&n.__esModule?n.default:n)?n:(/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n)}},4643:(n,e,t)=>{t.r(e),t.d(e,{default:()=>A});var l=t(3379),a=t.n(l),o=t(3771);a()(o.Z,{insert:"head",singleton:!1});const A=o.Z.locals||{}},3379:(n,e,t)=>{var l,a=function(){var n={};return function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}n[e]=t}return n[e]}}(),o=[];function A(n){for(var e=-1,t=0;t<o.length;t++)if(o[t].identifier===n){e=t;break}return e}function i(n,e){for(var t={},l=[],a=0;a<n.length;a++){var i=n[a],r=e.base?i[0]+e.base:i[0],s=t[r]||0,d="".concat(r," ").concat(s);t[r]=s+1;var c=A(d),p={css:i[1],media:i[2],sourceMap:i[3]};-1!==c?(o[c].references++,o[c].updater(p)):o.push({identifier:d,updater:h(p,e),references:1}),l.push(d)}return l}function r(n){var e=document.createElement("style"),l=n.attributes||{};if(void 0===l.nonce){var o=t.nc;o&&(l.nonce=o)}if(Object.keys(l).forEach((function(n){e.setAttribute(n,l[n])})),"function"==typeof n.insert)n.insert(e);else{var A=a(n.insert||"head");if(!A)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");A.appendChild(e)}return e}var s,d=(s=[],function(n,e){return s[n]=e,s.filter(Boolean).join("\n")});function c(n,e,t,l){var a=t?"":l.media?"@media ".concat(l.media," {").concat(l.css,"}"):l.css;if(n.styleSheet)n.styleSheet.cssText=d(e,a);else{var o=document.createTextNode(a),A=n.childNodes;A[e]&&n.removeChild(A[e]),A.length?n.insertBefore(o,A[e]):n.appendChild(o)}}function p(n,e,t){var l=t.css,a=t.media,o=t.sourceMap;if(a?n.setAttribute("media",a):n.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(l+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleSheet)n.styleSheet.cssText=l;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(l))}}var E=null,u=0;function h(n,e){var t,l,a;if(e.singleton){var o=u++;t=E||(E=r(e)),l=c.bind(null,t,o,!1),a=c.bind(null,t,o,!0)}else t=r(e),l=p.bind(null,t,e),a=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)};return l(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;l(n=e)}else a()}}n.exports=function(n,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===l&&(l=Boolean(window&&document&&document.all&&!window.atob)),l));var t=i(n=n||[],e);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var l=0;l<t.length;l++){var a=A(t[l]);o[a].references--}for(var r=i(n,e),s=0;s<t.length;s++){var d=A(t[s]);0===o[d].references&&(o[d].updater(),o.splice(d,1))}t=r}}}},6077:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.renderApp=void 0;const l=t(408),a=t(8202),o=t(4460);e.renderApp=function(){const n=(0,a.createMain)(),e=(0,l.createFooter)(),t=(0,o.createWinPopup)();document.body.append(n,e,t)}},43:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createCSSEditor=void 0;const l=t(252);e.createCSSEditor=function(){return(0,l.createEditor)({classNames:["editor","editor--css"],title:"CSS Editor",fileName:"style.css",editorContent:'\n    <div class="input__container">\n      <input type="text"></input>\n      <button class="button button--check">Enter</button>\n    </div>\n  '})}},252:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createEditor=void 0;const l=t(6116);e.createEditor=function(n){const e=(0,l.createElement)("div",n.classNames),t=`\n    <div class="editor__header">\n      <span class="editor__title">${n.title}</span>\n      <span class="editor__file">${n.fileName}</span>\n    </div>\n  `,a=`\n    <div class="editor__body">\n      <div class="body__panel--lines">${new Array(25).fill(0).map(((n,e)=>`<span>${e+1}</span>`)).join("")}</div>\n      <div class="body__panel--content">\n        ${n.editorContent}\n      </div>\n    </div>\n  `;return e.insertAdjacentHTML("beforeend",t),e.insertAdjacentHTML("beforeend",a),e}},7132:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createEditorsBlock=void 0;const l=t(6116),a=t(43),o=t(609);e.createEditorsBlock=function(){const n=(0,l.createElement)("div",["game__block","block__editors"]),e=(0,a.createCSSEditor)(),t=(0,o.createHTMLEditor)();return n.append(e,t),n}},609:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createHTMLEditor=void 0;const l=t(252);e.createHTMLEditor=function(){return(0,l.createEditor)({classNames:["editor","editor--html"],title:"HTML View",fileName:"playground.html",editorContent:"<div class='content__container'></div>"})}},408:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createFooter=void 0;const l=t(6116);e.createFooter=function(){const n=(0,l.createElement)("footer",["footer","content-width"]);return n.insertAdjacentHTML("afterbegin",'\n    <div class="footer__container">\n      <span>2023, <a href="https://rs.school/" target="_blank">RS School</a> — RS CSS Selectors</span>\n      <a href="https://github.com/HereEast" target="_blank">Here East</a>\n    </div>\n  '),n}},1914:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createGameSection=void 0;const l=t(6116),a=t(4977),o=t(7132);e.createGameSection=function(){const n=(0,l.createElement)("section",["section__game"]),e=(0,a.createHeader)(),t=(0,l.createElement)("section",["game"]),A=(0,l.createElement)("h2",["task__text"]),i=(0,l.createElement)("div",["graphics__container"]),r=(0,o.createEditorsBlock)();return t.append(A,i,r),n.append(e,t),n}},7143:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createHeaderButtons=void 0;const l=t(6116);e.createHeaderButtons=function(){const n=(0,l.createElement)("div",["header__buttons"]),e=(0,l.createElement)("button",["button","button--reset"],"Reset"),t=(0,l.createElement)("button",["button","button--hint"],"Hint");return n.append(t,e),n}},2538:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createHeaderLevelInfo=void 0;const l=t(3),a=t(7881),o=t(6116);e.createHeaderLevelInfo=function(){const n=(0,o.createElement)("button",["button","button--levels"],"="),e=(0,l.getCurrentLevelID)(),t=(0,a.getSavedStatus)(e),A=(0,o.createElement)("div",["header__levels",`level--${t}`]),i=`\n    <div class="level__info">\n      <span class="level__status"></span>\n      <span class="header__data--level">${e}/10</span>\n    </div>\n  `;return A.insertAdjacentHTML("afterbegin",i),A.append(n),A}},4977:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createHeader=void 0;const l=t(6116),a=t(5018),o=t(7143),A=t(2538);e.createHeader=function(){const n=(0,l.createElement)("header",["header"]),e=(0,a.createLogo)(),t=(0,l.createElement)("div",["header__controls"]),i=(0,o.createHeaderButtons)(),r=(0,A.createHeaderLevelInfo)();return t.append(r,i),n.append(e,t),n}},5018:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createLogo=void 0;const l=t(6116);e.createLogo=function(){const n=(0,l.createElement)("div",["header__logo"]);return n.insertAdjacentHTML("afterbegin",'\n    <h1 class=\'logo__text\'>CSS Playground</h1>\n    <div class="logo__icon">\n      \n    <svg class="icon" xmlns="http://www.w3.org/2000/svg">\n      <path d="M7.05037 0L2.5332e-07 12H7.05037L14 11.8286L7.05037 0Z" fill="#6BCB5B"/>\n      <circle cx="36.5" cy="6.5" r="6.5" fill="#FFE208"/>\n      <rect x="16" width="12" height="12" fill="#725CFA"/>\n    </svg>\n  \n    </div>\n  '),n}},4978:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createLevelsBody=void 0;const l=t(6116),a=t(131),o=t(7881);e.createLevelsBody=function(){const n=(0,l.createElement)("div",["levels__body"]),e=(0,l.createElement)("div",["levels__container"]);return a.levelsData.forEach((n=>{const t=(0,o.getSavedStatus)(n.id),a=(0,l.createElement)("div",["level__item",`level--${t}`]);a.innerHTML=`\n      <span class="level__number">${n.id}</span>\n      <span class="level__title">${n.title}</span>\n      <span class="level__status"></span>\n    `,a.dataset.id=n.id,e.append(a)})),n.append(e),n}},3074:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createLevelsHeader=void 0;const l=t(6116),a=t(3);e.createLevelsHeader=function(){const n=(0,l.createElement)("div",["levels__header"]),e=`\n    <div class="header__container">\n      <div class="header__data"">\n        <h3>Level</h3>\n        <span class="header__data--level">${(0,a.getCurrentLevelID)()}/10</span>\n      </div>\n      <div class="header__buttons">\n        \n    <button class='button levels__button button--prev'>\n      <span>&lt;</span>\n    </button>\n    \n        \n    <button class='button levels__button button--next'>\n      <span>&gt;</span>\n    </button>\n    \n      </div>\n    </div>\n  `;return n.insertAdjacentHTML("afterbegin",e),n}},6224:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createLevelsSection=void 0;const l=t(6116),a=t(3074),o=t(4978);e.createLevelsSection=function(){const n=(0,l.createElement)("section",["section__levels"]),e=(0,a.createLevelsHeader)(),t=(0,o.createLevelsBody)();return n.append(e,t),n.insertAdjacentHTML("beforeend",'\n    <div class="button__container">\n      <button class="button button--hide">Close</button>\n    </div>\n  '),n}},8202:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createMain=void 0;const l=t(6116),a=t(1914),o=t(6224);e.createMain=function(){const n=(0,l.createElement)("main",["main","content-width"]),e=(0,a.createGameSection)(),t=(0,o.createLevelsSection)();return n.append(e,t),n}},8799:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createPopupButtons=void 0;const l=t(6116);e.createPopupButtons=function(n){const e=(0,l.createElement)("div",["popup__buttons"]);return n.forEach((n=>{const t=(0,l.createElement)("button",n.classNames,n.name);e.append(t)})),e}},4460:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createWinPopup=void 0;const l=t(6116),a=t(8799),o=t(1933);e.createWinPopup=function(){const n=(0,l.createElement)("div",["popup__container","overlay"]),e=(0,l.createElement)("div",["popup"]),t=(0,a.createPopupButtons)([{classNames:["button","button--close-popup"],name:"Cool, thanks!"}]),A=(0,o.createWinPopupContent)();return e.append(A,t),n.append(e),n}},1933:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createWinPopupContent=void 0;const l=t(6116),a=t(4033);e.createWinPopupContent=function(){const n=(0,l.createElement)("div",["popup__content"]),e=`<p class="popup__text">Big congrats!!!<br>\n    <span>You’ve got all levels right <br>${(0,a.areHintsUsed)()?"with a little hint help":"without using any hints"}.</span>\n  </p>`;return n.insertAdjacentHTML("afterbegin",'\n    <div class="popup__image">\n      <bear class="dance"></bear>\n    </div>\n  '),n.insertAdjacentHTML("beforeend",e),n}},131:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.levelsData=void 0,e.levelsData=[{id:"1",title:"A",task:"Select green triangles",answer:"triangle",code:'\n      <div class="playground">\n        <triangle el="1"/></triangle>\n        <ball el="2"/></ball>\n        <triangle el="3"/></triangle>\n      </div>'},{id:"2",title:"A B",task:"Select a yellow balls in a pink fish",answer:"fish ball",code:'\n      <div class="playground">\n        <fish el="1">\n          <ball el="2"/></ball>\n          <ball el="3"/></ball>\n        </fish el="1">\n        <ball el="4"/></ball>\n        <ball el="5"/></ball>\n      </div>'},{id:"3",title:"#id",task:"Select a pink teddy",answer:"#pink",code:'\n      <div class="playground">\n        <bear el="1"/></bear>\n        <bear el="2" id="pink"/></bear>\n        <bear el="3"/></bear>\n        <bear el="4"/></bear>\n      </div>'},{id:"4",title:".classname",task:"Select all small toys",answer:".small",code:'\n      <div class="playground">\n        <duck el="1"/></duck>\n        <triangle el="2" class="small"/></triangle>\n        <box el="3">\n          <duck el="4" class="small"/></duck>\n        </box el="3">\n        <box el="5"/></box>\n      </div>'},{id:"5",title:"A.classname",task:"Select all small fishes",answer:"fish.small",code:'\n      <div class="playground">\n        <fish el="1"/></fish>\n        <ball el="2">\n          <fish el="3" class="small"/>\n        </ball el="2">\n        <box el="4">\n          <fish el="5" class="small"/>\n        </box el="4">\n        <ball el="6" class="small"/></ball>\n      </div>'},{id:"6",title:"*",task:"Select all toys at the playground",answer:"*",code:'\n      <div class="playground">\n        <ball el="1"/></ball>\n        <duck el="2"/></duck>\n        <box el="3">\n          <triangle/ el="4">\n        </box el="3">\n        <ball el="5" class="small"/></ball>\n      </div>'},{id:"7",title:"[attribute]",task:"Select somebody's teddies",answer:"[kid]",code:'\n      <div class="playground">\n        <bear el="1"/></bear>\n        <box el="2" kid="Mary">\n          <bear el="3"/></bear>\n        </box el="2">\n        <ball el="4" kid="Patrick">\n          <bear el="5"/></bear>\n        </ball el="4">\n      </div>'},{id:"8",title:":n-child(A)",task:"Select the 3rd duck",answer:"duck:nth-child(3)",code:'\n      <div class="playground">\n        <duck el="1"/></duck>\n        <duck el="2"/></duck>\n        <duck el="3"/></duck>\n        <duck el="4"/></duck>\n      </div>'},{id:"9",title:":empty",task:"Select empty toy boxes",answer:"box:empty",code:'\n      <div class="playground">\n        <box el="1"/></box>\n        <box el="2"/></box>\n        <bear el="3" class="teddy"/></bear>\n        <box el="4">\n          <triangle el="5" class="yellow"/></triangle>\n        </box el="4">\n      </div>'},{id:"10",title:":not(X)",task:"Select big balls",answer:"ball:not(.small)",code:'\n      <div class="playground">\n        <box el="1">\n          <ball el="2" class="small yellow"/></ball>\n        </box el="1">\n        <box el="3">\n          <ball el="4" class="yellow"/></ball>\n        </box el="3">\n        <ball el="5"/></ball>\n        <ball el="6" class="small"/></ball>\n      </div>'}]},4033:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.areHintsUsed=void 0,e.areHintsUsed=function(){const n=window.localStorage.getItem("results"),e=n?JSON.parse(n):{};return Object.values(e).filter((n=>"hint"===n)).length>0}},7169:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.isWin=void 0,e.isWin=function(){const n=window.localStorage.getItem("results"),e=n?JSON.parse(n):{};return 10===Object.values(e).filter((n=>"done"===n||"hint"===n)).length}},9905:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleAnswer=void 0;const l=t(131),a=t(4557),o=t(3118),A=t(305),i=t(3),r=t(3104),s=t(7169),d=t(5773),c=t(6753),p=t(5403),E=t(3399);e.handleAnswer=function(){const n=(0,a.getElement)("input");if(!(n instanceof HTMLInputElement))throw Error("Target is not an HTMLInputElement...");const e=(0,i.getCurrentLevelID)(),t=(0,o.getLevelData)(e,l.levelsData),u=n.value.trim()===t.answer,h=n.dataset.hint;u&&(h&&((0,A.saveStatus)(e,"hint"),(0,r.setStatusIcon)(e,"hint")),h||((0,A.saveStatus)(e,"done"),(0,r.setStatusIcon)(e,"done")),(0,s.isWin)()?(console.log("🥳 Win!"),(0,E.showPopup)()):((0,c.hideElementsAnimation)(),setTimeout(p.nextLevel,1500))),u||(console.log("⛔️ Wrong answer!"),(0,d.handleWrongAnswer)())}},1279:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleAnswerOnEnter=void 0;const l=t(4557),a=t(9905);e.handleAnswerOnEnter=function(n){if(!((0,l.getElement)("input")instanceof HTMLInputElement))throw Error("Target is not an HTMLInputElement...");"Enter"===n.code&&(0,a.handleAnswer)()}},6361:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleInputFocus=void 0;const l=t(1435);e.handleInputFocus=function(n){const e=(0,l.getTarget)(n);if(!(e instanceof HTMLInputElement))throw Error("Target is not an HTMLInputElement...");"blur"===n.type&&(e.focus(),e.value.trim()||(e.value="",e.placeholder="Type in a CSS Selector..."))}},6753:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.hideElementsAnimation=void 0;const l=t(4557);e.hideElementsAnimation=function(){[...(0,l.getElement)(".playground").children].forEach(((n,e)=>{if(!(n instanceof HTMLElement))throw Error("Element is not an HTMLElement...");n.classList.add("hide"),n.style.animationDelay=e/10+"s"}))}},5773:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleWrongAnswer=void 0;const l=t(4557);e.handleWrongAnswer=function(){const n=(0,l.getElement)(".block__editors");n.classList.add("shake"),setTimeout((()=>n.classList.remove("shake")),500)}},3562:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleHint=void 0;const l=t(4557),a=t(3),o=t(131),A=t(366);e.handleHint=function(){const n=(0,l.getElement)("input");if(!(n instanceof HTMLInputElement))throw Error("Target is not an HTMLInputElement...");const e=(0,a.getCurrentLevelID)(),t=o.levelsData.find((n=>n.id===e)),i=t?t.answer:"";if(!i)throw Error("Failed to find this level answer...");(0,A.typeAnswer)(i),n.dataset.hint="hint"}},366:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.typeAnswer=void 0;const l=t(4557);e.typeAnswer=function(n){const e=(0,l.getElement)("input");if(!(e instanceof HTMLInputElement))throw Error("Target is not an HTMLInputElement...");let t=0,a="";const o=setInterval((()=>{a+=n[t],e.value=a,t>=n.length-1&&clearInterval(o),t++}),50)}},1136:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createTooltip=void 0;const l=t(6116),a=t(9654);e.createTooltip=function(n){const e=n.getBoundingClientRect().left,t=(0,l.createElement)("span",["tooltip"]);return t.textContent=(0,a.createTooltipText)(n),t.style.left=e+"px",t.style.top="12%",t}},5882:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getGraphicElement=void 0;const l=t(4557);e.getGraphicElement=function(n){const e=n.getAttribute("el"),t=(0,l.getElementsArray)("[el]").filter((n=>n.closest(".playground"))).find((n=>n.getAttribute("el")===e));if(!t)throw Error("Graphic element isn't found...");return t}},6192:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getHTMLLineTarget=void 0;const l=t(4557);e.getHTMLLineTarget=function(n){const e=n.getAttribute("el"),t=(0,l.getElementsArray)(".editor--html .tag-line").find((n=>n.getAttribute("el")===e));if(!t)throw Error("HTML line element is not found...");return t}},8925:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.highlightFromEnd=e.highlightFromStart=void 0,e.highlightFromStart=function(n,e){const t=n.innerText.slice(1,-1).split(" ")[0],l=e.indexOf(n),a=e.findIndex(((n,e)=>e>l&&n.innerText===`</${t}>`));e.slice(l,a+1).forEach((n=>{n.classList.add("highlight")}))},e.highlightFromEnd=function(n,e){const t=n.innerText.slice(2,-1),l=e.indexOf(n),a=[];e.forEach(((n,e)=>{e<l&&n.innerText.startsWith(`<${t}`)&&a.push(e)}));const o=a.pop();e.slice(o,l+1).forEach((n=>{n.classList.add("highlight")}))}},5480:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.highlightHTML=void 0;const l=t(4557),a=t(8925);e.highlightHTML=function(n){const e=(0,l.getElementsArray)(".editor--html .tag-line");e.forEach((n=>n.classList.remove("highlight")));const t=n.innerText.slice(1,-1);t.includes("/")||(0,a.highlightFromStart)(n,e),t.startsWith("/")&&(0,a.highlightFromEnd)(n,e),n.classList.add("highlight")}},8774:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleHTMLHover=void 0;const l=t(1435),a=t(7207),o=t(5480),A=t(5882),i=t(5657);e.handleHTMLHover=function(n){var e;const t=(0,l.getTarget)(n);if(null===(e=t.textContent)||void 0===e?void 0:e.includes("div"))return;(0,o.highlightHTML)(t);const r=(0,A.getGraphicElement)(t);(0,i.showTooltip)(r),t.addEventListener("mouseout",a.removeHoverStates)}},7207:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.removeHoverStates=void 0;const l=t(4557);e.removeHoverStates=function(){const n=(0,l.getElementsArray)(".tooltip");(0,l.getElementsArray)(".editor--html .tag-line").forEach((n=>n.classList.remove("highlight"))),n.forEach((n=>n.remove()))}},2953:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleShapesHover=void 0;const l=t(1435),a=t(7207),o=t(6192),A=t(5480),i=t(5657);e.handleShapesHover=function(n){const e=(0,l.getTarget)(n);if(e.classList.contains("playground"))return;(0,i.showTooltip)(e);const t=(0,o.getHTMLLineTarget)(e);(0,A.highlightHTML)(t),e.addEventListener("mouseout",a.removeHoverStates)}},5657:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.showTooltip=void 0;const l=t(4557),a=t(1136);e.showTooltip=function(n){const e=(0,l.getElement)(".playground"),t=(0,a.createTooltip)(n);e.append(t)}},9654:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createTooltipText=void 0,e.createTooltipText=function(n){const e=n.outerHTML,t=e.indexOf(">")+1,l=e.lastIndexOf("<");return(e.slice(0,t)+e.slice(l)).replace(/ dance/,"").replace(/ class="dance"/,"").replace(/ el="\d"/,"")}},1504:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.addAnimation=void 0,e.addAnimation=function(n){const e="*"===n.answer?".playground > *":n.answer;[...document.querySelectorAll(e)].forEach((n=>{if(!(n instanceof HTMLElement))throw Error("Element is not an HTMLElement...");n.classList.add("dance")}))}},9313:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.updateGraphics=void 0;const l=t(4557),a=t(3118),o=t(1504);e.updateGraphics=function(n,e){const t=(0,l.getElement)(".graphics__container"),A=(0,a.getLevelData)(n,e),i=A.code;t.innerHTML="",t.insertAdjacentHTML("afterbegin",i),(0,o.addAnimation)(A)}},8999:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.highlightItem=void 0;const l=t(4557);e.highlightItem=function(n){const e=document.querySelector(`[data-id="${n}"]`);(0,l.getElementsArray)(".level__item").forEach((n=>n.classList.remove("level--current"))),null==e||e.classList.add("level--current")}},6754:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.updateHTMLEditor=void 0;const l=t(4557),a=t(3118);e.updateHTMLEditor=function(n,e){const t=(0,l.getElement)(".editor--html .content__container"),o=(0,a.getLevelData)(n,e);let A="";o.code.split("\n").map((n=>n.trim())).filter((n=>n.length)).forEach((n=>{const e=n.indexOf("el"),t=n.slice(e,e+6),l=n.replace("<","&lt;").replace(">","&gt;").replace(/ el="\d"/,"");A+=`<div ${t} class="tag-line">${l}</div>`})),t.innerHTML="",t.insertAdjacentHTML("afterbegin",A)}},5403:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.nextLevel=void 0;const l=t(131),a=t(4358),o=t(7085),A=t(3);e.nextLevel=function(){const n=(0,A.getCurrentLevelID)();let e=Number(n)+1;e>10&&(e=1),(0,a.renderSelectedLevel)(String(e),l.levelsData),(0,o.saveLevelID)(String(e))}},9164:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.prevLevel=void 0;const l=t(131),a=t(4358),o=t(7085);e.prevLevel=function(){const n=window.localStorage.getItem("level")||"1";let e=Number(n)-1;e<1&&(e=10),(0,a.renderSelectedLevel)(String(e),l.levelsData),(0,o.saveLevelID)(String(e))}},4358:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.renderSelectedLevel=void 0;const l=t(8999),a=t(9753),o=t(1951),A=t(6754),i=t(9313),r=t(3104),s=t(3015),d=t(4652);e.renderSelectedLevel=function(n,e){document.body.className=`level--${n}`,(0,l.highlightItem)(n),(0,a.updateLevelCount)(n),(0,r.setStatusIcon)(n),(0,o.updateTaskTitle)(n,e),(0,A.updateHTMLEditor)(n,e),(0,i.updateGraphics)(n,e),(0,s.cleanInput)(),(0,d.initHovers)()}},7461:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleLevelSelect=void 0;const l=t(1435),a=t(4557),o=t(131),A=t(7085),i=t(4358);e.handleLevelSelect=function(n){const e=(0,l.getTarget)(n),t=(0,a.getClosestElement)(e,"[data-id]").dataset.id;if(!t)throw Error("Level ID is not defined...");(0,i.renderSelectedLevel)(t,o.levelsData),(0,A.saveLevelID)(t)}},3104:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.setStatusIcon=void 0;const l=t(4557),a=t(7881);e.setStatusIcon=function(n,e){const t=e||(0,a.getSavedStatus)(n);!function(n,e){const t=(0,l.getElement)(".header__levels");[...t.classList].forEach((n=>{n.includes("level--")&&t.classList.remove(n)})),t.classList.add(e)}(0,`level--${t}`),function(n,e){const t=document.querySelector(`[data-id="${n}"]`),l=t?[...t.classList]:null;null==l||l.forEach((n=>{(n.includes("level--undefined")||n.includes("level--done")||n.includes("level--hint"))&&(null==t||t.classList.remove(n))})),null==t||t.classList.add(e)}(n,`level--${t}`)}},1951:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.updateTaskTitle=void 0;const l=t(4557);e.updateTaskTitle=function(n,e){const t=(0,l.getElement)(".task__text"),a=e.find((e=>e.id===n));if(!a)throw Error("Level is not found...");t.textContent=null==a?void 0:a.task}},9753:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.updateLevelCount=void 0;const l=t(4557);e.updateLevelCount=function(n){const e=(0,l.getElement)(".section__levels .header__data--level"),t=(0,l.getElement)(".header .header__data--level");e.textContent=`${n}/10`,t.textContent=`${n}/10`}},4652:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.initHovers=e.initListeners=void 0;const l=t(4557),a=t(6413),o=t(974),A=t(7461),i=t(5403),r=t(9164),s=t(9905),d=t(6361),c=t(7934),p=t(1279),E=t(2690),u=t(3562),h=t(2953),g=t(8774),v=t(7207);function C(){const n=(0,l.getElement)(".playground"),e=(0,l.getElement)(".editor--html .content__container");n.addEventListener("mouseover",h.handleShapesHover),e.addEventListener("mouseover",g.handleHTMLHover),e.addEventListener("mouseout",v.removeHoverStates)}e.initListeners=function(){const n=(0,l.getElement)(".button--levels"),e=(0,l.getElement)(".levels__container"),t=(0,l.getElement)(".button--next"),h=(0,l.getElement)(".button--prev"),g=(0,l.getElement)(".button--check"),v=(0,l.getElement)("input"),b=(0,l.getElement)(".button--reset"),f=(0,l.getElement)(".button--close-popup"),B=(0,l.getElement)(".button--hint");n.addEventListener("click",a.showPanel),window.addEventListener("click",o.hidePanel),e.addEventListener("click",A.handleLevelSelect),t.addEventListener("click",i.nextLevel),h.addEventListener("click",r.prevLevel),g.addEventListener("click",s.handleAnswer),window.addEventListener("keydown",p.handleAnswerOnEnter),v.addEventListener("blur",d.handleInputFocus),b.addEventListener("click",c.resetGame),f.addEventListener("click",E.handleClosePopup),B.addEventListener("click",u.handleHint),C()},e.initHovers=C},3:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getCurrentLevelID=void 0,e.getCurrentLevelID=function(){return window.localStorage.getItem("level")||"1"}},7881:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getSavedStatus=void 0,e.getSavedStatus=function(n){const e=window.localStorage.getItem("results"),t=e?JSON.parse(e):{};return t[n]?t[n]:"unfinished"}},7085:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.saveLevelID=void 0,e.saveLevelID=function(n){window.localStorage.setItem("level",n)}},305:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.saveStatus=void 0,e.saveStatus=function(n,e){const t=window.localStorage.getItem("results"),l=t?JSON.parse(t):{};l[n]=e,window.localStorage.setItem("results",JSON.stringify(l))}},2690:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleClosePopup=void 0;const l=t(1435),a=t(4557),o=t(7934);e.handleClosePopup=function(n){const e=(0,a.getElement)(".popup__container"),t=(0,l.getTarget)(n);(t instanceof HTMLButtonElement||t.classList.contains("button--close-popup"))&&(e.classList.remove("show-popup"),document.body.style.overflow="",(0,o.resetGame)())}},3399:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.showPopup=void 0;const l=t(4557);e.showPopup=function(){(0,l.getElement)(".popup__container").classList.add("show-popup"),document.body.style.overflow="hidden"}},1484:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.cleanStatusIcons=void 0;const l=t(4557);e.cleanStatusIcons=function(){(0,l.getElementsArray)(".level__item").forEach((n=>{n.classList.remove("level--done"),n.classList.remove("level--hint")}))}},3015:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.cleanInput=void 0;const l=t(4557);e.cleanInput=function(){const n=(0,l.getElement)("input");if(!(n instanceof HTMLInputElement))throw Error("Target is not an HTMLInputElement...");n.value="",n.placeholder="Type in a CSS Selector...",n.removeAttribute("data-hint"),n.focus()}},2906:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.cleanSavedResults=void 0,e.cleanSavedResults=function(){window.localStorage.removeItem("results")}},7934:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.resetGame=void 0;const l=t(7085),a=t(2906),o=t(4358),A=t(131),i=t(3015),r=t(1484);e.resetGame=function(){(0,a.cleanSavedResults)(),(0,l.saveLevelID)("1"),(0,o.renderSelectedLevel)("1",A.levelsData),(0,i.cleanInput)(),(0,r.cleanStatusIcons)()}},974:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.hidePanel=void 0;const l=t(4557),a=t(1435);e.hidePanel=function(n){if(window.innerWidth>980)return;const e=(0,a.getTarget)(n);if(e.closest(".button--levels"))return;const t=(0,l.getElement)(".section__levels");(null==t?void 0:t.classList.contains("panel--visible"))&&(e.closest(".section__levels")&&!e.closest(".button--hide")||null==t||t.classList.remove("panel--visible"))}},6413:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.showPanel=void 0;const l=t(4557),a=t(1435);e.showPanel=function(n){if(window.innerWidth>980)return;if(!(0,a.getTarget)(n).closest(".button--levels"))return;const e=(0,l.getElement)(".section__levels");(null==e?void 0:e.classList.contains("panel--visible"))||null==e||e.classList.add("panel--visible")}},6116:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createElement=void 0,e.createElement=function(n,e,t){const l=document.createElement(n);return l.classList.add(...e),t&&(l.textContent=t),l}},4557:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getElementsArray=e.getClosestElement=e.getElement=void 0,e.getElement=function(n){const e=document.querySelector(n);if(!(e&&e instanceof HTMLElement))throw Error(`${n} element is not found...`);return e},e.getClosestElement=function(n,e){const t=n.closest(e);if(!(t&&t instanceof HTMLElement))throw Error(`${e} element is not found...`);return t},e.getElementsArray=function(n){const e=Array.from(document.querySelectorAll(n));if(!e)throw Error(`${n} elements are not found...`);return e.forEach((n=>{if(!(n instanceof HTMLElement))throw Error("Elements are not an array of HTMLElement...")})),e}},3118:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getLevelData=void 0,e.getLevelData=function(n,e){const t=e.find((e=>e.id===n));if(!t)throw Error("Level is not found...");return t}},1435:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getTarget=void 0,e.getTarget=function(n){const e=n.target;if(!e)throw Error("Target element is not found...");if(!(e instanceof HTMLElement))throw Error("Target is not an HTMLElement...");return e}},4212:(n,e,t)=>{n.exports=t.p+"a00e6376a5610208a35d.svg"},5141:(n,e,t)=>{n.exports=t.p+"e465eeb42de0f2908ed4.svg"},18:(n,e,t)=>{n.exports=t.p+"7b861611236f28409912.svg"},5824:(n,e,t)=>{n.exports=t.p+"32d521ab5ec4a607f49b.svg"},3797:(n,e,t)=>{n.exports=t.p+"017485f93e69c109f7fc.svg"},3008:(n,e,t)=>{n.exports=t.p+"4a1dcc4bacb9455a3dfb.svg"}},e={};function t(l){var a=e[l];if(void 0!==a)return a.exports;var o=e[l]={id:l,exports:{}};return n[l](o,o.exports,t),o.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var l in e)t.o(e,l)&&!t.o(n,l)&&Object.defineProperty(n,l,{enumerable:!0,get:e[l]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var l=e.getElementsByTagName("script");if(l.length)for(var a=l.length-1;a>-1&&!n;)n=l[a--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{console.log("✅ CSS Playground"),t(4643);const n=t(6077),e=t(4652),l=t(4358),a=t(131);alert("Привет! \nХочу попросить 1 день поправить ошибки,\nкоторые выскочили при деплое. Подожди, пожалуйста, с проверкой до среды:)\nСпасибо!"),(0,n.renderApp)(),window.addEventListener("DOMContentLoaded",(()=>{console.log("✅ DOM Rendered");const n=window.localStorage.getItem("level")||"1";(0,l.renderSelectedLevel)(n,a.levelsData),(0,e.initListeners)()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,