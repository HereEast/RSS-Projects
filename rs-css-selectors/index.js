(()=>{"use strict";var n={4238:(n,e,t)=>{t.d(e,{Z:()=>c});var l=t(4015),A=t.n(l),a=t(3645),i=t.n(a),o=t(9118),r=t(7973),s=t(550),d=i()(A());d.i(o.Z),d.i(r.Z),d.i(s.Z),d.push([n.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]);const c=d},7973:(n,e,t)=>{t.d(e,{Z:()=>o});var l=t(4015),A=t.n(l),a=t(3645),i=t.n(a)()(A());i.push([n.id,".dance {\n  animation: dance 1s ease-in infinite;\n}\n\n@keyframes dance {\n  0% { transform: translate(0, 0) rotate(0deg); }\n  25% { transform: translate(2px, 2px) rotate(5deg); }\n  50% { transform: translate(0, 0) rotate(0eg); }\n  75% { transform: translate(-2px, 2px) rotate(-5deg); }\n  100% { transform: translate(0, 0) rotate(0deg); }\n}","",{version:3,sources:["webpack://./src/styles/animation/dance.css"],names:[],mappings:"AAAA;EACE,oCAAoC;AACtC;;AAEA;EACE,KAAK,uCAAuC,EAAE;EAC9C,MAAM,2CAA2C,EAAE;EACnD,MAAM,sCAAsC,EAAE;EAC9C,MAAM,6CAA6C,EAAE;EACrD,OAAO,uCAAuC,EAAE;AAClD",sourcesContent:[".dance {\n  animation: dance 1s ease-in infinite;\n}\n\n@keyframes dance {\n  0% { transform: translate(0, 0) rotate(0deg); }\n  25% { transform: translate(2px, 2px) rotate(5deg); }\n  50% { transform: translate(0, 0) rotate(0eg); }\n  75% { transform: translate(-2px, 2px) rotate(-5deg); }\n  100% { transform: translate(0, 0) rotate(0deg); }\n}"],sourceRoot:""}]);const o=i},550:(n,e,t)=>{t.d(e,{Z:()=>o});var l=t(4015),A=t.n(l),a=t(3645),i=t.n(a)()(A());i.push([n.id,".hide {\n  transition: all 0.2s cubic-bezier(2, 4.5, 1, 1.5);\n  animation: hide 1.5s forwards;\n}\n\n@keyframes hide {\n  0% {\n    transform: translateX(0);\n  }\n\n  50% {\n    transform: translateX(120px);\n  }\n\n  100% {\n    transform: translateX(-1000px);\n  }\n}","",{version:3,sources:["webpack://./src/styles/animation/hide.css"],names:[],mappings:"AAAA;EACE,iDAAiD;EACjD,6BAA6B;AAC/B;;AAEA;EACE;IACE,wBAAwB;EAC1B;;EAEA;IACE,4BAA4B;EAC9B;;EAEA;IACE,8BAA8B;EAChC;AACF",sourcesContent:[".hide {\n  transition: all 0.2s cubic-bezier(2, 4.5, 1, 1.5);\n  animation: hide 1.5s forwards;\n}\n\n@keyframes hide {\n  0% {\n    transform: translateX(0);\n  }\n\n  50% {\n    transform: translateX(120px);\n  }\n\n  100% {\n    transform: translateX(-1000px);\n  }\n}"],sourceRoot:""}]);const o=i},9118:(n,e,t)=>{t.d(e,{Z:()=>o});var l=t(4015),A=t.n(l),a=t(3645),i=t.n(a)()(A());i.push([n.id,".shake {\n  animation: shake-animation 0.5s cubic-bezier(.36,.07,.19,.97) both;\n  transform: translate3d(0, 0, 0);\n  perspective: 1000px;\n}\n\n@keyframes shake-animation {\n  10%, 90% {\n    transform: translate3d(-1px, 0, 0);\n  }\n  \n  20%, 80% {\n    transform: translate3d(2px, 0, 0);\n  }\n\n  30%, 50%, 70% {\n    transform: translate3d(-4px, 0, 0);\n  }\n\n  40%, 60% {\n    transform: translate3d(4px, 0, 0);\n  }\n}","",{version:3,sources:["webpack://./src/styles/animation/shake.css"],names:[],mappings:"AAAA;EACE,kEAAkE;EAClE,+BAA+B;EAC/B,mBAAmB;AACrB;;AAEA;EACE;IACE,kCAAkC;EACpC;;EAEA;IACE,iCAAiC;EACnC;;EAEA;IACE,kCAAkC;EACpC;;EAEA;IACE,iCAAiC;EACnC;AACF",sourcesContent:[".shake {\n  animation: shake-animation 0.5s cubic-bezier(.36,.07,.19,.97) both;\n  transform: translate3d(0, 0, 0);\n  perspective: 1000px;\n}\n\n@keyframes shake-animation {\n  10%, 90% {\n    transform: translate3d(-1px, 0, 0);\n  }\n  \n  20%, 80% {\n    transform: translate3d(2px, 0, 0);\n  }\n\n  30%, 50%, 70% {\n    transform: translate3d(-4px, 0, 0);\n  }\n\n  40%, 60% {\n    transform: translate3d(4px, 0, 0);\n  }\n}"],sourceRoot:""}]);const o=i},7559:(n,e,t)=>{t.d(e,{Z:()=>o});var l=t(4015),A=t.n(l),a=t(3645),i=t.n(a)()(A());i.push([n.id,'/* LINKS */\n\na {\n  display: inline-block;\n  position: relative;\n}\n\na::before {\n  content: "";\n  position: absolute;\n  width: 100%;\n  height: 2px;\n  background-color: var(--red);\n  left: 0;\n  bottom: 0;\n  z-index: -10;\n\n  transition: all 0.2s ease-in-out;\n}\n\na:hover::before {\n  left: 0;\n  height: 90%;\n}\n\n/* BUTTONS */\n\nbutton {\n  outline: none;\n  border-radius: 0;\n}\n\n.button {\n  height: var(--button-height);\n  padding: 0 10px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n\n  background-color: var(--button--grey);\n  border: 1px solid var(--black);\n\n  font-family: "JetBrains Mono", monospace;\n  font-size: 12px;\n  color: var(--black);\n  text-transform: uppercase;\n  cursor: pointer;\n\n  transition: all 0.3s ease-in-out;\n}\n\n.button:hover {\n  padding: 0 20px;\n}\n\n.button--check:hover {\n  background-color: var(--green);\n}\n\n.button--hint:hover {\n  background-color: var(--yellow);\n}\n\n.button--reset:hover {\n  background-color: var(--orange);\n}\n\n.header .button--levels:hover {\n  background-color: var(--purple);\n}\n\n.levels__button {\n  width: 30px;\n}\n\n.levels__button:first-child {\n  border-right: none;\n}\n\n.button--prev:hover,\n.button--next:hover {\n  background-color: var(--yellow);\n}\n\n.button--hide {\n  height: 40px;\n}\n\n.button--hide:hover {\n  background-color: var(--red);\n}\n\n.button--close-popup:hover {\n  background-color: var(--yellow);\n}\n',"",{version:3,sources:["webpack://./src/styles/buttons.css"],names:[],mappings:"AAAA,UAAU;;AAEV;EACE,qBAAqB;EACrB,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,WAAW;EACX,WAAW;EACX,4BAA4B;EAC5B,OAAO;EACP,SAAS;EACT,YAAY;;EAEZ,gCAAgC;AAClC;;AAEA;EACE,OAAO;EACP,WAAW;AACb;;AAEA,YAAY;;AAEZ;EACE,aAAa;EACb,gBAAgB;AAClB;;AAEA;EACE,4BAA4B;EAC5B,eAAe;;EAEf,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,cAAc;;EAEd,qCAAqC;EACrC,8BAA8B;;EAE9B,wCAAwC;EACxC,eAAe;EACf,mBAAmB;EACnB,yBAAyB;EACzB,eAAe;;EAEf,gCAAgC;AAClC;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,+BAA+B;AACjC;;AAEA;EACE,+BAA+B;AACjC;;AAEA;EACE,+BAA+B;AACjC;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,kBAAkB;AACpB;;AAEA;;EAEE,+BAA+B;AACjC;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,4BAA4B;AAC9B;;AAEA;EACE,+BAA+B;AACjC",sourcesContent:['/* LINKS */\n\na {\n  display: inline-block;\n  position: relative;\n}\n\na::before {\n  content: "";\n  position: absolute;\n  width: 100%;\n  height: 2px;\n  background-color: var(--red);\n  left: 0;\n  bottom: 0;\n  z-index: -10;\n\n  transition: all 0.2s ease-in-out;\n}\n\na:hover::before {\n  left: 0;\n  height: 90%;\n}\n\n/* BUTTONS */\n\nbutton {\n  outline: none;\n  border-radius: 0;\n}\n\n.button {\n  height: var(--button-height);\n  padding: 0 10px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n\n  background-color: var(--button--grey);\n  border: 1px solid var(--black);\n\n  font-family: "JetBrains Mono", monospace;\n  font-size: 12px;\n  color: var(--black);\n  text-transform: uppercase;\n  cursor: pointer;\n\n  transition: all 0.3s ease-in-out;\n}\n\n.button:hover {\n  padding: 0 20px;\n}\n\n.button--check:hover {\n  background-color: var(--green);\n}\n\n.button--hint:hover {\n  background-color: var(--yellow);\n}\n\n.button--reset:hover {\n  background-color: var(--orange);\n}\n\n.header .button--levels:hover {\n  background-color: var(--purple);\n}\n\n.levels__button {\n  width: 30px;\n}\n\n.levels__button:first-child {\n  border-right: none;\n}\n\n.button--prev:hover,\n.button--next:hover {\n  background-color: var(--yellow);\n}\n\n.button--hide {\n  height: 40px;\n}\n\n.button--hide:hover {\n  background-color: var(--red);\n}\n\n.button--close-popup:hover {\n  background-color: var(--yellow);\n}\n'],sourceRoot:""}]);const o=i},6410:(n,e,t)=>{t.d(e,{Z:()=>o});var l=t(4015),A=t.n(l),a=t(3645),i=t.n(a)()(A());i.push([n.id,".block__editors {\n  width: 100%;\n  max-height: 400px;\n  display: flex;\n}\n\n.editor {\n  width: 50%;\n  display: flex;\n  flex-direction: column;\n\n  border: 1px solid var(--border);\n}\n\n.editor__header {\n  width: 100%;\n  height: 40px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-shrink: 0;\n  padding: 0 15px;\n\n  border-bottom: 1px solid var(--border);\n}\n\n.editor__title {\n  opacity: 0.9;\n}\n\n.editor__file {\n  opacity: 0.5;\n}\n\n.editor__body {\n  width: 100%;\n  display: flex;\n  align-items: flex-start;\n\n  background-color: var(--white);\n  overflow-y: scroll;\n}\n\n.body__panel--lines {\n  width: 40px;\n  padding: 10px 10px;\n\n  display: flex;\n  flex-direction: column;\n  background-color: var(--back--grey);\n}\n\n.body__panel--lines span {\n  text-align: right;\n  color: var(--text--grey);\n}\n\n.body__panel--content {\n  width: 100%;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n}\n\n/* CSS, HTML */\n\n.editor--css {\n  border-right: none;\n}\n\n.editor--html .body__panel--lines {\n  background-color: transparent;\n  border-right: 1px solid var(--border);\n}\n\n.editor--html .editor__body {\n  background-color: var(--back);\n}\n\n.editor--html .content__container {\n  display: flex;\n  flex-direction: column;\n}\n\n.editor--html .tag-line {\n  font-weight: 300;\n  opacity: 0.5;\n  cursor: default;\n\n  transition: all 0.1s ease-in-out;\n}\n\n.editor--html .tag-line.highlight {\n  opacity: 1;\n}\n\n\n/**/\n\n@media all and (max-width: 750px) {\n  .block__editors {\n    flex-direction: column;\n    gap: 20px;\n    max-height: initial;\n  }\n\n  .editor {\n    width: 100%;\n    max-height: 320px;\n    height: 100%;\n  }\n\n  .editor__body {\n    overflow-y: hidden;\n  }\n\n  .editor--css {\n    border-right: 1px solid var(--border);\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/editors.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,iBAAiB;EACjB,aAAa;AACf;;AAEA;EACE,UAAU;EACV,aAAa;EACb,sBAAsB;;EAEtB,+BAA+B;AACjC;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,cAAc;EACd,eAAe;;EAEf,sCAAsC;AACxC;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,WAAW;EACX,aAAa;EACb,uBAAuB;;EAEvB,8BAA8B;EAC9B,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,kBAAkB;;EAElB,aAAa;EACb,sBAAsB;EACtB,mCAAmC;AACrC;;AAEA;EACE,iBAAiB;EACjB,wBAAwB;AAC1B;;AAEA;EACE,WAAW;EACX,aAAa;EACb,aAAa;EACb,sBAAsB;AACxB;;AAEA,cAAc;;AAEd;EACE,kBAAkB;AACpB;;AAEA;EACE,6BAA6B;EAC7B,qCAAqC;AACvC;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,gBAAgB;EAChB,YAAY;EACZ,eAAe;;EAEf,gCAAgC;AAClC;;AAEA;EACE,UAAU;AACZ;;;AAGA,GAAG;;AAEH;EACE;IACE,sBAAsB;IACtB,SAAS;IACT,mBAAmB;EACrB;;EAEA;IACE,WAAW;IACX,iBAAiB;IACjB,YAAY;EACd;;EAEA;IACE,kBAAkB;EACpB;;EAEA;IACE,qCAAqC;EACvC;AACF",sourcesContent:[".block__editors {\n  width: 100%;\n  max-height: 400px;\n  display: flex;\n}\n\n.editor {\n  width: 50%;\n  display: flex;\n  flex-direction: column;\n\n  border: 1px solid var(--border);\n}\n\n.editor__header {\n  width: 100%;\n  height: 40px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-shrink: 0;\n  padding: 0 15px;\n\n  border-bottom: 1px solid var(--border);\n}\n\n.editor__title {\n  opacity: 0.9;\n}\n\n.editor__file {\n  opacity: 0.5;\n}\n\n.editor__body {\n  width: 100%;\n  display: flex;\n  align-items: flex-start;\n\n  background-color: var(--white);\n  overflow-y: scroll;\n}\n\n.body__panel--lines {\n  width: 40px;\n  padding: 10px 10px;\n\n  display: flex;\n  flex-direction: column;\n  background-color: var(--back--grey);\n}\n\n.body__panel--lines span {\n  text-align: right;\n  color: var(--text--grey);\n}\n\n.body__panel--content {\n  width: 100%;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n}\n\n/* CSS, HTML */\n\n.editor--css {\n  border-right: none;\n}\n\n.editor--html .body__panel--lines {\n  background-color: transparent;\n  border-right: 1px solid var(--border);\n}\n\n.editor--html .editor__body {\n  background-color: var(--back);\n}\n\n.editor--html .content__container {\n  display: flex;\n  flex-direction: column;\n}\n\n.editor--html .tag-line {\n  font-weight: 300;\n  opacity: 0.5;\n  cursor: default;\n\n  transition: all 0.1s ease-in-out;\n}\n\n.editor--html .tag-line.highlight {\n  opacity: 1;\n}\n\n\n/**/\n\n@media all and (max-width: 750px) {\n  .block__editors {\n    flex-direction: column;\n    gap: 20px;\n    max-height: initial;\n  }\n\n  .editor {\n    width: 100%;\n    max-height: 320px;\n    height: 100%;\n  }\n\n  .editor__body {\n    overflow-y: hidden;\n  }\n\n  .editor--css {\n    border-right: 1px solid var(--border);\n  }\n}\n"],sourceRoot:""}]);const o=i},7348:(n,e,t)=>{t.d(e,{Z:()=>o});var l=t(4015),A=t.n(l),a=t(3645),i=t.n(a)()(A());i.push([n.id,".footer {\n  width: 100%;\n}\n\n.footer__container {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  padding: 10px 20px;\n\n  border: 1px solid var(--border);\n}\n\n.footer a {\n  color: var(--white);\n  text-decoration: none;\n  display: inline;\n  text-align: right;\n}\n\n/**/\n\n@media all and (max-width: 450px) {\n  .footer__container {\n    padding: 15px 10px;\n  }\n\n  .footer__copy {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    text-align: left;\n  }\n}","",{version:3,sources:["webpack://./src/styles/footer.css"],names:[],mappings:"AAAA;EACE,WAAW;AACb;;AAEA;EACE,WAAW;EACX,aAAa;EACb,8BAA8B;EAC9B,uBAAuB;EACvB,kBAAkB;;EAElB,+BAA+B;AACjC;;AAEA;EACE,mBAAmB;EACnB,qBAAqB;EACrB,eAAe;EACf,iBAAiB;AACnB;;AAEA,GAAG;;AAEH;EACE;IACE,kBAAkB;EACpB;;EAEA;IACE,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,gBAAgB;EAClB;AACF",sourcesContent:[".footer {\n  width: 100%;\n}\n\n.footer__container {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  padding: 10px 20px;\n\n  border: 1px solid var(--border);\n}\n\n.footer a {\n  color: var(--white);\n  text-decoration: none;\n  display: inline;\n  text-align: right;\n}\n\n/**/\n\n@media all and (max-width: 450px) {\n  .footer__container {\n    padding: 15px 10px;\n  }\n\n  .footer__copy {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    text-align: left;\n  }\n}"],sourceRoot:""}]);const o=i},5984:(n,e,t)=>{t.d(e,{Z:()=>o});var l=t(4015),A=t.n(l),a=t(3645),i=t.n(a)()(A());i.push([n.id,".task__text {\n  font-weight: 400;\n  text-align: center;\n  opacity: 0.9;\n}\n\n.graphics__container {\n  position: relative;\n  width: 100%;\n  min-height: 160px;\n  height: 100%;\n  padding: 10px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: var(--black);\n}\n\n.playground {\n  min-width: 460px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n}\n\n.playground > * {\n  position: relative;\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n\n  transform: translateX(0);\n}\n\n.playground .tooltip {\n  position: absolute;\n  padding: 10px 15px;\n  background-color: var(--white);\n  color: var(--black);\n  line-height: 1;\n  font-size: 13px;\n\n  pointer-events: none;\n  z-index: 100;\n}\n\n/**/\n\n@media all and (max-width: 750px) {\n  .graphics__container {\n    height: 220px;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/graphics.css"],names:[],mappings:"AAAA;EACE,gBAAgB;EAChB,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,iBAAiB;EACjB,YAAY;EACZ,aAAa;;EAEb,aAAa;EACb,uBAAuB;EACvB,mBAAmB;;EAEnB,8BAA8B;AAChC;;AAEA;EACE,gBAAgB;EAChB,WAAW;EACX,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,kBAAkB;EAClB,2BAA2B;EAC3B,wBAAwB;EACxB,4BAA4B;;EAE5B,wBAAwB;AAC1B;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,8BAA8B;EAC9B,mBAAmB;EACnB,cAAc;EACd,eAAe;;EAEf,oBAAoB;EACpB,YAAY;AACd;;AAEA,GAAG;;AAEH;EACE;IACE,aAAa;EACf;AACF",sourcesContent:[".task__text {\n  font-weight: 400;\n  text-align: center;\n  opacity: 0.9;\n}\n\n.graphics__container {\n  position: relative;\n  width: 100%;\n  min-height: 160px;\n  height: 100%;\n  padding: 10px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: var(--black);\n}\n\n.playground {\n  min-width: 460px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n}\n\n.playground > * {\n  position: relative;\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n\n  transform: translateX(0);\n}\n\n.playground .tooltip {\n  position: absolute;\n  padding: 10px 15px;\n  background-color: var(--white);\n  color: var(--black);\n  line-height: 1;\n  font-size: 13px;\n\n  pointer-events: none;\n  z-index: 100;\n}\n\n/**/\n\n@media all and (max-width: 750px) {\n  .graphics__container {\n    height: 220px;\n  }\n}\n"],sourceRoot:""}]);const o=i},3497:(n,e,t)=>{t.d(e,{Z:()=>o});var l=t(4015),A=t.n(l),a=t(3645),i=t.n(a)()(A());i.push([n.id,".header {\n  width: 100%;\n  background-color: var(--back);\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.header__logo {\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n\n  cursor: default;\n}\n\nh1 {\n  font-weight: 500;\n}\n\n.header__controls,\n.header__buttons {\n  display: flex;\n  gap: 5px;\n}\n\n.level__info {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 5px;\n}\n\n.header__levels {\n  display: none;\n}\n\n.header__levels span {\n  display: block;\n}\n\n/* ICON */\n\n.logo__icon {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n}\n\n.logo__icon svg {\n  width: 60px;\n  height: 13px;\n}\n\n.header__logo .icon path,\n.header__logo .icon circle,\n.header__logo .icon rect {\n  transition: all 0.2s cubic-bezier(0.5, 1.8, 0.6, 1.5);\n}\n\n.header__logo .icon path {\n  transform: translateX(0);\n  transition-delay: 0;\n}\n\n.header__logo .icon rect {\n  transform: translateX(0);\n  transition-delay: 0.1s;\n}\n\n.header__logo .icon circle {\n  transform: translateX();\n  transition-delay: 0.2s;\n}\n\n.header__logo:hover .icon path {\n  transform: translateX(10px);\n  transition-delay: 0;\n}\n\n.header__logo:hover .icon rect {\n  transform: translateX(10px);\n  transition-delay: 0.1s;\n}\n\n.header__logo:hover .icon circle {\n  transform: translateX(10px);\n  transition-delay: 0.2s;\n}\n\n/**/\n\n@media all and (max-width: 980px) {\n  .header {\n    position: fixed;\n    padding: 20px;\n    left: 0;\n    top: 0;\n    z-index: 1000;\n  }\n\n  .header__levels {\n    display: flex;\n    gap: 15px;\n  }\n}\n\n@media all and (max-width: 450px) {\n  .header {\n    padding: 20px 10px;\n  }\n\n  .logo__icon {\n    display: none;\n  }\n}","",{version:3,sources:["webpack://./src/styles/header.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,6BAA6B;;EAE7B,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,mBAAmB;EACnB,QAAQ;;EAER,eAAe;AACjB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;;EAEE,aAAa;EACb,QAAQ;AACV;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,QAAQ;AACV;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,cAAc;AAChB;;AAEA,SAAS;;AAET;EACE,aAAa;EACb,2BAA2B;EAC3B,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;;;EAGE,qDAAqD;AACvD;;AAEA;EACE,wBAAwB;EACxB,mBAAmB;AACrB;;AAEA;EACE,wBAAwB;EACxB,sBAAsB;AACxB;;AAEA;EACE,uBAAuB;EACvB,sBAAsB;AACxB;;AAEA;EACE,2BAA2B;EAC3B,mBAAmB;AACrB;;AAEA;EACE,2BAA2B;EAC3B,sBAAsB;AACxB;;AAEA;EACE,2BAA2B;EAC3B,sBAAsB;AACxB;;AAEA,GAAG;;AAEH;EACE;IACE,eAAe;IACf,aAAa;IACb,OAAO;IACP,MAAM;IACN,aAAa;EACf;;EAEA;IACE,aAAa;IACb,SAAS;EACX;AACF;;AAEA;EACE;IACE,kBAAkB;EACpB;;EAEA;IACE,aAAa;EACf;AACF",sourcesContent:[".header {\n  width: 100%;\n  background-color: var(--back);\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.header__logo {\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n\n  cursor: default;\n}\n\nh1 {\n  font-weight: 500;\n}\n\n.header__controls,\n.header__buttons {\n  display: flex;\n  gap: 5px;\n}\n\n.level__info {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 5px;\n}\n\n.header__levels {\n  display: none;\n}\n\n.header__levels span {\n  display: block;\n}\n\n/* ICON */\n\n.logo__icon {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n}\n\n.logo__icon svg {\n  width: 60px;\n  height: 13px;\n}\n\n.header__logo .icon path,\n.header__logo .icon circle,\n.header__logo .icon rect {\n  transition: all 0.2s cubic-bezier(0.5, 1.8, 0.6, 1.5);\n}\n\n.header__logo .icon path {\n  transform: translateX(0);\n  transition-delay: 0;\n}\n\n.header__logo .icon rect {\n  transform: translateX(0);\n  transition-delay: 0.1s;\n}\n\n.header__logo .icon circle {\n  transform: translateX();\n  transition-delay: 0.2s;\n}\n\n.header__logo:hover .icon path {\n  transform: translateX(10px);\n  transition-delay: 0;\n}\n\n.header__logo:hover .icon rect {\n  transform: translateX(10px);\n  transition-delay: 0.1s;\n}\n\n.header__logo:hover .icon circle {\n  transform: translateX(10px);\n  transition-delay: 0.2s;\n}\n\n/**/\n\n@media all and (max-width: 980px) {\n  .header {\n    position: fixed;\n    padding: 20px;\n    left: 0;\n    top: 0;\n    z-index: 1000;\n  }\n\n  .header__levels {\n    display: flex;\n    gap: 15px;\n  }\n}\n\n@media all and (max-width: 450px) {\n  .header {\n    padding: 20px 10px;\n  }\n\n  .logo__icon {\n    display: none;\n  }\n}"],sourceRoot:""}]);const o=i},3771:(n,e,t)=>{t.d(e,{Z:()=>f});var l=t(4015),A=t.n(l),a=t(3645),i=t.n(a),o=t(8772),r=t(7179),s=t(7559),d=t(3497),c=t(8756),p=t(7348),E=t(6410),h=t(5984),u=t(2675),g=t(691),v=t(3361),C=t(4238),x=t(1574),b=i()(A());b.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&family=JetBrains+Mono:wght@300;400;500;600;700&display=swap);"]),b.i(o.Z),b.i(r.Z),b.i(s.Z),b.i(d.Z),b.i(c.Z),b.i(p.Z),b.i(E.Z),b.i(h.Z),b.i(u.Z),b.i(g.Z),b.i(v.Z),b.i(C.Z),b.i(x.Z),b.push([n.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]);const f=b},2675:(n,e,t)=>{t.d(e,{Z:()=>o});var l=t(4015),A=t.n(l),a=t(3645),i=t.n(a)()(A());i.push([n.id,'/* INPUT */\n\n.input__container {\n  display: flex;\n  gap: 10px;\n}\n\ninput {\n  font-family: "JetBrains Mono", monospace;\n  color: var(--black);\n\n  outline: 0;\n  border: 0;\n  border-radius: 0;\n\n  width: 100%;\n  height: var(--button-height);\n  padding: 0 10px;\n\n  transition: all 0.5s ease-in-out;\n}',"",{version:3,sources:["webpack://./src/styles/input.css"],names:[],mappings:"AAAA,UAAU;;AAEV;EACE,aAAa;EACb,SAAS;AACX;;AAEA;EACE,wCAAwC;EACxC,mBAAmB;;EAEnB,UAAU;EACV,SAAS;EACT,gBAAgB;;EAEhB,WAAW;EACX,4BAA4B;EAC5B,eAAe;;EAEf,gCAAgC;AAClC",sourcesContent:['/* INPUT */\n\n.input__container {\n  display: flex;\n  gap: 10px;\n}\n\ninput {\n  font-family: "JetBrains Mono", monospace;\n  color: var(--black);\n\n  outline: 0;\n  border: 0;\n  border-radius: 0;\n\n  width: 100%;\n  height: var(--button-height);\n  padding: 0 10px;\n\n  transition: all 0.5s ease-in-out;\n}'],sourceRoot:""}]);const o=i},549:(n,e,t)=>{t.d(e,{Z:()=>o});var l=t(4015),A=t.n(l),a=t(3645),i=t.n(a)()(A());i.push([n.id,"/* LEVEL 1 */\n\n.level--1 .playground {\n  gap: 10px;\n}\n\n.level--1 .tag-line:nth-child(2),\n.level--1 .tag-line:nth-child(3),\n.level--1 .tag-line:nth-child(4) {\n  padding-left: 20px;\n}\n\n.level--1 ball {\n  width: 100px;\n  height: 100px;\n}\n\n/**/\n\n@media all and (max-width: 420px) {\n  .level--1 .playground {\n    gap: 5px;\n  }\n\n  .level--1 ball {\n    width: 90px;\n    height: 90px;\n  }\n\n  .level--1 triangle {\n    border-width: 0 55px 80px 55px;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/levels/level-1.css"],names:[],mappings:"AAAA,YAAY;;AAEZ;EACE,SAAS;AACX;;AAEA;;;EAGE,kBAAkB;AACpB;;AAEA;EACE,YAAY;EACZ,aAAa;AACf;;AAEA,GAAG;;AAEH;EACE;IACE,QAAQ;EACV;;EAEA;IACE,WAAW;IACX,YAAY;EACd;;EAEA;IACE,8BAA8B;EAChC;AACF",sourcesContent:["/* LEVEL 1 */\n\n.level--1 .playground {\n  gap: 10px;\n}\n\n.level--1 .tag-line:nth-child(2),\n.level--1 .tag-line:nth-child(3),\n.level--1 .tag-line:nth-child(4) {\n  padding-left: 20px;\n}\n\n.level--1 ball {\n  width: 100px;\n  height: 100px;\n}\n\n/**/\n\n@media all and (max-width: 420px) {\n  .level--1 .playground {\n    gap: 5px;\n  }\n\n  .level--1 ball {\n    width: 90px;\n    height: 90px;\n  }\n\n  .level--1 triangle {\n    border-width: 0 55px 80px 55px;\n  }\n}\n"],sourceRoot:""}]);const o=i},6748:(n,e,t)=>{t.d(e,{Z:()=>o});var l=t(4015),A=t.n(l),a=t(3645),i=t.n(a)()(A());i.push([n.id,"/* LEVEL 10 */\n\n.level--10 .tag-line {\n  padding-left: 20px;\n}\n\n.level--10 .tag-line:nth-child(3),\n.level--10 .tag-line:nth-child(6) {\n  padding-left: 40px;\n}\n\n.level--10 .tag-line:first-child,\n.level--10 .tag-line:last-child {\n  padding-left: 0;\n}\n\n.level--10 box {\n  width: 110px;\n  height: 110px;\n}\n\n.level--10 box:nth-child(2) {\n  background-color: var(--border);\n}\n\n.level--10 ball {\n  background-color: var(--green);\n}\n\n.level--10 ball.yellow {\n  background-color: var(--yellow);\n}\n\n.level--10 ball.small {\n  width: 40px;\n  height: 40px;\n}\n\n/**/\n\n@media all and (max-width: 480px) {\n  .level--10 .playground {\n    gap: 12px;\n  }\n\n  .level--10 box {\n    width: 95px;\n    height: 95px;\n  }\n\n  .level--10 ball {\n    width: 70px;\n    height: 70px;\n  }\n\n  .level--10 ball.small {\n    width: 25px;\n    height: 25px;\n  }\n}\n\n","",{version:3,sources:["webpack://./src/styles/levels/level-10.css"],names:[],mappings:"AAAA,aAAa;;AAEb;EACE,kBAAkB;AACpB;;AAEA;;EAEE,kBAAkB;AACpB;;AAEA;;EAEE,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,+BAA+B;AACjC;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,+BAA+B;AACjC;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA,GAAG;;AAEH;EACE;IACE,SAAS;EACX;;EAEA;IACE,WAAW;IACX,YAAY;EACd;;EAEA;IACE,WAAW;IACX,YAAY;EACd;;EAEA;IACE,WAAW;IACX,YAAY;EACd;AACF",sourcesContent:["/* LEVEL 10 */\n\n.level--10 .tag-line {\n  padding-left: 20px;\n}\n\n.level--10 .tag-line:nth-child(3),\n.level--10 .tag-line:nth-child(6) {\n  padding-left: 40px;\n}\n\n.level--10 .tag-line:first-child,\n.level--10 .tag-line:last-child {\n  padding-left: 0;\n}\n\n.level--10 box {\n  width: 110px;\n  height: 110px;\n}\n\n.level--10 box:nth-child(2) {\n  background-color: var(--border);\n}\n\n.level--10 ball {\n  background-color: var(--green);\n}\n\n.level--10 ball.yellow {\n  background-color: var(--yellow);\n}\n\n.level--10 ball.small {\n  width: 40px;\n  height: 40px;\n}\n\n/**/\n\n@media all and (max-width: 480px) {\n  .level--10 .playground {\n    gap: 12px;\n  }\n\n  .level--10 box {\n    width: 95px;\n    height: 95px;\n  }\n\n  .level--10 ball {\n    width: 70px;\n    height: 70px;\n  }\n\n  .level--10 ball.small {\n    width: 25px;\n    height: 25px;\n  }\n}\n\n"],sourceRoot:""}]);const o=i},9903:(n,e,t)=>{t.d(e,{Z:()=>o});var l=t(4015),A=t.n(l),a=t(3645),i=t.n(a)()(A());i.push([n.id,"/* LEVEL 2 */\n\n.level--2 .tag-line:nth-child(2),\n.level--2 .tag-line:nth-child(n + 5):nth-child(-n + 7) {\n  padding-left: 20px;\n}\n\n.level--2 .tag-line:nth-child(3),\n.level--2 .tag-line:nth-child(4) {\n  padding-left: 40px;\n}\n\n.level--2 fish {\n  position: relative;\n  width: 180px;\n  height: 100px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.level--2 fish ball {\n  width: 40px;\n  height: 40px;\n  background-color: var(--yellow);\n  position: absolute;\n}\n\n.level--2 fish ball:first-child {\n  left: 35px;\n}\n\n.level--2 fish ball:last-child {\n  right: 60px;\n}\n\n.level--2 ball {\n  background-color: var(--green);\n}\n\n/**/\n\n@media all and (max-width: 480px) {\n  .level--2 .playground {\n    gap: 15px;\n  }\n\n  .level--2 fish {\n    width: 160px;\n    height: 100px;\n  }\n\n  .level--2 fish ball {\n    width: 30px;\n    height: 30px;\n  }\n\n  .level--2 ball {\n    width: 80px;\n    height: 80px;\n  }\n}\n\n@media all and (max-width: 420px) {\n  .level--2 fish {\n    width: 150px;\n    height: 100px;\n  }\n\n  .level--2 fish ball {\n    width: 25px;\n    height: 25px;\n  }\n\n  .level--2 ball {\n    width: 70px;\n    height: 70px;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/levels/level-2.css"],names:[],mappings:"AAAA,YAAY;;AAEZ;;EAEE,kBAAkB;AACpB;;AAEA;;EAEE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,aAAa;;EAEb,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,+BAA+B;EAC/B,kBAAkB;AACpB;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,8BAA8B;AAChC;;AAEA,GAAG;;AAEH;EACE;IACE,SAAS;EACX;;EAEA;IACE,YAAY;IACZ,aAAa;EACf;;EAEA;IACE,WAAW;IACX,YAAY;EACd;;EAEA;IACE,WAAW;IACX,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;IACZ,aAAa;EACf;;EAEA;IACE,WAAW;IACX,YAAY;EACd;;EAEA;IACE,WAAW;IACX,YAAY;EACd;AACF",sourcesContent:["/* LEVEL 2 */\n\n.level--2 .tag-line:nth-child(2),\n.level--2 .tag-line:nth-child(n + 5):nth-child(-n + 7) {\n  padding-left: 20px;\n}\n\n.level--2 .tag-line:nth-child(3),\n.level--2 .tag-line:nth-child(4) {\n  padding-left: 40px;\n}\n\n.level--2 fish {\n  position: relative;\n  width: 180px;\n  height: 100px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.level--2 fish ball {\n  width: 40px;\n  height: 40px;\n  background-color: var(--yellow);\n  position: absolute;\n}\n\n.level--2 fish ball:first-child {\n  left: 35px;\n}\n\n.level--2 fish ball:last-child {\n  right: 60px;\n}\n\n.level--2 ball {\n  background-color: var(--green);\n}\n\n/**/\n\n@media all and (max-width: 480px) {\n  .level--2 .playground {\n    gap: 15px;\n  }\n\n  .level--2 fish {\n    width: 160px;\n    height: 100px;\n  }\n\n  .level--2 fish ball {\n    width: 30px;\n    height: 30px;\n  }\n\n  .level--2 ball {\n    width: 80px;\n    height: 80px;\n  }\n}\n\n@media all and (max-width: 420px) {\n  .level--2 fish {\n    width: 150px;\n    height: 100px;\n  }\n\n  .level--2 fish ball {\n    width: 25px;\n    height: 25px;\n  }\n\n  .level--2 ball {\n    width: 70px;\n    height: 70px;\n  }\n}\n"],sourceRoot:""}]);const o=i},8544:(n,e,t)=>{t.d(e,{Z:()=>p});var l=t(4015),A=t.n(l),a=t(3645),i=t.n(a),o=t(1667),r=t.n(o),s=t(4212),d=i()(A()),c=r()(s);d.push([n.id,"/* LEVEL 3 */\n\n.level--3 .playground {\n  gap: 10px;\n}\n\n.level--3 .tag-line {\n  padding-left: 20px;\n}\n\n.level--3 .tag-line:first-child,\n.level--3 .tag-line:last-child {\n  padding-left: 0;\n}\n\n.level--3 bear:nth-child(2) {\n  background-image: url("+c+");\n}\n\n@media all and (max-width: 420px) {\n  .level--3 .playground {\n    gap: 15px;\n  }\n\n  .level--3 bear {\n    width: 60px;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/levels/level-3.css"],names:[],mappings:"AAAA,YAAY;;AAEZ;EACE,SAAS;AACX;;AAEA;EACE,kBAAkB;AACpB;;AAEA;;EAEE,eAAe;AACjB;;AAEA;EACE,yDAAoD;AACtD;;AAEA;EACE;IACE,SAAS;EACX;;EAEA;IACE,WAAW;EACb;AACF",sourcesContent:['/* LEVEL 3 */\n\n.level--3 .playground {\n  gap: 10px;\n}\n\n.level--3 .tag-line {\n  padding-left: 20px;\n}\n\n.level--3 .tag-line:first-child,\n.level--3 .tag-line:last-child {\n  padding-left: 0;\n}\n\n.level--3 bear:nth-child(2) {\n  background-image: url("../../assets/bear--pink.svg");\n}\n\n@media all and (max-width: 420px) {\n  .level--3 .playground {\n    gap: 15px;\n  }\n\n  .level--3 bear {\n    width: 60px;\n  }\n}\n'],sourceRoot:""}]);const p=d},9355:(n,e,t)=>{t.d(e,{Z:()=>o});var l=t(4015),A=t.n(l),a=t(3645),i=t.n(a)()(A());i.push([n.id,"/* LEVEL 4 */\n\n.level--4 .tag-line {\n  padding-left: 20px;\n}\n\n.level--4 .tag-line:nth-child(5) {\n  padding-left: 40px;\n}\n\n.level--4 .tag-line:first-child,\n.level--4 .tag-line:last-child {\n  padding-left: 0;\n}\n\n.level--4 duck {\n  margin-right: -5px;\n}\n\n.level--4 box {\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.level--4 box duck {\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n\n  position: absolute;\n  width: 50px;\n  height: 50px;\n  margin-left: 0;\n}\n\n@media all and (max-width: 550px) {\n  .level--4 .playground {\n    gap: 15px;\n  }\n}\n\n@media all and (max-width: 450px) {\n  .level--4 .playground {\n    gap: 12px;\n  }\n\n  .level--4 box {\n    width: 85px;\n    height: 85px;\n  }\n\n  .level--4 duck {\n    width: 85px;\n    height: 80px;\n    transform: rotate(-90deg);\n  }\n\n  .level--4 ball.small {\n    width: 45px;\n    height: 45px;\n  }\n\n  .level--4 box duck.small {\n    margin-top: 0;\n  }\n}\n\n@media all and (max-width: 420px) {\n  \n}\n","",{version:3,sources:["webpack://./src/styles/levels/level-4.css"],names:[],mappings:"AAAA,YAAY;;AAEZ;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;;EAEE,eAAe;AACjB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,2BAA2B;EAC3B,wBAAwB;EACxB,4BAA4B;;EAE5B,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,cAAc;AAChB;;AAEA;EACE;IACE,SAAS;EACX;AACF;;AAEA;EACE;IACE,SAAS;EACX;;EAEA;IACE,WAAW;IACX,YAAY;EACd;;EAEA;IACE,WAAW;IACX,YAAY;IACZ,yBAAyB;EAC3B;;EAEA;IACE,WAAW;IACX,YAAY;EACd;;EAEA;IACE,aAAa;EACf;AACF;;AAEA;;AAEA",sourcesContent:["/* LEVEL 4 */\n\n.level--4 .tag-line {\n  padding-left: 20px;\n}\n\n.level--4 .tag-line:nth-child(5) {\n  padding-left: 40px;\n}\n\n.level--4 .tag-line:first-child,\n.level--4 .tag-line:last-child {\n  padding-left: 0;\n}\n\n.level--4 duck {\n  margin-right: -5px;\n}\n\n.level--4 box {\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.level--4 box duck {\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n\n  position: absolute;\n  width: 50px;\n  height: 50px;\n  margin-left: 0;\n}\n\n@media all and (max-width: 550px) {\n  .level--4 .playground {\n    gap: 15px;\n  }\n}\n\n@media all and (max-width: 450px) {\n  .level--4 .playground {\n    gap: 12px;\n  }\n\n  .level--4 box {\n    width: 85px;\n    height: 85px;\n  }\n\n  .level--4 duck {\n    width: 85px;\n    height: 80px;\n    transform: rotate(-90deg);\n  }\n\n  .level--4 ball.small {\n    width: 45px;\n    height: 45px;\n  }\n\n  .level--4 box duck.small {\n    margin-top: 0;\n  }\n}\n\n@media all and (max-width: 420px) {\n  \n}\n"],sourceRoot:""}]);const o=i},4973:(n,e,t)=>{t.d(e,{Z:()=>p});var l=t(4015),A=t.n(l),a=t(3645),i=t.n(a),o=t(1667),r=t.n(o),s=t(3797),d=i()(A()),c=r()(s);d.push([n.id,"/* LEVEL 5 */\n\n.level--5 .tag-line {\n  padding-left: 20px;\n}\n\n.level--5 .tag-line:nth-child(4),\n.level--5 .tag-line:nth-child(7) {\n  padding-left: 40px;\n}\n\n.level--5 .tag-line:first-child,\n.level--5 .tag-line:last-child {\n  padding-left: 0;\n}\n\n.level--5 ball,\n.level--5 box {\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.level--5 ball {\n  width: 110px;\n  height: 110px;\n}\n\n.level--5 ball fish,\n.level--5 box fish {\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n\n  position: absolute;\n  width: 60px;\n  height: 40px;\n}\n\n.level--5 fish {\n  background-image: url("+c+");\n}\n\n@media all and (max-width: 550px) {\n  .level--5 .playground {\n    gap: 15px;\n  }\n}\n\n@media all and (max-width: 480px) {\n  .level--5 .playground {\n    gap: 12px;\n  }\n\n  .level--5 ball {\n    width: 90px;\n    height: 90px;\n  }\n\n  .level--5 box {\n    width: 85px;\n    height: 85px;\n  }\n\n  .level--5 fish.small {\n    width: 50px;\n  }\n}\n\n@media all and (max-width: 480px) {\n  .level--5 ball {\n    width: 80px;\n    height: 80px;\n  }\n\n  .level--5 box {\n    width: 75px;\n    height: 75px;\n  }\n\n  .level--5 fish.small {\n    width: 45px;\n  }\n\n  .level--5 ball.small {\n    width: 40px;\n    height: 40px;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/levels/level-5.css"],names:[],mappings:"AAAA,YAAY;;AAEZ;EACE,kBAAkB;AACpB;;AAEA;;EAEE,kBAAkB;AACpB;;AAEA;;EAEE,eAAe;AACjB;;AAEA;;EAEE,kBAAkB;EAClB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,aAAa;AACf;;AAEA;;EAEE,2BAA2B;EAC3B,wBAAwB;EACxB,4BAA4B;;EAE5B,kBAAkB;EAClB,WAAW;EACX,YAAY;AACd;;AAEA;EACE,yDAAsD;AACxD;;AAEA;EACE;IACE,SAAS;EACX;AACF;;AAEA;EACE;IACE,SAAS;EACX;;EAEA;IACE,WAAW;IACX,YAAY;EACd;;EAEA;IACE,WAAW;IACX,YAAY;EACd;;EAEA;IACE,WAAW;EACb;AACF;;AAEA;EACE;IACE,WAAW;IACX,YAAY;EACd;;EAEA;IACE,WAAW;IACX,YAAY;EACd;;EAEA;IACE,WAAW;EACb;;EAEA;IACE,WAAW;IACX,YAAY;EACd;AACF",sourcesContent:['/* LEVEL 5 */\n\n.level--5 .tag-line {\n  padding-left: 20px;\n}\n\n.level--5 .tag-line:nth-child(4),\n.level--5 .tag-line:nth-child(7) {\n  padding-left: 40px;\n}\n\n.level--5 .tag-line:first-child,\n.level--5 .tag-line:last-child {\n  padding-left: 0;\n}\n\n.level--5 ball,\n.level--5 box {\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.level--5 ball {\n  width: 110px;\n  height: 110px;\n}\n\n.level--5 ball fish,\n.level--5 box fish {\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n\n  position: absolute;\n  width: 60px;\n  height: 40px;\n}\n\n.level--5 fish {\n  background-image: url("../../assets/fish--yellow.svg");\n}\n\n@media all and (max-width: 550px) {\n  .level--5 .playground {\n    gap: 15px;\n  }\n}\n\n@media all and (max-width: 480px) {\n  .level--5 .playground {\n    gap: 12px;\n  }\n\n  .level--5 ball {\n    width: 90px;\n    height: 90px;\n  }\n\n  .level--5 box {\n    width: 85px;\n    height: 85px;\n  }\n\n  .level--5 fish.small {\n    width: 50px;\n  }\n}\n\n@media all and (max-width: 480px) {\n  .level--5 ball {\n    width: 80px;\n    height: 80px;\n  }\n\n  .level--5 box {\n    width: 75px;\n    height: 75px;\n  }\n\n  .level--5 fish.small {\n    width: 45px;\n  }\n\n  .level--5 ball.small {\n    width: 40px;\n    height: 40px;\n  }\n}\n'],sourceRoot:""}]);const p=d},9219:(n,e,t)=>{t.d(e,{Z:()=>o});var l=t(4015),A=t.n(l),a=t(3645),i=t.n(a)()(A());i.push([n.id,"/* LEVEL 6 */\n\n.level--6 .tag-line {\n  padding-left: 20px;\n}\n\n.level--6 .tag-line:nth-child(5) {\n  padding-left: 40px;\n}\n\n.level--6 .tag-line:first-child,\n.level--6 .tag-line:last-child {\n  padding-left: 0;\n}\n\n.level--6 ball:first-child {\n  margin-right: -5px;\n  background-color: var(--pink);\n}\n\n.level--6 box {\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.level--6 box triangle {\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 0 30px 50px 30px;\n  border-color: transparent transparent var(--yellow) transparent;\n}\n\n/**/\n\n@media all and (max-width: 480px) {\n  .level--6 .playground {\n    gap: 12px;\n  }\n}\n\n@media all and (max-width: 420px) {\n  .level--6 ball:first-child {\n    width: 80px;\n    height: 80px;\n  }\n\n  .level--6 duck {\n    width: 90px;\n  }\n\n  .level--6 box {\n    width: 90px;\n    height: 90px;\n  }\n\n  .level--6 ball.small {\n    width: 40px;\n    height: 40px;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/levels/level-6.css"],names:[],mappings:"AAAA,YAAY;;AAEZ;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;;EAEE,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,6BAA6B;AAC/B;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,QAAQ;EACR,SAAS;EACT,mBAAmB;EACnB,8BAA8B;EAC9B,+DAA+D;AACjE;;AAEA,GAAG;;AAEH;EACE;IACE,SAAS;EACX;AACF;;AAEA;EACE;IACE,WAAW;IACX,YAAY;EACd;;EAEA;IACE,WAAW;EACb;;EAEA;IACE,WAAW;IACX,YAAY;EACd;;EAEA;IACE,WAAW;IACX,YAAY;EACd;AACF",sourcesContent:["/* LEVEL 6 */\n\n.level--6 .tag-line {\n  padding-left: 20px;\n}\n\n.level--6 .tag-line:nth-child(5) {\n  padding-left: 40px;\n}\n\n.level--6 .tag-line:first-child,\n.level--6 .tag-line:last-child {\n  padding-left: 0;\n}\n\n.level--6 ball:first-child {\n  margin-right: -5px;\n  background-color: var(--pink);\n}\n\n.level--6 box {\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.level--6 box triangle {\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 0 30px 50px 30px;\n  border-color: transparent transparent var(--yellow) transparent;\n}\n\n/**/\n\n@media all and (max-width: 480px) {\n  .level--6 .playground {\n    gap: 12px;\n  }\n}\n\n@media all and (max-width: 420px) {\n  .level--6 ball:first-child {\n    width: 80px;\n    height: 80px;\n  }\n\n  .level--6 duck {\n    width: 90px;\n  }\n\n  .level--6 box {\n    width: 90px;\n    height: 90px;\n  }\n\n  .level--6 ball.small {\n    width: 40px;\n    height: 40px;\n  }\n}\n"],sourceRoot:""}]);const o=i},6048:(n,e,t)=>{t.d(e,{Z:()=>p});var l=t(4015),A=t.n(l),a=t(3645),i=t.n(a),o=t(1667),r=t.n(o),s=t(4212),d=i()(A()),c=r()(s);d.push([n.id,"/* LEVEL 7 */\n\n.level--7 .tag-line {\n  padding-left: 20px;\n}\n\n.level--7 .tag-line:nth-child(4),\n.level--7 .tag-line:nth-child(7) {\n  padding-left: 40px;\n}\n\n.level--7 .tag-line:first-child,\n.level--7 .tag-line:last-child {\n  padding-left: 0;\n}\n\n.level--7 box {\n  background-color: var(--yellow);\n}\n\n.level--7 ball {\n  width: 110px;\n  height: 110px;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: var(--purple);\n}\n\n.level--7 box bear,\n.level--7 ball bear {\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n\n  position: absolute;\n  width: 50px;\n  height: 60px;\n}\n\n.level--7 ball bear {\n  background-image: url("+c+");\n}\n\n.level--7 box::after,\n.level--7 ball::after {\n  content: attr(kid);\n  position: absolute;\n  padding: 3px 10px;\n  background-color: whitesmoke;\n  color: var(--black);\n  font-family: Arial, Helvetica, sans-serif;\n  letter-spacing: 0.05ch;\n\n  bottom: -10px;\n  right: 10px;\n}\n\n/**/\n\n@media all and (max-width: 420px) {\n  .level--7 .playground {\n    gap: 15px;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/levels/level-7.css"],names:[],mappings:"AAAA,YAAY;;AAEZ;EACE,kBAAkB;AACpB;;AAEA;;EAEE,kBAAkB;AACpB;;AAEA;;EAEE,eAAe;AACjB;;AAEA;EACE,+BAA+B;AACjC;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,kBAAkB;EAClB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;;EAEnB,+BAA+B;AACjC;;AAEA;;EAEE,2BAA2B;EAC3B,wBAAwB;EACxB,4BAA4B;;EAE5B,kBAAkB;EAClB,WAAW;EACX,YAAY;AACd;;AAEA;EACE,yDAAoD;AACtD;;AAEA;;EAEE,kBAAkB;EAClB,kBAAkB;EAClB,iBAAiB;EACjB,4BAA4B;EAC5B,mBAAmB;EACnB,yCAAyC;EACzC,sBAAsB;;EAEtB,aAAa;EACb,WAAW;AACb;;AAEA,GAAG;;AAEH;EACE;IACE,SAAS;EACX;AACF",sourcesContent:['/* LEVEL 7 */\n\n.level--7 .tag-line {\n  padding-left: 20px;\n}\n\n.level--7 .tag-line:nth-child(4),\n.level--7 .tag-line:nth-child(7) {\n  padding-left: 40px;\n}\n\n.level--7 .tag-line:first-child,\n.level--7 .tag-line:last-child {\n  padding-left: 0;\n}\n\n.level--7 box {\n  background-color: var(--yellow);\n}\n\n.level--7 ball {\n  width: 110px;\n  height: 110px;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: var(--purple);\n}\n\n.level--7 box bear,\n.level--7 ball bear {\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n\n  position: absolute;\n  width: 50px;\n  height: 60px;\n}\n\n.level--7 ball bear {\n  background-image: url("../../assets/bear--pink.svg");\n}\n\n.level--7 box::after,\n.level--7 ball::after {\n  content: attr(kid);\n  position: absolute;\n  padding: 3px 10px;\n  background-color: whitesmoke;\n  color: var(--black);\n  font-family: Arial, Helvetica, sans-serif;\n  letter-spacing: 0.05ch;\n\n  bottom: -10px;\n  right: 10px;\n}\n\n/**/\n\n@media all and (max-width: 420px) {\n  .level--7 .playground {\n    gap: 15px;\n  }\n}\n'],sourceRoot:""}]);const p=d},7990:(n,e,t)=>{t.d(e,{Z:()=>o});var l=t(4015),A=t.n(l),a=t(3645),i=t.n(a)()(A());i.push([n.id,"/* LEVEL 8 */\n\n.level--8 .playground {\n  gap: 10px;\n}\n\n.level--8 .tag-line {\n  padding-left: 20px;\n}\n\n.level--8 .tag-line:first-child,\n.level--8 .tag-line:last-child {\n  padding-left: 0;\n}\n\n@media all and (max-width: 550px) {\n  .level--8 duck {\n    width: 90px;\n    height: 90px;\n  }\n}\n\n@media all and (max-width: 460px) {\n  .level--8 duck {\n    width: 70px;\n    height: 70px;\n  }\n}","",{version:3,sources:["webpack://./src/styles/levels/level-8.css"],names:[],mappings:"AAAA,YAAY;;AAEZ;EACE,SAAS;AACX;;AAEA;EACE,kBAAkB;AACpB;;AAEA;;EAEE,eAAe;AACjB;;AAEA;EACE;IACE,WAAW;IACX,YAAY;EACd;AACF;;AAEA;EACE;IACE,WAAW;IACX,YAAY;EACd;AACF",sourcesContent:["/* LEVEL 8 */\n\n.level--8 .playground {\n  gap: 10px;\n}\n\n.level--8 .tag-line {\n  padding-left: 20px;\n}\n\n.level--8 .tag-line:first-child,\n.level--8 .tag-line:last-child {\n  padding-left: 0;\n}\n\n@media all and (max-width: 550px) {\n  .level--8 duck {\n    width: 90px;\n    height: 90px;\n  }\n}\n\n@media all and (max-width: 460px) {\n  .level--8 duck {\n    width: 70px;\n    height: 70px;\n  }\n}"],sourceRoot:""}]);const o=i},9823:(n,e,t)=>{t.d(e,{Z:()=>o});var l=t(4015),A=t.n(l),a=t(3645),i=t.n(a)()(A());i.push([n.id,"/* LEVEL 9 */\n\n.level--9 .tag-line {\n  padding-left: 20px;\n}\n\n.level--9 .tag-line:nth-child(6) {\n  padding-left: 40px;\n}\n\n.level--9 .tag-line:first-child,\n.level--9 .tag-line:last-child {\n  padding-left: 0;\n}\n\n.level--9 box {\n  background-color: var(--border);\n}\n\n.level--9 box:nth-child(2) {\n  background-color: var(--yellow);\n}\n\n.level--9 box triangle {\n  border-width: 0 30px 45px 30px;\n  border-color: transparent transparent var(--yellow) transparent;\n}\n\n@media all and (max-width: 550px) {\n  .level--9 .playground {\n    gap: 15px;\n  }\n\n  .level--9 box {\n    width: 90px;\n    height: 90px;\n  }\n}\n\n@media all and (max-width: 460px) {\n  .level--9 box {\n    width: 75px;\n    height: 75px;\n  }\n\n  .level--9 bear {\n    width: 55px;\n  }\n\n  .level--9 box triangle {\n    border-width: 0 25px 40px 25px;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/levels/level-9.css"],names:[],mappings:"AAAA,YAAY;;AAEZ;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;;EAEE,eAAe;AACjB;;AAEA;EACE,+BAA+B;AACjC;;AAEA;EACE,+BAA+B;AACjC;;AAEA;EACE,8BAA8B;EAC9B,+DAA+D;AACjE;;AAEA;EACE;IACE,SAAS;EACX;;EAEA;IACE,WAAW;IACX,YAAY;EACd;AACF;;AAEA;EACE;IACE,WAAW;IACX,YAAY;EACd;;EAEA;IACE,WAAW;EACb;;EAEA;IACE,8BAA8B;EAChC;AACF",sourcesContent:["/* LEVEL 9 */\n\n.level--9 .tag-line {\n  padding-left: 20px;\n}\n\n.level--9 .tag-line:nth-child(6) {\n  padding-left: 40px;\n}\n\n.level--9 .tag-line:first-child,\n.level--9 .tag-line:last-child {\n  padding-left: 0;\n}\n\n.level--9 box {\n  background-color: var(--border);\n}\n\n.level--9 box:nth-child(2) {\n  background-color: var(--yellow);\n}\n\n.level--9 box triangle {\n  border-width: 0 30px 45px 30px;\n  border-color: transparent transparent var(--yellow) transparent;\n}\n\n@media all and (max-width: 550px) {\n  .level--9 .playground {\n    gap: 15px;\n  }\n\n  .level--9 box {\n    width: 90px;\n    height: 90px;\n  }\n}\n\n@media all and (max-width: 460px) {\n  .level--9 box {\n    width: 75px;\n    height: 75px;\n  }\n\n  .level--9 bear {\n    width: 55px;\n  }\n\n  .level--9 box triangle {\n    border-width: 0 25px 40px 25px;\n  }\n}\n"],sourceRoot:""}]);const o=i},3361:(n,e,t)=>{t.d(e,{Z:()=>w});var l=t(4015),A=t.n(l),a=t(3645),i=t.n(a),o=t(549),r=t(9903),s=t(8544),d=t(9355),c=t(4973),p=t(9219),E=t(6048),h=t(7990),u=t(9823),g=t(6748),v=t(1667),C=t.n(v),x=t(3008),b=t(5824),f=t(18),m=i()(A());m.i(o.Z),m.i(r.Z),m.i(s.Z),m.i(d.Z),m.i(c.Z),m.i(p.Z),m.i(E.Z),m.i(h.Z),m.i(u.Z),m.i(g.Z);var B=C()(x),_=C()(b),y=C()(f);m.push([n.id,"box {\n  width: 100px;\n  height: 100px;\n  background-color: var(--purple);\n\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\ntriangle {\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 0 60px 90px 60px;\n  border-color: transparent transparent var(--green) transparent;\n}\n\ntriangle.small {\n  border-width: 0 30px 45px 30px;\n}\n\nball {\n  width: 90px;\n  height: 90px;\n  border-radius: 50%;\n  background-color: var(--purple);\n}\n\nball.small {\n  width: 50px;\n  height: 50px;\n  background-color: var(--green);\n}\n\nfish {\n  width: 100px;\n  height: 100px;\n  background-image: url("+B+");\n}\n\nduck {\n  width: 100px;\n  height: 100px;\n  background-image: url("+_+");\n}\n\nbear {\n  width: 80px;\n  height: 100px;\n  background-image: url("+y+");\n}\n","",{version:3,sources:["webpack://./src/styles/levels/levels-styles.css"],names:[],mappings:"AAAA;EACE,YAAY;EACZ,aAAa;EACb,+BAA+B;;EAE/B,kBAAkB;EAClB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,QAAQ;EACR,SAAS;EACT,mBAAmB;EACnB,8BAA8B;EAC9B,8DAA8D;AAChE;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,+BAA+B;AACjC;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,8BAA8B;AAChC;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,yDAA8C;AAChD;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,yDAA8C;AAChD;;AAEA;EACE,WAAW;EACX,aAAa;EACb,yDAA8C;AAChD",sourcesContent:['box {\n  width: 100px;\n  height: 100px;\n  background-color: var(--purple);\n\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\ntriangle {\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 0 60px 90px 60px;\n  border-color: transparent transparent var(--green) transparent;\n}\n\ntriangle.small {\n  border-width: 0 30px 45px 30px;\n}\n\nball {\n  width: 90px;\n  height: 90px;\n  border-radius: 50%;\n  background-color: var(--purple);\n}\n\nball.small {\n  width: 50px;\n  height: 50px;\n  background-color: var(--green);\n}\n\nfish {\n  width: 100px;\n  height: 100px;\n  background-image: url("../../assets/fish.svg");\n}\n\nduck {\n  width: 100px;\n  height: 100px;\n  background-image: url("../../assets/duck.svg");\n}\n\nbear {\n  width: 80px;\n  height: 100px;\n  background-image: url("../../assets/bear.svg");\n}\n\n@import "./level-1.css";\n@import "./level-2.css";\n@import "./level-3.css";\n@import "./level-4.css";\n@import "./level-5.css";\n@import "./level-6.css";\n@import "./level-7.css";\n@import "./level-8.css";\n@import "./level-9.css";\n@import "./level-10.css";\n'],sourceRoot:""}]);const w=m},8756:(n,e,t)=>{t.d(e,{Z:()=>o});var l=t(4015),A=t.n(l),a=t(3645),i=t.n(a)()(A());i.push([n.id,".main {\n  position: relative;\n  width: 100%;\n  display: flex;\n  flex-grow: 1;\n  gap: 20px;\n}\n\n.section__game {\n  max-width: 1180px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.section__levels {\n  position: relative;\n  min-width: 240px;\n  flex-grow: 1;\n  border: 1px solid var(--border);\n  background-color: var(--back);\n}\n\n.game {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 20px;\n}\n\n/**/\n\n@media all and (max-width: 980px) {\n  .section__game {\n    gap: 40px;\n  }\n\n  .game {\n    margin-top: 40px;\n  }\n\n  .section__levels {\n    position: fixed;\n    max-width: 260px;\n    width: 100%;\n    height: calc(100vh - 40px);\n    top: 20px;\n    right: 20px;\n    z-index: 2000;\n\n    transform: translateX(150%);\n    transition: transform 0.3s ease-in-out;\n  }\n\n  .panel--visible {\n    transform: translateX(0);\n  }\n}\n\n@media all and (max-width: 750px) {\n  .game {\n    justify-content: flex-start;\n  }\n}\n\n@media all and (max-width: 600px) {\n  .game {\n    margin-top: 60px;\n  }\n}\n\n@media all and (max-width: 450px) {\n  .game {\n    margin-top: 80px;\n  }\n\n  .section__levels {\n    right: 10px;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/main.css"],names:[],mappings:"AAAA;EACE,kBAAkB;EAClB,WAAW;EACX,aAAa;EACb,YAAY;EACZ,SAAS;AACX;;AAEA;EACE,iBAAiB;EACjB,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;;AAEA;EACE,kBAAkB;EAClB,gBAAgB;EAChB,YAAY;EACZ,+BAA+B;EAC/B,6BAA6B;AAC/B;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,aAAa;EACb,sBAAsB;EACtB,8BAA8B;EAC9B,SAAS;AACX;;AAEA,GAAG;;AAEH;EACE;IACE,SAAS;EACX;;EAEA;IACE,gBAAgB;EAClB;;EAEA;IACE,eAAe;IACf,gBAAgB;IAChB,WAAW;IACX,0BAA0B;IAC1B,SAAS;IACT,WAAW;IACX,aAAa;;IAEb,2BAA2B;IAC3B,sCAAsC;EACxC;;EAEA;IACE,wBAAwB;EAC1B;AACF;;AAEA;EACE;IACE,2BAA2B;EAC7B;AACF;;AAEA;EACE;IACE,gBAAgB;EAClB;AACF;;AAEA;EACE;IACE,gBAAgB;EAClB;;EAEA;IACE,WAAW;EACb;AACF",sourcesContent:[".main {\n  position: relative;\n  width: 100%;\n  display: flex;\n  flex-grow: 1;\n  gap: 20px;\n}\n\n.section__game {\n  max-width: 1180px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.section__levels {\n  position: relative;\n  min-width: 240px;\n  flex-grow: 1;\n  border: 1px solid var(--border);\n  background-color: var(--back);\n}\n\n.game {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 20px;\n}\n\n/**/\n\n@media all and (max-width: 980px) {\n  .section__game {\n    gap: 40px;\n  }\n\n  .game {\n    margin-top: 40px;\n  }\n\n  .section__levels {\n    position: fixed;\n    max-width: 260px;\n    width: 100%;\n    height: calc(100vh - 40px);\n    top: 20px;\n    right: 20px;\n    z-index: 2000;\n\n    transform: translateX(150%);\n    transition: transform 0.3s ease-in-out;\n  }\n\n  .panel--visible {\n    transform: translateX(0);\n  }\n}\n\n@media all and (max-width: 750px) {\n  .game {\n    justify-content: flex-start;\n  }\n}\n\n@media all and (max-width: 600px) {\n  .game {\n    margin-top: 60px;\n  }\n}\n\n@media all and (max-width: 450px) {\n  .game {\n    margin-top: 80px;\n  }\n\n  .section__levels {\n    right: 10px;\n  }\n}\n"],sourceRoot:""}]);const o=i},691:(n,e,t)=>{t.d(e,{Z:()=>o});var l=t(4015),A=t.n(l),a=t(3645),i=t.n(a)()(A());i.push([n.id,".levels__header {\n  width: 100%;\n  height: 40px;\n  padding: 0 15px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  border-bottom: 1px solid var(--border);\n}\n\n.levels__header .header__container {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.levels__header .header__data {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n}\n\n.levels__header .header__data h3,\n.levels__header__data span {\n  font-weight: 400;\n  opacity: 0.9;\n}\n\n.levels__header .header__data h3 {\n  margin-right: 10px;\n}\n\n.levels__header .header__buttons {\n  display: flex;\n  margin-left: 20px;\n}\n\n.button--prev span,\n.button--next span {\n  display: block;\n  padding-bottom: 2px;\n  color: var(--black);\n  opacity: 0.9;\n}\n\n/* BODY */\n\n.levels__body {\n  padding: 15px 0;\n}\n\n.levels__container {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.level__item {\n  width: 100%;\n  padding: 4px 15px;\n  display: flex;\n  align-items: center;\n\n  transition: all 0.2s ease-in-out;\n  cursor: pointer;\n}\n\n.level__number {\n  width: 25px;\n}\n\n.level__item span:not(:last-child) {\n  opacity: 0.9;\n}\n\n/* STATUS */\n\n.level__status {\n  width: 15px;\n  height: 15px;\n  border-radius: 50%;\n  margin-left: auto;\n\n  background-color: var(--border);\n}\n\n.level--done .level__status {\n  background-color: var(--green);\n}\n\n.level--hint .level__status {\n  background-color: var(--yellow);\n}\n\n/**/\n\n.level--current {\n  background-color: var(--item--back);\n}\n\n.level__item:hover {\n  background-color: var(--item--back);\n}\n\n.level__item:hover span {\n  opacity: 1;\n}\n\n/* CLOSE BUTTON */\n\n.section__levels .button__container {\n  position: absolute;\n  top: 0;\n  left: 0;\n  transform: translateX(-100%);\n  display: none;\n}\n\n@media all and (max-width: 980px) {\n  .panel--visible .button__container {\n    display: block;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/panel.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,YAAY;EACZ,eAAe;;EAEf,aAAa;EACb,uBAAuB;EACvB,mBAAmB;;EAEnB,sCAAsC;AACxC;;AAEA;EACE,WAAW;EACX,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,8BAA8B;AAChC;;AAEA;;EAEE,gBAAgB;EAChB,YAAY;AACd;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,iBAAiB;AACnB;;AAEA;;EAEE,cAAc;EACd,mBAAmB;EACnB,mBAAmB;EACnB,YAAY;AACd;;AAEA,SAAS;;AAET;EACE,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,WAAW;EACX,iBAAiB;EACjB,aAAa;EACb,mBAAmB;;EAEnB,gCAAgC;EAChC,eAAe;AACjB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,YAAY;AACd;;AAEA,WAAW;;AAEX;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,iBAAiB;;EAEjB,+BAA+B;AACjC;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,+BAA+B;AACjC;;AAEA,GAAG;;AAEH;EACE,mCAAmC;AACrC;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,UAAU;AACZ;;AAEA,iBAAiB;;AAEjB;EACE,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,4BAA4B;EAC5B,aAAa;AACf;;AAEA;EACE;IACE,cAAc;EAChB;AACF",sourcesContent:[".levels__header {\n  width: 100%;\n  height: 40px;\n  padding: 0 15px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  border-bottom: 1px solid var(--border);\n}\n\n.levels__header .header__container {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.levels__header .header__data {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n}\n\n.levels__header .header__data h3,\n.levels__header__data span {\n  font-weight: 400;\n  opacity: 0.9;\n}\n\n.levels__header .header__data h3 {\n  margin-right: 10px;\n}\n\n.levels__header .header__buttons {\n  display: flex;\n  margin-left: 20px;\n}\n\n.button--prev span,\n.button--next span {\n  display: block;\n  padding-bottom: 2px;\n  color: var(--black);\n  opacity: 0.9;\n}\n\n/* BODY */\n\n.levels__body {\n  padding: 15px 0;\n}\n\n.levels__container {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.level__item {\n  width: 100%;\n  padding: 4px 15px;\n  display: flex;\n  align-items: center;\n\n  transition: all 0.2s ease-in-out;\n  cursor: pointer;\n}\n\n.level__number {\n  width: 25px;\n}\n\n.level__item span:not(:last-child) {\n  opacity: 0.9;\n}\n\n/* STATUS */\n\n.level__status {\n  width: 15px;\n  height: 15px;\n  border-radius: 50%;\n  margin-left: auto;\n\n  background-color: var(--border);\n}\n\n.level--done .level__status {\n  background-color: var(--green);\n}\n\n.level--hint .level__status {\n  background-color: var(--yellow);\n}\n\n/**/\n\n.level--current {\n  background-color: var(--item--back);\n}\n\n.level__item:hover {\n  background-color: var(--item--back);\n}\n\n.level__item:hover span {\n  opacity: 1;\n}\n\n/* CLOSE BUTTON */\n\n.section__levels .button__container {\n  position: absolute;\n  top: 0;\n  left: 0;\n  transform: translateX(-100%);\n  display: none;\n}\n\n@media all and (max-width: 980px) {\n  .panel--visible .button__container {\n    display: block;\n  }\n}\n"],sourceRoot:""}]);const o=i},1574:(n,e,t)=>{t.d(e,{Z:()=>p});var l=t(4015),A=t.n(l),a=t(3645),i=t.n(a),o=t(1667),r=t.n(o),s=t(18),d=i()(A()),c=r()(s);d.push([n.id,".popup__container {\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  transform: translateY(-100%);\n  visibility: hidden;\n\n  transition: all 0.8s cubic-bezier(.47,1.64,.41,.8);\n}\n\n.show-popup {\n  visibility: visible;\n  transform: translateY(0);\n\n  transition: all 1.2s cubic-bezier(.47,1.64,.41,.8);\n}\n\n.overlay {\n  background-color: var(--overlay);\n}\n\n.popup {\n  max-width: 460px;\n  width: 100%;\n  padding: 40px 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  background-color: var(--back);\n}\n\n.popup__content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n}\n\n.popup__buttons {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 5px;\n}\n\n.popup__image bear {\n  display: block;\n  width: 50px;\n  height: 75px;\n  background-image: url("+c+");\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n}\n\n.popup__text {\n  text-align: center;\n}\n\n.popup__text span {\n  display: block;\n  margin-top: 5px;\n}","",{version:3,sources:["webpack://./src/styles/popup.css"],names:[],mappings:"AAAA;EACE,eAAe;EACf,YAAY;EACZ,aAAa;EACb,MAAM;EACN,OAAO;EACP,aAAa;EACb,uBAAuB;EACvB,mBAAmB;;EAEnB,4BAA4B;EAC5B,kBAAkB;;EAElB,kDAAkD;AACpD;;AAEA;EACE,mBAAmB;EACnB,wBAAwB;;EAExB,kDAAkD;AACpD;;AAEA;EACE,gCAAgC;AAClC;;AAEA;EACE,gBAAgB;EAChB,WAAW;EACX,kBAAkB;EAClB,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;EACT,6BAA6B;AAC/B;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,QAAQ;AACV;;AAEA;EACE,cAAc;EACd,WAAW;EACX,YAAY;EACZ,yDAA2C;EAC3C,wBAAwB;EACxB,4BAA4B;EAC5B,2BAA2B;AAC7B;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,cAAc;EACd,eAAe;AACjB",sourcesContent:['.popup__container {\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  transform: translateY(-100%);\n  visibility: hidden;\n\n  transition: all 0.8s cubic-bezier(.47,1.64,.41,.8);\n}\n\n.show-popup {\n  visibility: visible;\n  transform: translateY(0);\n\n  transition: all 1.2s cubic-bezier(.47,1.64,.41,.8);\n}\n\n.overlay {\n  background-color: var(--overlay);\n}\n\n.popup {\n  max-width: 460px;\n  width: 100%;\n  padding: 40px 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  background-color: var(--back);\n}\n\n.popup__content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n}\n\n.popup__buttons {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 5px;\n}\n\n.popup__image bear {\n  display: block;\n  width: 50px;\n  height: 75px;\n  background-image: url("../assets/bear.svg");\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n}\n\n.popup__text {\n  text-align: center;\n}\n\n.popup__text span {\n  display: block;\n  margin-top: 5px;\n}'],sourceRoot:""}]);const p=d},8772:(n,e,t)=>{t.d(e,{Z:()=>o});var l=t(4015),A=t.n(l),a=t(3645),i=t.n(a)()(A());i.push([n.id,'* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  font-size: 14px;\n  color: var(--white);\n}\n\nbody {\n  width: 100%;\n  min-height: 100vh;\n  height: 100%;\n  background: var(--back);\n  font-family: "JetBrains Mono", monospace;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  gap: 20px;\n  padding: 20px;\n\n  overflow: hidden;\n}\n\n.content-width {\n  width: 100%;\n}\n\n/**/\n\n@media all and (max-width: 980px) {\n  body {\n    overflow: scroll;\n    overflow-x: hidden;\n  }\n}\n\n@media all and (max-width: 750px) {\n  body {\n    gap: 60px;\n  }\n}\n\n@media all and (max-width: 450px) {\n  body {\n    padding: 10px;\n  }\n}\n\n\n',"",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAAA;EACE,UAAU;EACV,SAAS;EACT,sBAAsB;EACtB,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,iBAAiB;EACjB,YAAY;EACZ,uBAAuB;EACvB,wCAAwC;;EAExC,aAAa;EACb,sBAAsB;EACtB,8BAA8B;EAC9B,mBAAmB;EACnB,SAAS;EACT,aAAa;;EAEb,gBAAgB;AAClB;;AAEA;EACE,WAAW;AACb;;AAEA,GAAG;;AAEH;EACE;IACE,gBAAgB;IAChB,kBAAkB;EACpB;AACF;;AAEA;EACE;IACE,SAAS;EACX;AACF;;AAEA;EACE;IACE,aAAa;EACf;AACF",sourcesContent:['* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  font-size: 14px;\n  color: var(--white);\n}\n\nbody {\n  width: 100%;\n  min-height: 100vh;\n  height: 100%;\n  background: var(--back);\n  font-family: "JetBrains Mono", monospace;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  gap: 20px;\n  padding: 20px;\n\n  overflow: hidden;\n}\n\n.content-width {\n  width: 100%;\n}\n\n/**/\n\n@media all and (max-width: 980px) {\n  body {\n    overflow: scroll;\n    overflow-x: hidden;\n  }\n}\n\n@media all and (max-width: 750px) {\n  body {\n    gap: 60px;\n  }\n}\n\n@media all and (max-width: 450px) {\n  body {\n    padding: 10px;\n  }\n}\n\n\n'],sourceRoot:""}]);const o=i},7179:(n,e,t)=>{t.d(e,{Z:()=>o});var l=t(4015),A=t.n(l),a=t(3645),i=t.n(a)()(A());i.push([n.id,":root {\n  --black: rgb(28, 28, 28);\n  --white: whitesmoke;\n  --red: #ff4500;\n  --orange: rgb(255, 106, 0);\n  --green: #66ce51;\n  --yellow: #ffd208;\n  --purple: #7c69fa;\n  --blue: rgb(88, 174, 255);\n  --pink: #FF74E9;\n  --back: #313131;\n  --border: #5d5d5d;\n  --item--back: #3d3d3d;\n  --button--grey: #f5f5f5;\n  --button--hover-grey: #d8d8d8;\n  --back--grey: #DDDDDD;\n  --text--grey: #868686;\n  --overlay: rgba(28, 28, 28, 0.8);\n\n  --button-height: 24px;\n}","",{version:3,sources:["webpack://./src/styles/variables.css"],names:[],mappings:"AAAA;EACE,wBAAwB;EACxB,mBAAmB;EACnB,cAAc;EACd,0BAA0B;EAC1B,gBAAgB;EAChB,iBAAiB;EACjB,iBAAiB;EACjB,yBAAyB;EACzB,eAAe;EACf,eAAe;EACf,iBAAiB;EACjB,qBAAqB;EACrB,uBAAuB;EACvB,6BAA6B;EAC7B,qBAAqB;EACrB,qBAAqB;EACrB,gCAAgC;;EAEhC,qBAAqB;AACvB",sourcesContent:[":root {\n  --black: rgb(28, 28, 28);\n  --white: whitesmoke;\n  --red: #ff4500;\n  --orange: rgb(255, 106, 0);\n  --green: #66ce51;\n  --yellow: #ffd208;\n  --purple: #7c69fa;\n  --blue: rgb(88, 174, 255);\n  --pink: #FF74E9;\n  --back: #313131;\n  --border: #5d5d5d;\n  --item--back: #3d3d3d;\n  --button--grey: #f5f5f5;\n  --button--hover-grey: #d8d8d8;\n  --back--grey: #DDDDDD;\n  --text--grey: #868686;\n  --overlay: rgba(28, 28, 28, 0.8);\n\n  --button-height: 24px;\n}"],sourceRoot:""}]);const o=i},3645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t=n(e);return e[2]?"@media ".concat(e[2]," {").concat(t,"}"):t})).join("")},e.i=function(n,t,l){"string"==typeof n&&(n=[[null,n,""]]);var A={};if(l)for(var a=0;a<this.length;a++){var i=this[a][0];null!=i&&(A[i]=!0)}for(var o=0;o<n.length;o++){var r=[].concat(n[o]);l&&A[r[0]]||(t&&(r[2]?r[2]="".concat(t," and ").concat(r[2]):r[2]=t),e.push(r))}},e}},4015:n=>{function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,l=new Array(e);t<e;t++)l[t]=n[t];return l}n.exports=function(n){var t,l,A=(l=4,function(n){if(Array.isArray(n))return n}(t=n)||function(n,e){var t=n&&("undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"]);if(null!=t){var l,A,a=[],i=!0,o=!1;try{for(t=t.call(n);!(i=(l=t.next()).done)&&(a.push(l.value),!e||a.length!==e);i=!0);}catch(n){o=!0,A=n}finally{try{i||null==t.return||t.return()}finally{if(o)throw A}}return a}}(t,l)||function(n,t){if(n){if("string"==typeof n)return e(n,t);var l=Object.prototype.toString.call(n).slice(8,-1);return"Object"===l&&n.constructor&&(l=n.constructor.name),"Map"===l||"Set"===l?Array.from(n):"Arguments"===l||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(l)?e(n,t):void 0}}(t,l)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=A[1],i=A[3];if(!i)return a;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),s="/*# ".concat(r," */"),d=i.sources.map((function(n){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(n," */")}));return[a].concat(d).concat([s]).join("\n")}return[a].join("\n")}},1667:n=>{n.exports=function(n,e){return e||(e={}),"string"!=typeof(n=n&&n.__esModule?n.default:n)?n:(/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n)}},4643:(n,e,t)=>{t.r(e),t.d(e,{default:()=>i});var l=t(3379),A=t.n(l),a=t(3771);A()(a.Z,{insert:"head",singleton:!1});const i=a.Z.locals||{}},3379:(n,e,t)=>{var l,A=function(){var n={};return function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}n[e]=t}return n[e]}}(),a=[];function i(n){for(var e=-1,t=0;t<a.length;t++)if(a[t].identifier===n){e=t;break}return e}function o(n,e){for(var t={},l=[],A=0;A<n.length;A++){var o=n[A],r=e.base?o[0]+e.base:o[0],s=t[r]||0,d="".concat(r," ").concat(s);t[r]=s+1;var c=i(d),p={css:o[1],media:o[2],sourceMap:o[3]};-1!==c?(a[c].references++,a[c].updater(p)):a.push({identifier:d,updater:u(p,e),references:1}),l.push(d)}return l}function r(n){var e=document.createElement("style"),l=n.attributes||{};if(void 0===l.nonce){var a=t.nc;a&&(l.nonce=a)}if(Object.keys(l).forEach((function(n){e.setAttribute(n,l[n])})),"function"==typeof n.insert)n.insert(e);else{var i=A(n.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(e)}return e}var s,d=(s=[],function(n,e){return s[n]=e,s.filter(Boolean).join("\n")});function c(n,e,t,l){var A=t?"":l.media?"@media ".concat(l.media," {").concat(l.css,"}"):l.css;if(n.styleSheet)n.styleSheet.cssText=d(e,A);else{var a=document.createTextNode(A),i=n.childNodes;i[e]&&n.removeChild(i[e]),i.length?n.insertBefore(a,i[e]):n.appendChild(a)}}function p(n,e,t){var l=t.css,A=t.media,a=t.sourceMap;if(A?n.setAttribute("media",A):n.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(l+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleSheet)n.styleSheet.cssText=l;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(l))}}var E=null,h=0;function u(n,e){var t,l,A;if(e.singleton){var a=h++;t=E||(E=r(e)),l=c.bind(null,t,a,!1),A=c.bind(null,t,a,!0)}else t=r(e),l=p.bind(null,t,e),A=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)};return l(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;l(n=e)}else A()}}n.exports=function(n,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===l&&(l=Boolean(window&&document&&document.all&&!window.atob)),l));var t=o(n=n||[],e);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var l=0;l<t.length;l++){var A=i(t[l]);a[A].references--}for(var r=o(n,e),s=0;s<t.length;s++){var d=i(t[s]);0===a[d].references&&(a[d].updater(),a.splice(d,1))}t=r}}}},6077:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.renderApp=void 0;const l=t(408),A=t(8202),a=t(4460);e.renderApp=function(){const n=(0,A.createMain)(),e=(0,l.createFooter)(),t=(0,a.createWinPopup)();document.body.append(n,e,t)}},43:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createCSSEditor=void 0;const l=t(252);e.createCSSEditor=function(){return(0,l.createEditor)({classNames:["editor","editor--css"],title:"CSS Editor",fileName:"style.css",editorContent:'\n    <div class="input__container">\n      <input type="text"></input>\n      <button class="button button--check">Enter</button>\n    </div>\n  '})}},252:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createEditor=void 0;const l=t(6116);e.createEditor=function(n){const e=(0,l.createElement)("div",n.classNames),t=`\n    <div class="editor__header">\n      <span class="editor__title">${n.title}</span>\n      <span class="editor__file">${n.fileName}</span>\n    </div>\n  `,A=`\n    <div class="editor__body">\n      <div class="body__panel--lines">${new Array(25).fill(0).map(((n,e)=>`<span>${e+1}</span>`)).join("")}</div>\n      <div class="body__panel--content">\n        ${n.editorContent}\n      </div>\n    </div>\n  `;return e.insertAdjacentHTML("beforeend",t),e.insertAdjacentHTML("beforeend",A),e}},7132:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createEditorsBlock=void 0;const l=t(6116),A=t(43),a=t(609);e.createEditorsBlock=function(){const n=(0,l.createElement)("div",["game__block","block__editors"]),e=(0,A.createCSSEditor)(),t=(0,a.createHTMLEditor)();return n.append(e,t),n}},609:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createHTMLEditor=void 0;const l=t(252);e.createHTMLEditor=function(){return(0,l.createEditor)({classNames:["editor","editor--html"],title:"HTML View",fileName:"playground.html",editorContent:"<div class='content__container'></div>"})}},408:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createFooter=void 0;const l=t(6116);e.createFooter=function(){const n=(0,l.createElement)("footer",["footer","content-width"]);return n.insertAdjacentHTML("afterbegin",'\n    <div class="footer__container">\n      <div class="footer__copy">\n        <span>2023, \n          <a class="footer__link" href="https://rs.school/" target="_blank">RS School</a> — \n        </span> \n        <span>RS CSS Selectors</span>\n      </div>\n      <a class="footer__link" href="https://github.com/HereEast" target="_blank">Here East</a>\n    </div>\n  '),n}},1914:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createGameSection=void 0;const l=t(6116),A=t(4977),a=t(7132);e.createGameSection=function(){const n=(0,l.createElement)("section",["section__game"]),e=(0,A.createHeader)(),t=(0,l.createElement)("section",["game"]),i=(0,l.createElement)("h2",["task__text"]),o=(0,l.createElement)("div",["graphics__container"]),r=(0,a.createEditorsBlock)();return t.append(i,o,r),n.append(e,t),n}},7143:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createHeaderButtons=void 0;const l=t(6116);e.createHeaderButtons=function(){const n=(0,l.createElement)("div",["header__buttons"]),e=(0,l.createElement)("button",["button","button--reset"],"Reset"),t=(0,l.createElement)("button",["button","button--hint"],"Hint");return n.append(t,e),n}},2538:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createHeaderLevelInfo=void 0;const l=t(3),A=t(7881),a=t(6116);e.createHeaderLevelInfo=function(){const n=(0,a.createElement)("button",["button","button--levels"],"="),e=(0,l.getCurrentLevelID)(),t=(0,A.getSavedStatus)(e),i=(0,a.createElement)("div",["header__levels",`level--${t}`]),o=`\n    <div class="level__info">\n      <span class="level__status"></span>\n      <span class="header__data--level">${e}/10</span>\n    </div>\n  `;return i.insertAdjacentHTML("afterbegin",o),i.append(n),i}},4977:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createHeader=void 0;const l=t(6116),A=t(5018),a=t(7143),i=t(2538);e.createHeader=function(){const n=(0,l.createElement)("header",["header"]),e=(0,A.createLogo)(),t=(0,l.createElement)("div",["header__controls"]),o=(0,a.createHeaderButtons)(),r=(0,i.createHeaderLevelInfo)();return t.append(r,o),n.append(e,t),n}},5018:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createLogo=void 0;const l=t(6116);e.createLogo=function(){const n=(0,l.createElement)("div",["header__logo"]);return n.insertAdjacentHTML("afterbegin",'\n    <h1 class=\'logo__text\'>CSS Playground</h1>\n    <div class="logo__icon">\n      \n    <svg class="icon" xmlns="http://www.w3.org/2000/svg">\n      <path d="M7.05037 0L2.5332e-07 12H7.05037L14 11.8286L7.05037 0Z" fill="#6BCB5B"/>\n      <circle cx="36.5" cy="6.5" r="6.5" fill="#FFE208"/>\n      <rect x="16" width="12" height="12" fill="#725CFA"/>\n    </svg>\n  \n    </div>\n  '),n}},4978:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createLevelsBody=void 0;const l=t(6116),A=t(131),a=t(7881);e.createLevelsBody=function(){const n=(0,l.createElement)("div",["levels__body"]),e=(0,l.createElement)("div",["levels__container"]);return A.levelsData.forEach((n=>{const t=(0,a.getSavedStatus)(n.id),A=(0,l.createElement)("div",["level__item",`level--${t}`]);A.innerHTML=`\n      <span class="level__number">${n.id}</span>\n      <span class="level__title">${n.title}</span>\n      <span class="level__status"></span>\n    `,A.dataset.id=n.id,e.append(A)})),n.append(e),n}},3074:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createLevelsHeader=void 0;const l=t(6116),A=t(3);e.createLevelsHeader=function(){const n=(0,l.createElement)("div",["levels__header"]),e=`\n    <div class="header__container">\n      <div class="header__data"">\n        <h3>Level</h3>\n        <span class="header__data--level">${(0,A.getCurrentLevelID)()}/10</span>\n      </div>\n      <div class="header__buttons">\n        \n    <button class='button levels__button button--prev'>\n      <span>&lt;</span>\n    </button>\n    \n        \n    <button class='button levels__button button--next'>\n      <span>&gt;</span>\n    </button>\n    \n      </div>\n    </div>\n  `;return n.insertAdjacentHTML("afterbegin",e),n}},6224:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createLevelsSection=void 0;const l=t(6116),A=t(3074),a=t(4978);e.createLevelsSection=function(){const n=(0,l.createElement)("section",["section__levels"]),e=(0,A.createLevelsHeader)(),t=(0,a.createLevelsBody)();return n.append(e,t),n.insertAdjacentHTML("beforeend",'\n    <div class="button__container">\n      <button class="button button--hide">Close</button>\n    </div>\n  '),n}},8202:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createMain=void 0;const l=t(6116),A=t(1914),a=t(6224);e.createMain=function(){const n=(0,l.createElement)("main",["main","content-width"]),e=(0,A.createGameSection)(),t=(0,a.createLevelsSection)();return n.append(e,t),n}},8799:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createPopupButtons=void 0;const l=t(6116);e.createPopupButtons=function(n){const e=(0,l.createElement)("div",["popup__buttons"]);return n.forEach((n=>{const t=(0,l.createElement)("button",n.classNames,n.name);e.append(t)})),e}},4460:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createWinPopup=void 0;const l=t(6116),A=t(8799),a=t(1933);e.createWinPopup=function(){const n=(0,l.createElement)("div",["popup__container","overlay"]),e=(0,l.createElement)("div",["popup"]),t=(0,A.createPopupButtons)([{classNames:["button","button--close-popup"],name:"Cool, thanks!"}]),i=(0,a.createWinPopupContent)();return e.append(i,t),e.append(t),n.append(e),n}},1933:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createWinPopupContent=void 0;const l=t(6116);e.createWinPopupContent=function(){const n=(0,l.createElement)("div",["popup__content"]);return n.insertAdjacentHTML("afterbegin",'\n    <div class="popup__image">\n      <bear class="dance"></bear>\n    </div>\n  '),n.insertAdjacentHTML("beforeend",'<p class="popup__text">Big congrats!!!<br>\n    <span>You’ve got all 10 levels right.</span>\n  </p>'),n}},131:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.levelsData=void 0,e.levelsData=[{id:"1",title:"A",task:"Select green triangles",answer:"triangle",code:'\n      <div class="playground">\n        <triangle el="1"/></triangle>\n        <ball el="2"/></ball>\n        <triangle el="3"/></triangle>\n      </div>'},{id:"2",title:"A B",task:"Select yellow balls in a pink fish",answer:"fish ball",code:'\n      <div class="playground">\n        <fish el="1">\n          <ball el="2"/></ball>\n          <ball el="3"/></ball>\n        </fish el="1">\n        <ball el="4"/></ball>\n        <ball el="5"/></ball>\n      </div>'},{id:"3",title:"#id",task:"Select a pink teddy",answer:"#pink",code:'\n      <div class="playground">\n        <bear el="1"/></bear>\n        <bear el="2" id="pink"/></bear>\n        <bear el="3"/></bear>\n        <bear el="4"/></bear>\n      </div>'},{id:"4",title:".classname",task:"Select all small toys",answer:".small",code:'\n      <div class="playground">\n        <duck el="1"/></duck>\n        <ball el="2" class="small"/></ball>\n        <box el="3">\n          <duck el="4" class="small"/></duck>\n        </box el="3">\n        <box el="5"/></box>\n      </div>'},{id:"5",title:"A.classname",task:"Select all small fishes",answer:"fish.small",code:'\n      <div class="playground">\n        <fish el="1"/></fish>\n        <ball el="2">\n          <fish el="3" class="small"/>\n        </ball el="2">\n        <box el="4">\n          <fish el="5" class="small"/>\n        </box el="4">\n        <ball el="6" class="small"/></ball>\n      </div>'},{id:"6",title:"*",task:"Select all toys at the playground",answer:"*",code:'\n      <div class="playground">\n        <ball el="1"/></ball>\n        <duck el="2"/></duck>\n        <box el="3">\n          <triangle/ el="4">\n        </box el="3">\n        <ball el="5" class="small"/></ball>\n      </div>'},{id:"7",title:"[attribute]",task:"Select somebody's teddies",answer:"[kid]",code:'\n      <div class="playground">\n        <bear el="1"/></bear>\n        <box el="2" kid="Mary">\n          <bear el="3"/></bear>\n        </box el="2">\n        <ball el="4" kid="Patrick">\n          <bear el="5"/></bear>\n        </ball el="4">\n      </div>'},{id:"8",title:":n-child(A)",task:"Select the 3rd duck",answer:"duck:nth-child(3)",code:'\n      <div class="playground">\n        <duck el="1"/></duck>\n        <duck el="2"/></duck>\n        <duck el="3"/></duck>\n        <duck el="4"/></duck>\n      </div>'},{id:"9",title:":empty",task:"Select empty toy boxes",answer:"box:empty",code:'\n      <div class="playground">\n        <box el="1"/></box>\n        <box el="2"/></box>\n        <bear el="3" class="teddy"/></bear>\n        <box el="4">\n          <triangle el="5" class="yellow"/></triangle>\n        </box el="4">\n      </div>'},{id:"10",title:":not(X)",task:"Select big balls",answer:"ball:not(.small)",code:'\n      <div class="playground">\n        <box el="1">\n          <ball el="2" class="small yellow"/></ball>\n        </box el="1">\n        <box el="3">\n          <ball el="4" class="yellow"/></ball>\n        </box el="3">\n        <ball el="5"/></ball>\n        <ball el="6" class="small"/></ball>\n      </div>'}]},4033:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.areHintsUsed=void 0,e.areHintsUsed=function(){const n=window.localStorage.getItem("results"),e=n?JSON.parse(n):{};return Object.values(e).filter((n=>"hint"===n)).length>0}},7169:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.isWin=void 0,e.isWin=function(){const n=window.localStorage.getItem("results"),e=n?JSON.parse(n):{};return 10===Object.values(e).filter((n=>"done"===n||"hint"===n)).length}},9905:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleAnswer=void 0;const l=t(131),A=t(4557),a=t(3118),i=t(305),o=t(3),r=t(3104),s=t(7169),d=t(5773),c=t(6753),p=t(5403),E=t(3399);e.handleAnswer=function(){const n=(0,A.getElement)("input");if(!(n instanceof HTMLInputElement))throw Error("Target is not an HTMLInputElement...");const e=(0,o.getCurrentLevelID)(),t=(0,a.getLevelData)(e,l.levelsData),h=n.value.trim()===t.answer,u=n.dataset.hint;h&&(u&&((0,i.saveStatus)(e,"hint"),(0,r.setStatusIcon)(e,"hint")),u||((0,i.saveStatus)(e,"done"),(0,r.setStatusIcon)(e,"done")),(0,s.isWin)()?(console.log("🥳 Win!"),(0,E.showPopup)()):((0,c.hideElementsAnimation)(),setTimeout(p.nextLevel,1500))),h||(console.log("⛔️ Wrong answer!"),(0,d.handleWrongAnswer)())}},1279:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleAnswerOnEnter=void 0;const l=t(4557),A=t(9905);e.handleAnswerOnEnter=function(n){if(!((0,l.getElement)("input")instanceof HTMLInputElement))throw Error("Target is not an HTMLInputElement...");"Enter"===n.code&&(0,A.handleAnswer)()}},6361:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleInputFocus=void 0;const l=t(1435);e.handleInputFocus=function(n){const e=(0,l.getTarget)(n);if(!(e instanceof HTMLInputElement))throw Error("Target is not an HTMLInputElement...");"blur"===n.type&&(e.focus(),e.value.trim()||(e.value="",e.placeholder="Type in a CSS Selector..."))}},6753:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.hideElementsAnimation=void 0;const l=t(4557);e.hideElementsAnimation=function(){[...(0,l.getElement)(".playground").children].forEach(((n,e)=>{if(!(n instanceof HTMLElement))throw Error("Element is not an HTMLElement...");n.classList.add("hide"),n.style.animationDelay=e/10+"s"}))}},5773:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleWrongAnswer=void 0;const l=t(4557);e.handleWrongAnswer=function(){const n=(0,l.getElement)(".block__editors");n.classList.add("shake"),setTimeout((()=>n.classList.remove("shake")),500)}},3562:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleHint=void 0;const l=t(4557),A=t(3),a=t(131),i=t(366);e.handleHint=function(){const n=(0,l.getElement)("input");if(!(n instanceof HTMLInputElement))throw Error("Target is not an HTMLInputElement...");const e=(0,A.getCurrentLevelID)(),t=a.levelsData.find((n=>n.id===e)),o=t?t.answer:"";if(!o)throw Error("Failed to find this level answer...");(0,i.typeAnswer)(o),n.dataset.hint="hint"}},366:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.typeAnswer=void 0;const l=t(4557);e.typeAnswer=function(n){const e=(0,l.getElement)("input");if(!(e instanceof HTMLInputElement))throw Error("Target is not an HTMLInputElement...");let t=0,A="";const a=setInterval((()=>{A+=n[t],e.value=A,t>=n.length-1&&clearInterval(a),t++}),50)}},1136:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createTooltip=void 0;const l=t(6116),A=t(9654);e.createTooltip=function(n){const e=n.getBoundingClientRect().left,t=(0,l.createElement)("span",["tooltip"]);return t.textContent=(0,A.createTooltipText)(n),t.style.left=e+"px",t.style.top="12%",t}},5882:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getGraphicElement=void 0;const l=t(4557);e.getGraphicElement=function(n){const e=n.getAttribute("el"),t=(0,l.getElementsArray)("[el]").filter((n=>n.closest(".playground"))).find((n=>n.getAttribute("el")===e));if(!t)throw Error("Graphic element isn't found...");return t}},6192:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getHTMLLineTarget=void 0;const l=t(4557);e.getHTMLLineTarget=function(n){const e=n.getAttribute("el"),t=(0,l.getElementsArray)(".editor--html .tag-line").find((n=>n.getAttribute("el")===e));if(!t)throw Error("HTML line element is not found...");return t}},8925:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.highlightFromEnd=e.highlightFromStart=void 0,e.highlightFromStart=function(n,e){const t=n.innerText.slice(1,-1).split(" ")[0],l=e.indexOf(n),A=e.findIndex(((n,e)=>e>l&&n.innerText===`</${t}>`));e.slice(l,A+1).forEach((n=>{n.classList.add("highlight")}))},e.highlightFromEnd=function(n,e){const t=n.innerText.slice(2,-1),l=e.indexOf(n),A=[];e.forEach(((n,e)=>{e<l&&n.innerText.startsWith(`<${t}`)&&A.push(e)}));const a=A.pop();e.slice(a,l+1).forEach((n=>{n.classList.add("highlight")}))}},5480:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.highlightHTML=void 0;const l=t(4557),A=t(8925);e.highlightHTML=function(n){const e=(0,l.getElementsArray)(".editor--html .tag-line");e.forEach((n=>n.classList.remove("highlight")));const t=n.innerText.slice(1,-1);t.includes("/")||(0,A.highlightFromStart)(n,e),t.startsWith("/")&&(0,A.highlightFromEnd)(n,e),n.classList.add("highlight")}},8774:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleHTMLHover=void 0;const l=t(1435),A=t(7207),a=t(5480),i=t(5882),o=t(5657);e.handleHTMLHover=function(n){var e;const t=(0,l.getTarget)(n);if(null===(e=t.textContent)||void 0===e?void 0:e.includes("div"))return;(0,a.highlightHTML)(t);const r=(0,i.getGraphicElement)(t);(0,o.showTooltip)(r),t.addEventListener("mouseout",A.removeHoverStates)}},7207:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.removeHoverStates=void 0;const l=t(4557);e.removeHoverStates=function(){const n=(0,l.getElementsArray)(".tooltip");(0,l.getElementsArray)(".editor--html .tag-line").forEach((n=>n.classList.remove("highlight"))),n.forEach((n=>n.remove()))}},2953:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleShapesHover=void 0;const l=t(1435),A=t(7207),a=t(6192),i=t(5480),o=t(5657);e.handleShapesHover=function(n){const e=(0,l.getTarget)(n);if(e.classList.contains("playground"))return;(0,o.showTooltip)(e);const t=(0,a.getHTMLLineTarget)(e);(0,i.highlightHTML)(t),e.addEventListener("mouseout",A.removeHoverStates)}},5657:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.showTooltip=void 0;const l=t(4557),A=t(1136);e.showTooltip=function(n){const e=(0,l.getElement)(".playground"),t=(0,A.createTooltip)(n);e.append(t)}},9654:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createTooltipText=void 0,e.createTooltipText=function(n){const e=n.outerHTML,t=e.indexOf(">")+1,l=e.lastIndexOf("<");return(e.slice(0,t)+e.slice(l)).replace(/ dance/,"").replace(/ class="dance"/,"").replace(/ el="\d"/,"")}},1504:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.addAnimation=void 0,e.addAnimation=function(n){const e="*"===n.answer?".playground > *":n.answer;[...document.querySelectorAll(e)].forEach((n=>{if(!(n instanceof HTMLElement))throw Error("Element is not an HTMLElement...");n.classList.add("dance")}))}},9313:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.updateGraphics=void 0;const l=t(4557),A=t(3118),a=t(1504);e.updateGraphics=function(n,e){const t=(0,l.getElement)(".graphics__container"),i=(0,A.getLevelData)(n,e),o=i.code;t.innerHTML="",t.insertAdjacentHTML("afterbegin",o),(0,a.addAnimation)(i)}},8999:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.highlightItem=void 0;const l=t(4557);e.highlightItem=function(n){const e=document.querySelector(`[data-id="${n}"]`);(0,l.getElementsArray)(".level__item").forEach((n=>n.classList.remove("level--current"))),null==e||e.classList.add("level--current")}},6754:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.updateHTMLEditor=void 0;const l=t(4557),A=t(3118);e.updateHTMLEditor=function(n,e){const t=(0,l.getElement)(".editor--html .content__container"),a=(0,A.getLevelData)(n,e);let i="";a.code.split("\n").map((n=>n.trim())).filter((n=>n.length)).forEach((n=>{const e=n.indexOf("el"),t=n.slice(e,e+6),l=n.replace("<","&lt;").replace(">","&gt;").replace(/ el="\d"/,"");i+=`<div ${t} class="tag-line">${l}</div>`})),t.innerHTML="",t.insertAdjacentHTML("afterbegin",i)}},5403:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.nextLevel=void 0;const l=t(131),A=t(4358),a=t(7085),i=t(3);e.nextLevel=function(){const n=(0,i.getCurrentLevelID)();let e=Number(n)+1;e>10&&(e=1),(0,A.renderSelectedLevel)(String(e),l.levelsData),(0,a.saveLevelID)(String(e))}},9164:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.prevLevel=void 0;const l=t(131),A=t(4358),a=t(7085);e.prevLevel=function(){const n=window.localStorage.getItem("level")||"1";let e=Number(n)-1;e<1&&(e=10),(0,A.renderSelectedLevel)(String(e),l.levelsData),(0,a.saveLevelID)(String(e))}},4358:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.renderSelectedLevel=void 0;const l=t(8999),A=t(9753),a=t(1951),i=t(6754),o=t(9313),r=t(3104),s=t(3015),d=t(4652);e.renderSelectedLevel=function(n,e){document.body.className=`level--${n}`,(0,l.highlightItem)(n),(0,A.updateLevelCount)(n),(0,r.setStatusIcon)(n),(0,a.updateTaskTitle)(n,e),(0,i.updateHTMLEditor)(n,e),(0,o.updateGraphics)(n,e),(0,s.cleanInput)(),(0,d.initHovers)()}},7461:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleLevelSelect=void 0;const l=t(1435),A=t(4557),a=t(131),i=t(7085),o=t(4358);e.handleLevelSelect=function(n){const e=(0,l.getTarget)(n),t=(0,A.getClosestElement)(e,"[data-id]").dataset.id;if(!t)throw Error("Level ID is not defined...");(0,o.renderSelectedLevel)(t,a.levelsData),(0,i.saveLevelID)(t)}},3104:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.setStatusIcon=void 0;const l=t(4557),A=t(7881);e.setStatusIcon=function(n,e){const t=e||(0,A.getSavedStatus)(n);!function(n,e){const t=(0,l.getElement)(".header__levels");[...t.classList].forEach((n=>{n.includes("level--")&&t.classList.remove(n)})),t.classList.add(e)}(0,`level--${t}`),function(n,e){const t=document.querySelector(`[data-id="${n}"]`),l=t?[...t.classList]:null;null==l||l.forEach((n=>{(n.includes("level--undefined")||n.includes("level--done")||n.includes("level--hint"))&&(null==t||t.classList.remove(n))})),null==t||t.classList.add(e)}(n,`level--${t}`)}},1951:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.updateTaskTitle=void 0;const l=t(4557);e.updateTaskTitle=function(n,e){const t=(0,l.getElement)(".task__text"),A=e.find((e=>e.id===n));if(!A)throw Error("Level is not found...");t.textContent=null==A?void 0:A.task}},9753:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.updateLevelCount=void 0;const l=t(4557);e.updateLevelCount=function(n){const e=(0,l.getElement)(".section__levels .header__data--level"),t=(0,l.getElement)(".header .header__data--level");e.textContent=`${n}/10`,t.textContent=`${n}/10`}},4652:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.initHovers=e.initListeners=void 0;const l=t(4557),A=t(6413),a=t(974),i=t(7461),o=t(5403),r=t(9164),s=t(9905),d=t(6361),c=t(7934),p=t(1279),E=t(2690),h=t(3562),u=t(2953),g=t(8774),v=t(7207);function C(){const n=(0,l.getElement)(".playground"),e=(0,l.getElement)(".editor--html .content__container");n.addEventListener("mouseover",u.handleShapesHover),e.addEventListener("mouseover",g.handleHTMLHover),e.addEventListener("mouseout",v.removeHoverStates)}e.initListeners=function(){const n=(0,l.getElement)(".button--levels"),e=(0,l.getElement)(".levels__container"),t=(0,l.getElement)(".button--next"),u=(0,l.getElement)(".button--prev"),g=(0,l.getElement)(".button--check"),v=(0,l.getElement)("input"),x=(0,l.getElement)(".button--reset"),b=(0,l.getElement)(".button--close-popup"),f=(0,l.getElement)(".button--hint");n.addEventListener("click",A.showPanel),window.addEventListener("click",a.hidePanel),e.addEventListener("click",i.handleLevelSelect),t.addEventListener("click",o.nextLevel),u.addEventListener("click",r.prevLevel),g.addEventListener("click",s.handleAnswer),window.addEventListener("keydown",p.handleAnswerOnEnter),v.addEventListener("blur",d.handleInputFocus),x.addEventListener("click",c.resetGame),b.addEventListener("click",E.handleClosePopup),f.addEventListener("click",h.handleHint),C()},e.initHovers=C},3:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getCurrentLevelID=void 0,e.getCurrentLevelID=function(){return window.localStorage.getItem("level")||"1"}},7881:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getSavedStatus=void 0,e.getSavedStatus=function(n){const e=window.localStorage.getItem("results"),t=e?JSON.parse(e):{};return t[n]?t[n]:"unfinished"}},7085:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.saveLevelID=void 0,e.saveLevelID=function(n){window.localStorage.setItem("level",n)}},305:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.saveStatus=void 0,e.saveStatus=function(n,e){const t=window.localStorage.getItem("results"),l=t?JSON.parse(t):{};l[n]=e,window.localStorage.setItem("results",JSON.stringify(l))}},2690:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleClosePopup=void 0;const l=t(1435),A=t(4557),a=t(7934);e.handleClosePopup=function(n){const e=(0,A.getElement)(".popup__container"),t=(0,l.getTarget)(n);(t instanceof HTMLButtonElement||t.classList.contains("button--close-popup"))&&(e.classList.remove("show-popup"),document.body.style.overflow="",(0,a.resetGame)())}},3399:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.showPopup=void 0;const l=t(4557),A=t(4033);e.showPopup=function(){const n=(0,l.getElement)(".popup__container"),e=(0,l.getElement)(".popup__text"),t=`Big congrats!!!<br>\n    <span>You’ve got all levels right <br>${(0,A.areHintsUsed)()?"with a little hint help":"without using any hints"}.</span>\n    `;e.innerHTML=t,n.classList.add("show-popup"),document.body.style.overflow="hidden"}},1484:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.cleanStatusIcons=void 0;const l=t(4557);e.cleanStatusIcons=function(){(0,l.getElementsArray)(".level__item").forEach((n=>{n.classList.remove("level--done"),n.classList.remove("level--hint")}))}},3015:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.cleanInput=void 0;const l=t(4557);e.cleanInput=function(){const n=(0,l.getElement)("input");if(!(n instanceof HTMLInputElement))throw Error("Target is not an HTMLInputElement...");n.value="",n.placeholder="Type in a CSS Selector...",n.removeAttribute("data-hint"),n.focus()}},2906:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.cleanSavedResults=void 0,e.cleanSavedResults=function(){window.localStorage.removeItem("results")}},7934:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.resetGame=void 0;const l=t(7085),A=t(2906),a=t(4358),i=t(131),o=t(3015),r=t(1484);e.resetGame=function(){(0,A.cleanSavedResults)(),(0,l.saveLevelID)("1"),(0,a.renderSelectedLevel)("1",i.levelsData),(0,o.cleanInput)(),(0,r.cleanStatusIcons)()}},974:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.hidePanel=void 0;const l=t(4557),A=t(1435);e.hidePanel=function(n){if(window.innerWidth>980)return;const e=(0,A.getTarget)(n);if(e.closest(".button--levels"))return;const t=(0,l.getElement)(".section__levels");(null==t?void 0:t.classList.contains("panel--visible"))&&(e.closest(".section__levels")&&!e.closest(".button--hide")||null==t||t.classList.remove("panel--visible"))}},6413:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.showPanel=void 0;const l=t(4557),A=t(1435);e.showPanel=function(n){if(window.innerWidth>980)return;if(!(0,A.getTarget)(n).closest(".button--levels"))return;const e=(0,l.getElement)(".section__levels");(null==e?void 0:e.classList.contains("panel--visible"))||null==e||e.classList.add("panel--visible")}},6116:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createElement=void 0,e.createElement=function(n,e,t){const l=document.createElement(n);return l.classList.add(...e),t&&(l.textContent=t),l}},4557:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getElementsArray=e.getClosestElement=e.getElement=void 0,e.getElement=function(n){const e=document.querySelector(n);if(!(e&&e instanceof HTMLElement))throw Error(`${n} element is not found...`);return e},e.getClosestElement=function(n,e){const t=n.closest(e);if(!(t&&t instanceof HTMLElement))throw Error(`${e} element is not found...`);return t},e.getElementsArray=function(n){const e=Array.from(document.querySelectorAll(n));if(!e)throw Error(`${n} elements are not found...`);return e.forEach((n=>{if(!(n instanceof HTMLElement))throw Error("Elements are not an array of HTMLElement...")})),e}},3118:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getLevelData=void 0,e.getLevelData=function(n,e){const t=e.find((e=>e.id===n));if(!t)throw Error("Level is not found...");return t}},1435:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getTarget=void 0,e.getTarget=function(n){const e=n.target;if(!e)throw Error("Target element is not found...");if(!(e instanceof HTMLElement))throw Error("Target is not an HTMLElement...");return e}},4212:(n,e,t)=>{n.exports=t.p+"b6742c5f817f697f808d.svg"},18:(n,e,t)=>{n.exports=t.p+"e465eeb42de0f2908ed4.svg"},5824:(n,e,t)=>{n.exports=t.p+"32d521ab5ec4a607f49b.svg"},3797:(n,e,t)=>{n.exports=t.p+"017485f93e69c109f7fc.svg"},3008:(n,e,t)=>{n.exports=t.p+"4a1dcc4bacb9455a3dfb.svg"}},e={};function t(l){var A=e[l];if(void 0!==A)return A.exports;var a=e[l]={id:l,exports:{}};return n[l](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var l in e)t.o(e,l)&&!t.o(n,l)&&Object.defineProperty(n,l,{enumerable:!0,get:e[l]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var l=e.getElementsByTagName("script");if(l.length)for(var A=l.length-1;A>-1&&!n;)n=l[A--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{console.log("✅ CSS Playground"),t(4643);const n=t(6077),e=t(4652),l=t(4358),A=t(131);(0,n.renderApp)(),window.addEventListener("DOMContentLoaded",(()=>{console.log("✅ DOM Rendered");const n=window.localStorage.getItem("level")||"1";(0,l.renderSelectedLevel)(n,A.levelsData),(0,e.initListeners)()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,