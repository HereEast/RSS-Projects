(()=>{"use strict";var n={4127:(n,e,t)=>{t.d(e,{Z:()=>g});var a=t(4015),o=t.n(a),r=t(3645),i=t.n(r),s=t(1667),A=t.n(s),c=t(5197),d=t(5960),l=i()(o()),p=A()(c),u=A()(d);l.push([n.id,"button {\n  border: 0;\n  outline: 0;\n  font-family: var(--font);\n  font-size: var(--button-font-size);\n  color: var(--black);\n  height: 30px;\n  padding: 0 15px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n\n  background-color: var(--white);\n  border-radius: 30px;\n  text-transform: uppercase;\n\n  position: relative;\n  z-index: 100;\n  user-select: none;\n  cursor: pointer;\n\n  transition: all 0.2s ease-in;\n}\n\nbutton:not(.button__view):hover {\n  opacity: 1;\n  background-color: var(--button-hover-white);\n}\n\n.button__view {\n  width: 120px;\n  height: 60px;\n  background-color: transparent;\n  color: var(--white);\n  font-size: 18px;\n  text-transform: capitalize;\n\n  transition: color 0.2s ease-in;\n}\n\n.button__view.active {\n  color: var(--black);\n  cursor: default;\n}\n\nform button {\n  padding: 0 15px;\n  text-transform: uppercase;\n  font-size: 12px;\n}\n\n.button__cancel,\n.button__reset,\n.button__page {\n  background-color: transparent;\n  border: 1px solid var(--white);\n  color: var(--white);\n}\n\n.button__cancel:hover,\n.button__reset:hover,\n.button__page:hover {\n  background-color: var(--white);\n  color: var(--black);\n}\n\n.button__race {\n  background-color: var(--green);\n}\n\nbutton.button__race:hover {\n  background-color: var(--button-hover-primary);\n}\n\n.button__race:disabled,\nbutton.button__race:disabled:hover {\n  background-color: var(--green);\n  opacity: 0.6;\n  cursor: default;\n}\n\n.button__page {\n  height: 20px;\n  padding: 0 10px;\n}\n\n.button__page:disabled {\n  cursor: default;\n  opacity: 0.5;\n}\n\nbutton.button__page:disabled:hover {\n  cursor: default;\n  opacity: 0.5;\n  background-color: transparent;\n  color: var(--white);\n}\n\n/* Track */\n.button__track {\n  font-size: 14px;\n  text-transform: capitalize;\n  background-color: transparent;\n  color: var(--track-button-color);\n\n  padding: 0 5px;\n  height: 20px;\n}\n\nbutton.button__track:hover {\n  color: var(--white);\n  background-color: var(--black-light);\n}\n\nbutton.button__track:disabled,\nbutton.button__track:disabled {\n  cursor: default;\n  background-color: transparent;\n  color: var(--track-button-color);\n}\n\n.button__create:disabled,\n.button__create:disabled:hover,\n.button__generate:disabled,\n.button__generate:disabled:hover {\n  background-color: var(--white);\n  opacity: 0.5;\n  cursor: default;\n}\n\n/* Sort */\n\nbutton.button__sort--wins,\nbutton.button__sort--time,\nbutton.button__sort--ids {\n  padding: 0 2px 0 1px;\n  width: 15px;\n  height: 24px;\n  border-radius: 10px;\n\n  background-color: var(--black-light);\n  background-image: url("+p+");\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: 50%;\n}\n\nbutton.button__sort--wins:hover,\nbutton.button__sort--time:hover,\nbutton.button__sort--ids:hover {\n  background-image: url("+u+");\n}\n\n/**/\n\n@media all and (max-width: 720px) {\n  .button__view {\n    width: 50%;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/components/buttons.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,wBAAwB;EACxB,kCAAkC;EAClC,mBAAmB;EACnB,YAAY;EACZ,eAAe;;EAEf,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,cAAc;;EAEd,8BAA8B;EAC9B,mBAAmB;EACnB,yBAAyB;;EAEzB,kBAAkB;EAClB,YAAY;EACZ,iBAAiB;EACjB,eAAe;;EAEf,4BAA4B;AAC9B;;AAEA;EACE,UAAU;EACV,2CAA2C;AAC7C;;AAEA;EACE,YAAY;EACZ,YAAY;EACZ,6BAA6B;EAC7B,mBAAmB;EACnB,eAAe;EACf,0BAA0B;;EAE1B,8BAA8B;AAChC;;AAEA;EACE,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,eAAe;EACf,yBAAyB;EACzB,eAAe;AACjB;;AAEA;;;EAGE,6BAA6B;EAC7B,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;;;EAGE,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,6CAA6C;AAC/C;;AAEA;;EAEE,8BAA8B;EAC9B,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,eAAe;EACf,YAAY;AACd;;AAEA;EACE,eAAe;EACf,YAAY;EACZ,6BAA6B;EAC7B,mBAAmB;AACrB;;AAEA,UAAU;AACV;EACE,eAAe;EACf,0BAA0B;EAC1B,6BAA6B;EAC7B,gCAAgC;;EAEhC,cAAc;EACd,YAAY;AACd;;AAEA;EACE,mBAAmB;EACnB,oCAAoC;AACtC;;AAEA;;EAEE,eAAe;EACf,6BAA6B;EAC7B,gCAAgC;AAClC;;AAEA;;;;EAIE,8BAA8B;EAC9B,YAAY;EACZ,eAAe;AACjB;;AAEA,SAAS;;AAET;;;EAGE,oBAAoB;EACpB,WAAW;EACX,YAAY;EACZ,mBAAmB;;EAEnB,oCAAoC;EACpC,yDAA8C;EAC9C,2BAA2B;EAC3B,4BAA4B;EAC5B,oBAAoB;AACtB;;AAEA;;;EAGE,yDAAoD;AACtD;;AAEA,GAAG;;AAEH;EACE;IACE,UAAU;EACZ;AACF",sourcesContent:['button {\n  border: 0;\n  outline: 0;\n  font-family: var(--font);\n  font-size: var(--button-font-size);\n  color: var(--black);\n  height: 30px;\n  padding: 0 15px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n\n  background-color: var(--white);\n  border-radius: 30px;\n  text-transform: uppercase;\n\n  position: relative;\n  z-index: 100;\n  user-select: none;\n  cursor: pointer;\n\n  transition: all 0.2s ease-in;\n}\n\nbutton:not(.button__view):hover {\n  opacity: 1;\n  background-color: var(--button-hover-white);\n}\n\n.button__view {\n  width: 120px;\n  height: 60px;\n  background-color: transparent;\n  color: var(--white);\n  font-size: 18px;\n  text-transform: capitalize;\n\n  transition: color 0.2s ease-in;\n}\n\n.button__view.active {\n  color: var(--black);\n  cursor: default;\n}\n\nform button {\n  padding: 0 15px;\n  text-transform: uppercase;\n  font-size: 12px;\n}\n\n.button__cancel,\n.button__reset,\n.button__page {\n  background-color: transparent;\n  border: 1px solid var(--white);\n  color: var(--white);\n}\n\n.button__cancel:hover,\n.button__reset:hover,\n.button__page:hover {\n  background-color: var(--white);\n  color: var(--black);\n}\n\n.button__race {\n  background-color: var(--green);\n}\n\nbutton.button__race:hover {\n  background-color: var(--button-hover-primary);\n}\n\n.button__race:disabled,\nbutton.button__race:disabled:hover {\n  background-color: var(--green);\n  opacity: 0.6;\n  cursor: default;\n}\n\n.button__page {\n  height: 20px;\n  padding: 0 10px;\n}\n\n.button__page:disabled {\n  cursor: default;\n  opacity: 0.5;\n}\n\nbutton.button__page:disabled:hover {\n  cursor: default;\n  opacity: 0.5;\n  background-color: transparent;\n  color: var(--white);\n}\n\n/* Track */\n.button__track {\n  font-size: 14px;\n  text-transform: capitalize;\n  background-color: transparent;\n  color: var(--track-button-color);\n\n  padding: 0 5px;\n  height: 20px;\n}\n\nbutton.button__track:hover {\n  color: var(--white);\n  background-color: var(--black-light);\n}\n\nbutton.button__track:disabled,\nbutton.button__track:disabled {\n  cursor: default;\n  background-color: transparent;\n  color: var(--track-button-color);\n}\n\n.button__create:disabled,\n.button__create:disabled:hover,\n.button__generate:disabled,\n.button__generate:disabled:hover {\n  background-color: var(--white);\n  opacity: 0.5;\n  cursor: default;\n}\n\n/* Sort */\n\nbutton.button__sort--wins,\nbutton.button__sort--time,\nbutton.button__sort--ids {\n  padding: 0 2px 0 1px;\n  width: 15px;\n  height: 24px;\n  border-radius: 10px;\n\n  background-color: var(--black-light);\n  background-image: url("../../assets/sort.svg");\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: 50%;\n}\n\nbutton.button__sort--wins:hover,\nbutton.button__sort--time:hover,\nbutton.button__sort--ids:hover {\n  background-image: url("../../assets/sort-black.svg");\n}\n\n/**/\n\n@media all and (max-width: 720px) {\n  .button__view {\n    width: 50%;\n  }\n}\n'],sourceRoot:""}]);const g=l},1076:(n,e,t)=>{t.d(e,{Z:()=>p});var a=t(4015),o=t.n(a),r=t(3645),i=t.n(r),s=t(1667),A=t.n(s),c=t(6140),d=i()(o()),l=A()(c);d.push([n.id,".forms__container {\n  max-width: 530px;\n  width: 100%;\n  position: relative;\n  display: flex;\n}\n\n.forms__container.forms--hidden {\n  visibility: hidden;\n  opacity: 0;\n}\n\n.forms__container form {\n  width: 100%;\n  background-color: var(--black-light);\n  border-radius: 30px;\n}\n\nform {\n  display: flex;\n  justify-content: space-between;\n}\n\nform .form__container {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  gap: 5px;\n}\n\n.form__create {\n  padding: 15px;\n}\n\n.form__create span {\n  width: 3px;\n  height: 30px;\n  background-image: url("+l+");\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  opacity: 0.2;\n\n  margin: 0 15px;\n  display: flex;\n  flex-shrink: 0;\n}\n\n.form__update {\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  position: absolute;\n  left: 0;\n  top: 0;\n  z-index: 100;\n\n  box-shadow: 10px 10px 10px var(--shadow);\n\n  transform: translateY(-200%);\n  transition: all 0.3s ease-in-out;\n}\n\n.form__update--open {\n  transform: translateY(0);\n}\n\n.form__update h2 {\n  font-size: 24px;\n  font-weight: 400;\n  margin-bottom: 10px;\n}\n\n/**/\n\n@media all and (max-width: 720px) {\n  .forms__container {\n    max-width: 720px;\n    width: 100%;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/components/forms.css"],names:[],mappings:"AAAA;EACE,gBAAgB;EAChB,WAAW;EACX,kBAAkB;EAClB,aAAa;AACf;;AAEA;EACE,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,WAAW;EACX,oCAAoC;EACpC,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,WAAW;EACX,aAAa;EACb,8BAA8B;EAC9B,QAAQ;AACV;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,UAAU;EACV,YAAY;EACZ,yDAAsD;EACtD,wBAAwB;EACxB,2BAA2B;EAC3B,4BAA4B;EAC5B,YAAY;;EAEZ,cAAc;EACd,aAAa;EACb,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,aAAa;EACb,sBAAsB;EACtB,2BAA2B;EAC3B,kBAAkB;EAClB,OAAO;EACP,MAAM;EACN,YAAY;;EAEZ,wCAAwC;;EAExC,4BAA4B;EAC5B,gCAAgC;AAClC;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,eAAe;EACf,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA,GAAG;;AAEH;EACE;IACE,gBAAgB;IAChB,WAAW;EACb;AACF",sourcesContent:['.forms__container {\n  max-width: 530px;\n  width: 100%;\n  position: relative;\n  display: flex;\n}\n\n.forms__container.forms--hidden {\n  visibility: hidden;\n  opacity: 0;\n}\n\n.forms__container form {\n  width: 100%;\n  background-color: var(--black-light);\n  border-radius: 30px;\n}\n\nform {\n  display: flex;\n  justify-content: space-between;\n}\n\nform .form__container {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  gap: 5px;\n}\n\n.form__create {\n  padding: 15px;\n}\n\n.form__create span {\n  width: 3px;\n  height: 30px;\n  background-image: url("../../assets/dots-dividor.svg");\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  opacity: 0.2;\n\n  margin: 0 15px;\n  display: flex;\n  flex-shrink: 0;\n}\n\n.form__update {\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  position: absolute;\n  left: 0;\n  top: 0;\n  z-index: 100;\n\n  box-shadow: 10px 10px 10px var(--shadow);\n\n  transform: translateY(-200%);\n  transition: all 0.3s ease-in-out;\n}\n\n.form__update--open {\n  transform: translateY(0);\n}\n\n.form__update h2 {\n  font-size: 24px;\n  font-weight: 400;\n  margin-bottom: 10px;\n}\n\n/**/\n\n@media all and (max-width: 720px) {\n  .forms__container {\n    max-width: 720px;\n    width: 100%;\n  }\n}\n'],sourceRoot:""}]);const p=d},1645:(n,e,t)=>{t.d(e,{Z:()=>s});var a=t(4015),o=t.n(a),r=t(3645),i=t.n(r)()(o());i.push([n.id,"input {\n  outline: none;\n  border: none;\n  height: 30px;\n\n  transition: all 0.1s ease-in;\n}\n\n.input-text {\n  max-width: 500px;\n  width: 100%;\n  padding: 0 15px;\n\n  border-radius: 30px;\n  border: 1px solid var(--input-border);\n  background-color: transparent;\n}\n\n.input-text:focus {\n  color: var(--white);\n  border: 1px solid var(--white);\n}\n\n.input-color {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  background-color: transparent;\n  width: 34px;\n  height: 30px;\n  border: none;\n  cursor: pointer;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n\n  margin-top: -4px;\n}\n\n.input-color::-webkit-color-swatch {\n  display: block;\n  width: 30px;\n  height: 28px;\n  border-radius: 30px;\n  border: 1px solid var(--white);\n}\n\n.input-color::-moz-color-swatch {\n  border-radius: 30px;\n  border: 1px solid var(--white);\n}\n\n","",{version:3,sources:["webpack://./src/styles/components/input.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,YAAY;EACZ,YAAY;;EAEZ,4BAA4B;AAC9B;;AAEA;EACE,gBAAgB;EAChB,WAAW;EACX,eAAe;;EAEf,mBAAmB;EACnB,qCAAqC;EACrC,6BAA6B;AAC/B;;AAEA;EACE,mBAAmB;EACnB,8BAA8B;AAChC;;AAEA;EACE,wBAAwB;EACxB,qBAAqB;EACrB,gBAAgB;EAChB,6BAA6B;EAC7B,WAAW;EACX,YAAY;EACZ,YAAY;EACZ,eAAe;;EAEf,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,cAAc;;EAEd,gBAAgB;AAClB;;AAEA;EACE,cAAc;EACd,WAAW;EACX,YAAY;EACZ,mBAAmB;EACnB,8BAA8B;AAChC;;AAEA;EACE,mBAAmB;EACnB,8BAA8B;AAChC",sourcesContent:["input {\n  outline: none;\n  border: none;\n  height: 30px;\n\n  transition: all 0.1s ease-in;\n}\n\n.input-text {\n  max-width: 500px;\n  width: 100%;\n  padding: 0 15px;\n\n  border-radius: 30px;\n  border: 1px solid var(--input-border);\n  background-color: transparent;\n}\n\n.input-text:focus {\n  color: var(--white);\n  border: 1px solid var(--white);\n}\n\n.input-color {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  background-color: transparent;\n  width: 34px;\n  height: 30px;\n  border: none;\n  cursor: pointer;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n\n  margin-top: -4px;\n}\n\n.input-color::-webkit-color-swatch {\n  display: block;\n  width: 30px;\n  height: 28px;\n  border-radius: 30px;\n  border: 1px solid var(--white);\n}\n\n.input-color::-moz-color-swatch {\n  border-radius: 30px;\n  border: 1px solid var(--white);\n}\n\n"],sourceRoot:""}]);const s=i},7394:(n,e,t)=>{t.d(e,{Z:()=>s});var a=t(4015),o=t.n(a),r=t(3645),i=t.n(r)()(o());i.push([n.id,".pagination {\n  width: 200px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  margin-top: 15px;\n}\n\n.page__container {\n  display: flex;\n  gap: 5px;\n}\n\n.page__container span {\n  font-size: 12px;\n  text-transform: uppercase;\n}\n\n.pages__buttons {\n  display: flex;\n  gap: 5px;\n}\n","",{version:3,sources:["webpack://./src/styles/components/pagination.css"],names:[],mappings:"AAAA;EACE,YAAY;EACZ,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;;EAEnB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,QAAQ;AACV;;AAEA;EACE,eAAe;EACf,yBAAyB;AAC3B;;AAEA;EACE,aAAa;EACb,QAAQ;AACV",sourcesContent:[".pagination {\n  width: 200px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  margin-top: 15px;\n}\n\n.page__container {\n  display: flex;\n  gap: 5px;\n}\n\n.page__container span {\n  font-size: 12px;\n  text-transform: uppercase;\n}\n\n.pages__buttons {\n  display: flex;\n  gap: 5px;\n}\n"],sourceRoot:""}]);const s=i},5939:(n,e,t)=>{t.d(e,{Z:()=>g});var a=t(4015),o=t.n(a),r=t(3645),i=t.n(r),s=t(1667),A=t.n(s),c=t(6191),d=t(3233),l=i()(o()),p=A()(c),u=A()(d);l.push([n.id,'.track {\n  position: relative;\n  border-top: 1px solid var(--white);\n}\n\n.track:last-child {\n  border-bottom: 1px solid var(--white);\n}\n\n.track__container {\n  padding: 10px 0;\n  position: relative;\n}\n\n.track__header {\n  display: flex;\n  gap: 7px;\n  align-items: center;\n\n  position: absolute;\n  margin-top: -5px;\n}\n\n.track__buttons {\n  display: flex;\n  gap: 4px;\n  margin-left: -2px;\n}\n\n.car__name {\n  position: relative;\n  padding-left: 16px;\n}\n\n.car__name::before {\n  content: "";\n  position: absolute;\n  width: 8px;\n  height: 8px;\n  background-image: url('+p+");\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n  left: 0;\n  top: 5px;\n}\n\n/* BODY */\n\n.track__body {\n  width: 100%;\n  position: relative;\n  height: 65px;\n  display: flex;\n  align-items: flex-end;\n}\n\n.car {\n  width: 40px;\n  height: 40px;\n  position: absolute;\n  z-index: 100;\n}\n\n.car svg {\n  border-radius: 50%;\n}\n\n.flag {\n  width: 30px;\n  height: 65px;\n  background-image: url("+u+");\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n\n  position: absolute;\n  right: 40px;\n  bottom: 0;\n}","",{version:3,sources:["webpack://./src/styles/components/track.css"],names:[],mappings:"AAAA;EACE,kBAAkB;EAClB,kCAAkC;AACpC;;AAEA;EACE,qCAAqC;AACvC;;AAEA;EACE,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,QAAQ;EACR,mBAAmB;;EAEnB,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,QAAQ;EACR,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,UAAU;EACV,WAAW;EACX,yDAAqD;EACrD,2BAA2B;EAC3B,wBAAwB;EACxB,4BAA4B;EAC5B,OAAO;EACP,QAAQ;AACV;;AAEA,SAAS;;AAET;EACE,WAAW;EACX,kBAAkB;EAClB,YAAY;EACZ,aAAa;EACb,qBAAqB;AACvB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,yDAAgD;EAChD,wBAAwB;EACxB,2BAA2B;EAC3B,4BAA4B;;EAE5B,kBAAkB;EAClB,WAAW;EACX,SAAS;AACX",sourcesContent:['.track {\n  position: relative;\n  border-top: 1px solid var(--white);\n}\n\n.track:last-child {\n  border-bottom: 1px solid var(--white);\n}\n\n.track__container {\n  padding: 10px 0;\n  position: relative;\n}\n\n.track__header {\n  display: flex;\n  gap: 7px;\n  align-items: center;\n\n  position: absolute;\n  margin-top: -5px;\n}\n\n.track__buttons {\n  display: flex;\n  gap: 4px;\n  margin-left: -2px;\n}\n\n.car__name {\n  position: relative;\n  padding-left: 16px;\n}\n\n.car__name::before {\n  content: "";\n  position: absolute;\n  width: 8px;\n  height: 8px;\n  background-image: url("../../assets/arrow-right.svg");\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n  left: 0;\n  top: 5px;\n}\n\n/* BODY */\n\n.track__body {\n  width: 100%;\n  position: relative;\n  height: 65px;\n  display: flex;\n  align-items: flex-end;\n}\n\n.car {\n  width: 40px;\n  height: 40px;\n  position: absolute;\n  z-index: 100;\n}\n\n.car svg {\n  border-radius: 50%;\n}\n\n.flag {\n  width: 30px;\n  height: 65px;\n  background-image: url("../../assets/finish.svg");\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n\n  position: absolute;\n  right: 40px;\n  bottom: 0;\n}'],sourceRoot:""}]);const g=l},7348:(n,e,t)=>{t.d(e,{Z:()=>s});var a=t(4015),o=t.n(a),r=t(3645),i=t.n(r)()(o());i.push([n.id,".footer {\n  width: 100%;\n  padding: var(--page-padding);\n}\n\n.footer__container {\n  width: 100%;\n  height: 30px;\n  padding: 0 15px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  background-color: var(--black-light);\n  border-radius: 30px;\n}\n\n.footer__container .footer__info {\n  display: flex;\n  gap: 5px;\n}\n\n/**/\n\n@media all and (max-width: 550px) {\n  .footer {\n    padding-bottom: 20px;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/footer.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,4BAA4B;AAC9B;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,eAAe;EACf,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;;EAEnB,oCAAoC;EACpC,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,QAAQ;AACV;;AAEA,GAAG;;AAEH;EACE;IACE,oBAAoB;EACtB;AACF",sourcesContent:[".footer {\n  width: 100%;\n  padding: var(--page-padding);\n}\n\n.footer__container {\n  width: 100%;\n  height: 30px;\n  padding: 0 15px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  background-color: var(--black-light);\n  border-radius: 30px;\n}\n\n.footer__container .footer__info {\n  display: flex;\n  gap: 5px;\n}\n\n/**/\n\n@media all and (max-width: 550px) {\n  .footer {\n    padding-bottom: 20px;\n  }\n}\n"],sourceRoot:""}]);const s=i},3497:(n,e,t)=>{t.d(e,{Z:()=>s});var a=t(4015),o=t.n(a),r=t(3645),i=t.n(r)()(o());i.push([n.id,".header {\n  width: 100%;\n  background-color: var(--black);\n  position: fixed;\n  left: 0;\n  top: 0;\n  z-index: 1000;\n}\n\n.header__container {\n  width: 100%;\n  padding: var(--page-padding);\n  display: flex;\n  justify-content: space-between;\n  gap: 10px;\n}\n\n.header__buttons {\n  display: flex;\n  position: relative;\n  border-radius: 60px;\n\n  background-color: var(--black-light);\n\n  cursor: pointer;\n  transition: all 0.2s ease-in;\n}\n\n.bubble {\n  display: block;\n  width: 50%;\n  height: 60px;\n  border-radius: 60px;\n  background-color: var(--white);\n\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  transition: all 0.2s ease-in-out;\n}\n\n.bubble.winners {\n  left: 50%;\n}\n\n/**/\n\n@media all and (max-width: 720px) {\n  .header__container {\n    flex-direction: column;\n    gap: 20px;\n  }\n\n  .header__buttons {\n    width: 100%;\n  }\n}\n\n@media all and (max-width: 550px) {\n  .header__container {\n    padding-top: 20px;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/header.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,8BAA8B;EAC9B,eAAe;EACf,OAAO;EACP,MAAM;EACN,aAAa;AACf;;AAEA;EACE,WAAW;EACX,4BAA4B;EAC5B,aAAa;EACb,8BAA8B;EAC9B,SAAS;AACX;;AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,mBAAmB;;EAEnB,oCAAoC;;EAEpC,eAAe;EACf,4BAA4B;AAC9B;;AAEA;EACE,cAAc;EACd,UAAU;EACV,YAAY;EACZ,mBAAmB;EACnB,8BAA8B;;EAE9B,kBAAkB;EAClB,MAAM;EACN,OAAO;;EAEP,gCAAgC;AAClC;;AAEA;EACE,SAAS;AACX;;AAEA,GAAG;;AAEH;EACE;IACE,sBAAsB;IACtB,SAAS;EACX;;EAEA;IACE,WAAW;EACb;AACF;;AAEA;EACE;IACE,iBAAiB;EACnB;AACF",sourcesContent:[".header {\n  width: 100%;\n  background-color: var(--black);\n  position: fixed;\n  left: 0;\n  top: 0;\n  z-index: 1000;\n}\n\n.header__container {\n  width: 100%;\n  padding: var(--page-padding);\n  display: flex;\n  justify-content: space-between;\n  gap: 10px;\n}\n\n.header__buttons {\n  display: flex;\n  position: relative;\n  border-radius: 60px;\n\n  background-color: var(--black-light);\n\n  cursor: pointer;\n  transition: all 0.2s ease-in;\n}\n\n.bubble {\n  display: block;\n  width: 50%;\n  height: 60px;\n  border-radius: 60px;\n  background-color: var(--white);\n\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  transition: all 0.2s ease-in-out;\n}\n\n.bubble.winners {\n  left: 50%;\n}\n\n/**/\n\n@media all and (max-width: 720px) {\n  .header__container {\n    flex-direction: column;\n    gap: 20px;\n  }\n\n  .header__buttons {\n    width: 100%;\n  }\n}\n\n@media all and (max-width: 550px) {\n  .header__container {\n    padding-top: 20px;\n  }\n}\n"],sourceRoot:""}]);const s=i},3771:(n,e,t)=>{t.d(e,{Z:()=>_});var a=t(4015),o=t.n(a),r=t(3645),i=t.n(r),s=t(8772),A=t(7179),c=t(4127),d=t(1076),l=t(1645),p=t(5939),u=t(7394),g=t(3497),E=t(8756),m=t(7348),C=t(1574),f=t(7450),b=i()(o());b.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=JetBrains+Mono:wght@300;400;500;600;700&display=swap);"]),b.i(s.Z),b.i(A.Z),b.i(c.Z),b.i(d.Z),b.i(l.Z),b.i(p.Z),b.i(u.Z),b.i(g.Z),b.i(E.Z),b.i(m.Z),b.i(C.Z),b.i(f.Z),b.push([n.id,"\n","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]);const _=b},8756:(n,e,t)=>{t.d(e,{Z:()=>s});var a=t(4015),o=t.n(a),r=t(3645),i=t.n(r)()(o());i.push([n.id,".main {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n\n  margin-top: 120px;\n}\n\n.main__container {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  padding: 40px var(--page-padding);\n}\n\n/* HEADER */\n\n.view__header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 15px;\n  margin-bottom: 20px;\n}\n\n.view__title {\n  display: flex;\n  gap: 5px;\n}\n\n.view__title span {\n  text-align: right;\n}\n\n.view__title h2,\n.view__title span {\n  font-size: 40px;\n  font-weight: 400;\n}\n\n.view__buttons {\n  display: flex;\n  gap: 5px;\n  margin-top: 5px;\n}\n\n.view__buttons.hidden {\n  visibility: hidden;\n  opacity: 0;\n}\n\n@media all and (max-width: 720px) {\n  .main {\n    margin-top: 180px;\n  }\n}","",{version:3,sources:["webpack://./src/styles/main.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,YAAY;;EAEZ,iBAAiB;AACnB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,YAAY;EACZ,iCAAiC;AACnC;;AAEA,WAAW;;AAEX;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,SAAS;EACT,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,QAAQ;AACV;;AAEA;EACE,iBAAiB;AACnB;;AAEA;;EAEE,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,QAAQ;EACR,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE;IACE,iBAAiB;EACnB;AACF",sourcesContent:[".main {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n\n  margin-top: 120px;\n}\n\n.main__container {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  padding: 40px var(--page-padding);\n}\n\n/* HEADER */\n\n.view__header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 15px;\n  margin-bottom: 20px;\n}\n\n.view__title {\n  display: flex;\n  gap: 5px;\n}\n\n.view__title span {\n  text-align: right;\n}\n\n.view__title h2,\n.view__title span {\n  font-size: 40px;\n  font-weight: 400;\n}\n\n.view__buttons {\n  display: flex;\n  gap: 5px;\n  margin-top: 5px;\n}\n\n.view__buttons.hidden {\n  visibility: hidden;\n  opacity: 0;\n}\n\n@media all and (max-width: 720px) {\n  .main {\n    margin-top: 180px;\n  }\n}"],sourceRoot:""}]);const s=i},1574:(n,e,t)=>{t.d(e,{Z:()=>s});var a=t(4015),o=t.n(a),r=t(3645),i=t.n(r)()(o());i.push([n.id,".popup {\n  position: absolute;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n\n  padding: 20px;\n  /* background-color: rgba(28, 28, 28, 0.5); */\n\n  transform: translateY(-100%);\n  transition: transform 1s ease-in;\n}\n\n.popup--open {\n  transform: translateY(0);\n}\n\n.popup__container {\n  max-width: 520px;\n  width: 100%;\n  height: 180px;\n  background-color: var(--black-light);\n  box-shadow: 10px 10px 10px var(--shadow);\n  border-radius: 40px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.popup__content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.popup__content span {\n  font-size: 24px;\n  user-select: none;\n}\n\n/**/\n\n@media all and (max-width: 550px) {\n  .popup {\n    padding: 15px;\n  }\n}","",{version:3,sources:["webpack://./src/styles/popup.css"],names:[],mappings:"AAAA;EACE,kBAAkB;EAClB,OAAO;EACP,YAAY;EACZ,aAAa;EACb,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,aAAa;;EAEb,aAAa;EACb,6CAA6C;;EAE7C,4BAA4B;EAC5B,gCAAgC;AAClC;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,gBAAgB;EAChB,WAAW;EACX,aAAa;EACb,oCAAoC;EACpC,wCAAwC;EACxC,mBAAmB;;EAEnB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,eAAe;EACf,iBAAiB;AACnB;;AAEA,GAAG;;AAEH;EACE;IACE,aAAa;EACf;AACF",sourcesContent:[".popup {\n  position: absolute;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n\n  padding: 20px;\n  /* background-color: rgba(28, 28, 28, 0.5); */\n\n  transform: translateY(-100%);\n  transition: transform 1s ease-in;\n}\n\n.popup--open {\n  transform: translateY(0);\n}\n\n.popup__container {\n  max-width: 520px;\n  width: 100%;\n  height: 180px;\n  background-color: var(--black-light);\n  box-shadow: 10px 10px 10px var(--shadow);\n  border-radius: 40px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.popup__content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.popup__content span {\n  font-size: 24px;\n  user-select: none;\n}\n\n/**/\n\n@media all and (max-width: 550px) {\n  .popup {\n    padding: 15px;\n  }\n}"],sourceRoot:""}]);const s=i},8772:(n,e,t)=>{t.d(e,{Z:()=>s});var a=t(4015),o=t.n(a),r=t(3645),i=t.n(r)()(o());i.push([n.id,'* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  font-size: 14px;\n  color: var(--white);\n}\n\nbody {\n  width: 100%;\n  min-height: 100vh;\n  height: 100%;\n  background: var(--black);\n  font-family: "Inter", "Arial", sans-serif;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  overflow-x: hidden;\n}\n\n.content-width {\n  width: 100%;\n}\n\na {\n  text-decoration: none;\n  color: var(--white);\n  opacity: 0.6;\n\n  transition: all 0.2s ease-in;\n}\n\na:hover {\n  opacity: 1;\n}\n\n/**/\n\n@media all and (max-width: 980px) {\n}\n\n\n',"",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAAA;EACE,UAAU;EACV,SAAS;EACT,sBAAsB;EACtB,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,iBAAiB;EACjB,YAAY;EACZ,wBAAwB;EACxB,yCAAyC;;EAEzC,aAAa;EACb,sBAAsB;EACtB,8BAA8B;EAC9B,mBAAmB;;EAEnB,kBAAkB;AACpB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,qBAAqB;EACrB,mBAAmB;EACnB,YAAY;;EAEZ,4BAA4B;AAC9B;;AAEA;EACE,UAAU;AACZ;;AAEA,GAAG;;AAEH;AACA",sourcesContent:['* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  font-size: 14px;\n  color: var(--white);\n}\n\nbody {\n  width: 100%;\n  min-height: 100vh;\n  height: 100%;\n  background: var(--black);\n  font-family: "Inter", "Arial", sans-serif;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  overflow-x: hidden;\n}\n\n.content-width {\n  width: 100%;\n}\n\na {\n  text-decoration: none;\n  color: var(--white);\n  opacity: 0.6;\n\n  transition: all 0.2s ease-in;\n}\n\na:hover {\n  opacity: 1;\n}\n\n/**/\n\n@media all and (max-width: 980px) {\n}\n\n\n'],sourceRoot:""}]);const s=i},7179:(n,e,t)=>{t.d(e,{Z:()=>s});var a=t(4015),o=t.n(a),r=t(3645),i=t.n(r)()(o());i.push([n.id,':root {\n  --black: #1C1C1C;\n  --white: whitesmoke;\n  --green: #6BD856;\n  --shadow: #131313;\n\n  --page-padding: 20px;\n  --font: "Inter", "Arial", sans-serif;\n\n  /* BUTTONS */\n  --button-font-size: 12px;\n  --black-light: #303030;\n  --button-hover-white: #dbdbdb;\n  --button-hover-primary: #4aaa37;\n  --track-button-color: #858585;\n\n  /*INPUTS*/\n  --input-border: #919191;\n}\n\n@media all and (max-width: 550px) {\n  :root {\n    --page-padding: 15px;\n  }\n}',"",{version:3,sources:["webpack://./src/styles/variables.css"],names:[],mappings:"AAAA;EACE,gBAAgB;EAChB,mBAAmB;EACnB,gBAAgB;EAChB,iBAAiB;;EAEjB,oBAAoB;EACpB,oCAAoC;;EAEpC,YAAY;EACZ,wBAAwB;EACxB,sBAAsB;EACtB,6BAA6B;EAC7B,+BAA+B;EAC/B,6BAA6B;;EAE7B,SAAS;EACT,uBAAuB;AACzB;;AAEA;EACE;IACE,oBAAoB;EACtB;AACF",sourcesContent:[':root {\n  --black: #1C1C1C;\n  --white: whitesmoke;\n  --green: #6BD856;\n  --shadow: #131313;\n\n  --page-padding: 20px;\n  --font: "Inter", "Arial", sans-serif;\n\n  /* BUTTONS */\n  --button-font-size: 12px;\n  --black-light: #303030;\n  --button-hover-white: #dbdbdb;\n  --button-hover-primary: #4aaa37;\n  --track-button-color: #858585;\n\n  /*INPUTS*/\n  --input-border: #919191;\n}\n\n@media all and (max-width: 550px) {\n  :root {\n    --page-padding: 15px;\n  }\n}'],sourceRoot:""}]);const s=i},7450:(n,e,t)=>{t.d(e,{Z:()=>s});var a=t(4015),o=t.n(a),r=t(3645),i=t.n(r)()(o());i.push([n.id,".table__row,\n.table__header {\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  /* padding: 10px 0; */\n  border-top: 1px solid var(--white);\n}\n\n.table__header span {\n  opacity: 0.5;\n}\n\n.table__row:last-child {\n  border-bottom: 1px solid var(--white);\n}\n\n.table span {\n  display: flex;\n  font-size: 14px;\n}\n\n.row__number {\n  width: 30px;\n}\n\n.row__car {\n  display: flex;\n  align-items: center;\n  flex-grow: 1;\n  margin-left: 20px;\n  gap: 5px;\n}\n\n.rows__header .span__color,\n.color__container {\n  width: 40px;\n  display: flex;\n  justify-content: center;\n}\n\n.rows__container .row__color {\n  width: 20px;\n  height: 20px;\n  border-radius: 20px;\n}\n\n.row__wins,\n.row__time {\n  width: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  margin-left: 20px;\n  gap: 5px;\n}\n","",{version:3,sources:["webpack://./src/styles/winners.css"],names:[],mappings:"AAAA;;EAEE,WAAW;EACX,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,qBAAqB;EACrB,kCAAkC;AACpC;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,qCAAqC;AACvC;;AAEA;EACE,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,YAAY;EACZ,iBAAiB;EACjB,QAAQ;AACV;;AAEA;;EAEE,WAAW;EACX,aAAa;EACb,uBAAuB;AACzB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,mBAAmB;AACrB;;AAEA;;EAEE,WAAW;EACX,aAAa;EACb,mBAAmB;EACnB,yBAAyB;EACzB,iBAAiB;EACjB,QAAQ;AACV",sourcesContent:[".table__row,\n.table__header {\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  /* padding: 10px 0; */\n  border-top: 1px solid var(--white);\n}\n\n.table__header span {\n  opacity: 0.5;\n}\n\n.table__row:last-child {\n  border-bottom: 1px solid var(--white);\n}\n\n.table span {\n  display: flex;\n  font-size: 14px;\n}\n\n.row__number {\n  width: 30px;\n}\n\n.row__car {\n  display: flex;\n  align-items: center;\n  flex-grow: 1;\n  margin-left: 20px;\n  gap: 5px;\n}\n\n.rows__header .span__color,\n.color__container {\n  width: 40px;\n  display: flex;\n  justify-content: center;\n}\n\n.rows__container .row__color {\n  width: 20px;\n  height: 20px;\n  border-radius: 20px;\n}\n\n.row__wins,\n.row__time {\n  width: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  margin-left: 20px;\n  gap: 5px;\n}\n"],sourceRoot:""}]);const s=i},3645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t=n(e);return e[2]?"@media ".concat(e[2]," {").concat(t,"}"):t})).join("")},e.i=function(n,t,a){"string"==typeof n&&(n=[[null,n,""]]);var o={};if(a)for(var r=0;r<this.length;r++){var i=this[r][0];null!=i&&(o[i]=!0)}for(var s=0;s<n.length;s++){var A=[].concat(n[s]);a&&o[A[0]]||(t&&(A[2]?A[2]="".concat(t," and ").concat(A[2]):A[2]=t),e.push(A))}},e}},4015:n=>{function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,a=new Array(e);t<e;t++)a[t]=n[t];return a}n.exports=function(n){var t,a,o=(a=4,function(n){if(Array.isArray(n))return n}(t=n)||function(n,e){var t=n&&("undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"]);if(null!=t){var a,o,r=[],i=!0,s=!1;try{for(t=t.call(n);!(i=(a=t.next()).done)&&(r.push(a.value),!e||r.length!==e);i=!0);}catch(n){s=!0,o=n}finally{try{i||null==t.return||t.return()}finally{if(s)throw o}}return r}}(t,a)||function(n,t){if(n){if("string"==typeof n)return e(n,t);var a=Object.prototype.toString.call(n).slice(8,-1);return"Object"===a&&n.constructor&&(a=n.constructor.name),"Map"===a||"Set"===a?Array.from(n):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?e(n,t):void 0}}(t,a)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),r=o[1],i=o[3];if(!i)return r;if("function"==typeof btoa){var s=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),A="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),c="/*# ".concat(A," */"),d=i.sources.map((function(n){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(n," */")}));return[r].concat(d).concat([c]).join("\n")}return[r].join("\n")}},1667:n=>{n.exports=function(n,e){return e||(e={}),"string"!=typeof(n=n&&n.__esModule?n.default:n)?n:(/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n)}},4643:(n,e,t)=>{t.r(e),t.d(e,{default:()=>i});var a=t(3379),o=t.n(a),r=t(3771);o()(r.Z,{insert:"head",singleton:!1});const i=r.Z.locals||{}},3379:(n,e,t)=>{var a,o=function(){var n={};return function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}n[e]=t}return n[e]}}(),r=[];function i(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function s(n,e){for(var t={},a=[],o=0;o<n.length;o++){var s=n[o],A=e.base?s[0]+e.base:s[0],c=t[A]||0,d="".concat(A," ").concat(c);t[A]=c+1;var l=i(d),p={css:s[1],media:s[2],sourceMap:s[3]};-1!==l?(r[l].references++,r[l].updater(p)):r.push({identifier:d,updater:E(p,e),references:1}),a.push(d)}return a}function A(n){var e=document.createElement("style"),a=n.attributes||{};if(void 0===a.nonce){var r=t.nc;r&&(a.nonce=r)}if(Object.keys(a).forEach((function(n){e.setAttribute(n,a[n])})),"function"==typeof n.insert)n.insert(e);else{var i=o(n.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(e)}return e}var c,d=(c=[],function(n,e){return c[n]=e,c.filter(Boolean).join("\n")});function l(n,e,t,a){var o=t?"":a.media?"@media ".concat(a.media," {").concat(a.css,"}"):a.css;if(n.styleSheet)n.styleSheet.cssText=d(e,o);else{var r=document.createTextNode(o),i=n.childNodes;i[e]&&n.removeChild(i[e]),i.length?n.insertBefore(r,i[e]):n.appendChild(r)}}function p(n,e,t){var a=t.css,o=t.media,r=t.sourceMap;if(o?n.setAttribute("media",o):n.removeAttribute("media"),r&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleSheet)n.styleSheet.cssText=a;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(a))}}var u=null,g=0;function E(n,e){var t,a,o;if(e.singleton){var r=g++;t=u||(u=A(e)),a=l.bind(null,t,r,!1),o=l.bind(null,t,r,!0)}else t=A(e),a=p.bind(null,t,e),o=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)};return a(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;a(n=e)}else o()}}n.exports=function(n,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===a&&(a=Boolean(window&&document&&document.all&&!window.atob)),a));var t=s(n=n||[],e);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var a=0;a<t.length;a++){var o=i(t[a]);r[o].references--}for(var A=s(n,e),c=0;c<t.length;c++){var d=i(t[c]);0===r[d].references&&(r[d].updater(),r.splice(d,1))}t=A}}}},7840:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.WINNERS_LIMIT=e.GARAGE_LIMIT=e.ENGINE_URL=e.WINNERS_URL=e.GARAGE_URL=e.URL=void 0,e.URL="http://127.0.0.1:3000",e.GARAGE_URL=`${e.URL}/garage`,e.WINNERS_URL=`${e.URL}/winners`,e.ENGINE_URL=`${e.URL}/engine`,e.GARAGE_LIMIT=7,e.WINNERS_LIMIT=10},737:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.deleteCarAPI=e.updateCarAPI=e.createCarAPI=void 0;const a=t(7840);e.createCarAPI=async function(n){const e=await fetch(`${a.GARAGE_URL}`,{method:"POST",body:JSON.stringify(n),headers:{"Content-Type":"application/json"}});return await e.json()},e.updateCarAPI=async function(n,e){const t=await fetch(`${a.GARAGE_URL}/${n}`,{method:"PUT",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}});return await t.json()},e.deleteCarAPI=async function(n){return(await fetch(`${a.GARAGE_URL}/${n}`,{method:"DELETE"})).json()}},2304:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.deleteWinnerAPI=e.updateWinnerAPI=e.saveWinnerAPI=void 0;const a=t(7840);e.saveWinnerAPI=async function(n){const e=await fetch(`${a.WINNERS_URL}`,{method:"POST",body:JSON.stringify(n),headers:{"Content-Type":"application/json"}});return await e.json()},e.updateWinnerAPI=async function(n,e){const t=await fetch(`${a.WINNERS_URL}/${n}`,{method:"PUT",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}});return await t.json()},e.deleteWinnerAPI=async function(n){return(await fetch(`${a.WINNERS_URL}/${n}`,{method:"DELETE"})).json()}},7052:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.driveCarAPI=e.stopCarAPI=e.startCarAPI=void 0;const a=t(7840);e.startCarAPI=async function(n){const e=await fetch(`${a.ENGINE_URL}?id=${n}&status=started`,{method:"PATCH"});return await e.json()},e.stopCarAPI=async function(n){const e=await fetch(`${a.ENGINE_URL}?id=${n}&status=stopped`,{method:"PATCH"});return await e.json()},e.driveCarAPI=async function(n){const e=await fetch(`${a.ENGINE_URL}?id=${n}&status=drive`,{method:"PATCH"}).catch();return 200!==e.status?{success:!1}:{...await e.json()}}},7815:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getCarAPI=e.getCarsAPI=void 0;const a=t(7840);e.getCarsAPI=async function(n=1){const e=await fetch(`${a.GARAGE_URL}?_page=${n}&_limit=${a.GARAGE_LIMIT}`),t=await e.json(),o=e.headers.get("X-Total-Count");if(!o)throw Error("Couldn't get data from X-Total-Count header.");return{items:t,count:o}},e.getCarAPI=async function(n){const e=await fetch(`${a.GARAGE_URL}/${n}`);return await e.json()}},467:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getWinnerAPI=e.getWinnersAPI=void 0;const a=t(7840);e.getWinnersAPI=async function({page:n,sort:e="id",order:t="DESC"}){const o=`${a.WINNERS_URL}?_page=${n}&_limit=${a.WINNERS_LIMIT}&_sort=${e}&_order=${t}`,r=await fetch(o),i=await r.json(),s=r.headers.get("X-Total-Count");if(!s)throw Error("Couldn't get total winners.");return{cars:i,count:s}},e.getWinnerAPI=async function(n){const e=await fetch(`${a.WINNERS_URL}/${n}`);return await e.json()}},1769:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.renderApp=void 0;const a=t(3008),o=t(6447),r=t(7311),i=t(3518);e.renderApp=function(){const n=(0,a.createHeader)(),e=(0,r.createMain)(),t=(0,o.createFooter)(),s=(0,i.createWinPopup)();document.body.append(n,e,t,s)}},6447:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createFooter=void 0;const a=t(6479);e.createFooter=function(){const n=(0,a.createElement)("footer",[".footer"]),e=(0,a.createElement)("footer",[".footer__container"]),t=(0,a.createElement)("div",[".footer__info"]),o=(0,a.createElement)("div",[".footer__info"]),r=(0,a.createElement)("span",[],"Async Race,"),i=(0,a.createLink)("RS School (2023)","https://rs.school/"),s=(0,a.createLink)("Here East","https://github.com/HereEast");return t.append(r,i),o.append(s),e.append(t,o),n.append(e),n}},1706:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createBasicForm=void 0;const a=t(6479);e.createBasicForm=function(n){const e=(0,a.createElement)("div",[".form__container"]),t=(0,a.createInput)("text",n);t.placeholder="Car name...";const o=(0,a.createInput)("color",n);o.value="#f6b73c";const r=(0,a.createButton)(n,[`.button__${n}`]);return e.append(t,o,r),e}},7163:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createHeaderForms=e.createUpdateForm=e.createCreateForm=void 0;const a=t(6479),o=t(1706);function r(){const n=(0,a.createElement)("form",[".form__create"]),e=(0,o.createBasicForm)("create"),t=(0,a.createButton)("generate",[".button__generate"]);t.textContent="Generate Cars";const r=(0,a.createElement)("span");return n.append(e,r,t),n}function i(){const n=(0,a.createElement)("form",[".form__update"]),e=(0,o.createBasicForm)("update"),t=(0,a.createButton)("cancel",[".button__cancel"]),r=(0,a.createElement)("h2",[],"Edit car ⚙️");return e.append(t),n.append(r,e),n}e.createCreateForm=r,e.createUpdateForm=i,e.createHeaderForms=function(){const n=(0,a.createElement)("div",[".forms__container"]),e=r(),t=i();return n.append(e,t),n}},3008:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createHeader=void 0;const a=t(6479),o=t(8021),r=t(7163);e.createHeader=function(){const n=(0,a.createElement)("header",[".header"]),e=(0,a.createElement)("div",[".header__container"]),t=(0,o.createHeaderButtons)(),i=(0,r.createHeaderForms)();return e.append(t,i),n.append(e),n}},8021:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createHeaderButtons=void 0;const a=t(6479);e.createHeaderButtons=function(){const n=(0,a.createElement)("div",[".header__buttons"]),e=(0,a.createElement)("span",[".bubble"]),t=(0,a.createButton)("garage",[".button__view"]),o=(0,a.createButton)("winners",[".button__view"]);return n.append(e,t,o),n}},7311:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createMain=void 0;const a=t(6479),o=t(3865),r=t(471);e.createMain=function(){const n=(0,a.createElement)("main",[".main"]),e=(0,a.createElement)("div",[".main__container"]),t=(0,o.createViewHeader)(),i=(0,a.createElement)("div",[".view__body"]),s=(0,r.createPagination)();return e.append(t,i,s),n.append(e),n}},4403:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createCountElement=void 0;const a=t(6479);e.createCountElement=function(n=0){const e=(0,a.createElement)("div",[".view__count"]),t=(0,a.createElement)("span",[],"("),o=(0,a.createElement)("span",[],")"),r=(0,a.createElement)("span",[".count"],String(n));return e.append(t,r,o),e}},9751:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createGarageButtons=void 0;const a=t(6479);e.createGarageButtons=function(){const n=(0,a.createElement)("div",[".view__buttons"]),e=(0,a.createButton)("race",[".button__race"]),t=(0,a.createButton)("reset",[".button__reset"]);return n.append(e,t),n}},3865:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createViewHeader=void 0;const a=t(6479),o=t(4403),r=t(9751);e.createViewHeader=function(){const n=(0,a.createElement)("div",[".view__header"]),e=(0,a.createElement)("div",[".view__title"]),t=(0,a.createElement)("h2",[".title"],""),i=(0,o.createCountElement)(),s=(0,r.createGarageButtons)();return e.append(t,i),n.append(e,s),n}},471:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createPagination=void 0;const a=t(6479);e.createPagination=function(){const n=(0,a.createElement)("div",[".pagination"]),e=(0,a.createElement)("div",[".page__container"]),t=(0,a.createElement)("span",[],"Page"),o=(0,a.createElement)("span",[".page--current"],"1"),r=(0,a.createElement)("span",[],"of"),i=(0,a.createElement)("span",[".page--total"],""),s=(0,a.createElement)("div",[".pages__buttons"]),A=(0,a.createButton)("prev",[".button__prev",".button__page"]),c=(0,a.createButton)("next",[".button__next",".button__page"]);return s.append(A,c),e.append(t,o,r,i),n.append(e,s),n}},3518:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createWinPopup=void 0;const a=t(6479);e.createWinPopup=function(){const n=(0,a.createElement)("div",[".popup"]),e=(0,a.createElement)("div",[".popup__container"]),t=(0,a.createElement)("div",[".popup__content"]),o=(0,a.createElement)("span",[".popup__winner"],"Winner"),r=(0,a.createElement)("span",[".popup__message"],"won the race in "),i=(0,a.createElement)("span",[".popup__time"],"2.345 sec");return r.append(i),t.append(o,r),e.append(t),n.append(e),n}},4652:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.initPagination=e.initListeners=void 0;const a=t(3834),o=t(5751),r=t(9802),i=t(4763),s=t(61),A=t(8986),c=t(8063),d=t(4306),l=t(5944),p=t(7613);e.initListeners=function(){const n=(0,a.getElement)("#button__garage"),e=(0,a.getElement)("#button__winners"),t=(0,a.getElement)(".button__create"),d=(0,a.getElement)(".button__cancel"),p=(0,a.getElement)(".button__update"),u=(0,a.getElement)(".button__generate"),g=(0,a.getElement)(".button__reset"),E=(0,a.getElement)(".button__race");n.addEventListener("click",o.renderGarageView),e.addEventListener("click",r.renderWinnersView),t.addEventListener("click",i.handleCreateCar),d.addEventListener("click",s.cancelUpdate),p.addEventListener("click",A.handleUpdate),u.addEventListener("click",c.handleGenerate),g.addEventListener("click",l.handleReset),E.addEventListener("click",l.handleRace)},e.initPagination=function(n){const e=(0,a.getElement)(".button__prev"),t=(0,a.getElement)(".button__next");"garage"===n&&(e.removeEventListener("click",p.handleWinnersPages),t.removeEventListener("click",p.handleWinnersPages),e.addEventListener("click",d.handleGaragePages),t.addEventListener("click",d.handleGaragePages)),"winners"===n&&(e.removeEventListener("click",d.handleGaragePages),t.removeEventListener("click",d.handleGaragePages),e.addEventListener("click",p.handleWinnersPages),t.addEventListener("click",p.handleWinnersPages))}},6479:(n,e)=>{function t(n,e,t){const a=document.createElement(n);if(!(a instanceof HTMLElement))throw Error(`Couldn't create HTML element ${n}`);if(e?.length){const n=e.map((n=>n.slice(1)));a.classList.add(...n)}return t&&(a.textContent=t),a}Object.defineProperty(e,"__esModule",{value:!0}),e.createSVG=e.createLink=e.createInput=e.createButton=e.createElement=void 0,e.createElement=t,e.createButton=function(n,e){const a=t("button",e,n);if(!(a instanceof HTMLButtonElement))throw Error(`Couldn't create button ${n}`);if(e&&!e.includes(".button__track")){const e=`button__${n.toLowerCase()}`;a.id=e}return a},e.createInput=function(n,e){const a=t("input",[`.input-${n}`]);if(!(a instanceof HTMLInputElement))throw Error("Failed to create HTMLInput Element...");return a.id=`input-${n}__${e}`,a.type=n,a.autocomplete="off",a},e.createLink=function(n,e,a){const o=t("a",a,n);if(!(o instanceof HTMLAnchorElement))throw Error("Failed to create a <a> element...");return o.href=e,o},e.createSVG=function(n){const e=t("div",[n.divClass]),a=document.createElementNS(n.ns,"svg");return a.setAttribute("width",n.width),a.setAttribute("height",n.height),n.color&&a instanceof SVGElement&&(a.style.backgroundColor=n.color),e.append(a),e}},3834:(n,e)=>{function t(n){const e=document.querySelector(n);if(!(e&&e instanceof HTMLElement))throw Error(`${n} is not found...`);return e}Object.defineProperty(e,"__esModule",{value:!0}),e.getFormInputs=e.getElementsArray=e.getElement=e.getClosest=e.getTarget=void 0,e.getTarget=function(n){const e=n.target;if(!e)throw Error("Target element is not found...");if(!(e instanceof HTMLElement))throw Error("Target is not an HTMLElement...");return e},e.getClosest=function(n,e){const t=n.closest(e);if(!(t&&t instanceof HTMLElement))throw Error(`${e} element is not found...`);return t},e.getElement=t,e.getElementsArray=function(n){const e=Array.from(document.querySelectorAll(n));if(!e)throw Error(`${n} elements are not found...`);return e.forEach((n=>{if(!(n instanceof HTMLElement))throw Error("Elements are not an array of HTMLElement...")})),e},e.getFormInputs=function(n){const e=t(`${n} .input-text`),a=t(`${n} .input-color`);if(!(e instanceof HTMLInputElement))throw Error("Text input isn't found.");if(!(a instanceof HTMLInputElement))throw Error("Color input isn't found.");return{inputText:e,inputColor:a}}},7073:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getCurrentView=e.saveCurrentView=e.getTargetID=e.toggleDisable=e.getRandomIndex=e.cleanContent=void 0;const a=t(3834);e.cleanContent=function(n){[...(n||(0,a.getElement)(".view__body")).children].forEach((n=>{n.remove()}))},e.getRandomIndex=function(n){return Math.floor(Math.random()*n.length)},e.toggleDisable=function(n){const e=n;e instanceof HTMLButtonElement&&(e.disabled=!e.disabled)},e.getTargetID=function(n){const e=(0,a.getTarget)(n),t=(0,a.getClosest)(e,".track").id.split("--").at(-1);if(!t)throw Error("Couldn't get target ID...");return t},e.saveCurrentView=function(n="garage"){document.body.className="",document.body.classList.add(n),localStorage.setItem("view",n)},e.getCurrentView=function(){return window.localStorage.getItem("view")??""}},947:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.isEnoughSpace=e.isLastPage=e.isFirstPage=e.getCurrentPage=e.isLastTrack=void 0;const a=t(3834),o=t(7840),r=t(7073);function i(){const n=(0,r.getCurrentView)(),e=localStorage.getItem(`${n}-page`)||1;return Number(e)}e.isLastTrack=function(){return 1===(0,a.getElementsArray)(".track").length},e.getCurrentPage=i,e.isFirstPage=function(){return 1===i()},e.isLastPage=function(){const n=(0,r.getCurrentView)();return localStorage.getItem(`${n}-page`)===localStorage.getItem(`${n}-totalPages`)},e.isEnoughSpace=function(){return(0,a.getElementsArray)(".track").length<o.GARAGE_LIMIT}},1400:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.updateTotalCars=e.setTotalCount=void 0;const a=t(3834),o=t(7073);e.setTotalCount=function(n){const e=(0,o.getCurrentView)();(0,a.getElement)(".count").textContent=String(n),localStorage.setItem(`total--${e}`,String(n))},e.updateTotalCars=function(n){const e=(0,a.getElement)(".count"),t=`${Number(e.textContent)+n}`;e.textContent=t,localStorage.setItem("total--garage",t)}},586:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.toggleViewButton=void 0;const a=t(3834);e.toggleViewButton=function(n){const e=(0,a.getElement)(".bubble"),t=(0,a.getElementsArray)(".button__view");t.forEach((n=>n.classList.remove("active")));const o=t.find((e=>e.id===`button__${n}`));if(!o)throw Error("Couldn't find a View Button.");o.classList.add("active"),o.textContent?.includes("garage")?e.classList.remove("winners"):e.classList.add("winners")}},2612:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.toggleUIElements=e.togglePageTitle=e.toggleFormsDisplay=void 0;const a=t(3834),o=t(586);function r(n){const e=(0,a.getElement)(".forms__container");"garage"===n?e.classList.remove(".forms--hidden".slice(1)):e.classList.add(".forms--hidden".slice(1))}function i(n,e=0){(0,a.getElement)(".title").textContent=`${n[0].toUpperCase()}${n.slice(1)}`,(0,a.getElement)(".count").textContent=String(e);const t=(0,a.getElement)(".view__buttons");"winners"===n?t.classList.add("hidden"):t.classList.remove("hidden")}e.toggleFormsDisplay=r,e.togglePageTitle=i,e.toggleUIElements=function(n){(0,o.toggleViewButton)(n),r(n),i(n)}},4763:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleCreateCar=void 0;const a=t(3834),o=t(737),r=t(6232),i=t(1400),s=t(5568),A=t(947);e.handleCreateCar=async function(n){n.preventDefault();const{inputText:e,inputColor:t}=(0,a.getFormInputs)(".form__create"),c=e.value,d=t.value;if(!c)return void e.focus();const l=await(0,o.createCarAPI)({name:c,color:d});(0,A.isLastPage)()&&(0,A.isEnoughSpace)()&&(0,s.appendTrack)(l),(0,i.updateTotalCars)(1),(0,r.setTotalPages)(),(0,r.togglePageButtons)(),e.value="",console.log("Create:",localStorage)}},7300:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.carMakes=void 0,e.carMakes=[{make:"BMW",models:["M3","M5","M5 CS","i4 M50 xDrive","X6 M","M8 Competition","Z4 M40i"]},{make:"Porsche",models:["Sally Special","Cayman S","Cayman Spyder RS","Carrera","Carrera 4S","Carrera GTS","911 Turbo","Taycan GTS","Panamera 4S","Cayenne Turbo GT"]},{make:"Mercedes",models:["SL 63 Roadster","GLE 53 Coupe","CLA 35 Coupe","GT 43 Coupe","AMG One","S-Class","CLS"]},{make:"Dodge",models:["Charger R/T","Challenger SRT-8","Charger Hellacious"]},{make:"Ferrari",models:["GTS","SF90 Spider","Roma"]},{make:"Lamborghini",models:["Auténtica","SC20 Roadster","Urus Performante","Huracán","Revuelto"]},{make:"Bugatti",models:["Chiron Profilée","Chiron","Mistral","Centodieci","Veyron","EB110 SS"]},{make:"McLaren",models:["X-1","MSO R","GT","600LT","750S","765LT","Artura"]},{make:"Jaguar",models:["F-Type R75","XF","I-Pace"]},{make:"Maserati",models:["Ghibli GT","MC20"]},{make:"Aston Martin",models:["Victor","Vantage GT12","V8 Vantage","DBS Volante"]},{make:"Ford",models:["F-150 Raptor","Mustang","Bronco Raptor"]}]},8063:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleGenerate=e.generateCars=void 0;const a=t(737),o=t(3340),r=t(9956),i=t(5751),s=t(947),A=t(6232),c=t(1400);async function d(n){if(n>0){const e=(0,r.getRandomMake)(),t=(0,o.getRandomColor)();await(0,a.createCarAPI)({name:e,color:t}),await d(n-1)}}e.generateCars=d,e.handleGenerate=async function(n){if(n.preventDefault(),await d(100),(0,s.isEnoughSpace)()){const n=(0,s.getCurrentPage)();await(0,i.updateGarage)(n)}else(0,c.updateTotalCars)(100),(0,A.setTotalPages)(),(0,A.togglePageButtons)();console.log("Generate:",localStorage)}},3340:(n,e)=>{function t(){return Math.ceil(255*Math.random()).toString(16).padStart(2,"0")}Object.defineProperty(e,"__esModule",{value:!0}),e.getRandomColor=e.getColorValue=void 0,e.getColorValue=t,e.getRandomColor=function(){return`#${t()}${t()}${t()}`}},9956:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getRandomMake=void 0;const a=t(7300),o=t(7073);e.getRandomMake=function(){const n=(0,o.getRandomIndex)(a.carMakes),{make:e,models:t}=a.carMakes[n];return`${e} ${t[(0,o.getRandomIndex)(t)]}`}},1272:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.startAnimation=e.controlDrive=e.race=e.animation=void 0;const a=t(7052),o=t(736),r=t(3834),i=t(7599);async function s(n){const{success:t}=await(0,a.driveCarAPI)(Number(n));return t?(console.log("Finish!",n),cancelAnimationFrame(e.animation.id)):cancelAnimationFrame(e.animation.id),t}e.animation={id:0},e.race={winner:{id:"",time:0},isRace:!1,reset:!1},e.controlDrive=s,e.startAnimation=async function(n){const t=(0,r.getElement)(`#car--${n}`),a=await(0,o.getDriveTime)(n),A=(0,o.getDistance)()-40,c=a/1e3*80;let d=t.offsetLeft;const l=(A-d)/c;!function o(){d+=l,t.style.transform=`translate(${d}px)`,d<=A&&(e.animation.id=requestAnimationFrame(o)),d>=A&&(console.log("Finish data:",e.race.winner,e.race.isRace),!e.race.winner.id&&e.race.isRace&&(0,i.handleWinner)(n,a),t.style.transform=`translate(${A}px)`)}(),await s(n)}},5944:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleRace=e.handleReset=e.handleStop=e.stopCar=e.handleStart=e.someCar=void 0;const a=t(7073),o=t(7052),r=t(3834),i=t(736),s=t(7599),A=t(1272),c=t(947),d=t(5751),l=t(6232),p=t(7047);async function u(n){const e=(0,r.getElement)(`#car--${n}`);e.style.transform="translate(0px)",await(0,o.stopCarAPI)(n),e.classList.remove(".car--driving".slice(1))}e.someCar={isMoving:!1},e.handleStart=async function(n){const t=(0,a.getTargetID)(n),o=(0,r.getElement)(`#car--${t}`);o.classList.contains(".car--driving".slice(1))||(o.classList.add(".car--driving".slice(1)),e.someCar.isMoving=!0,(0,A.startAnimation)(t),(0,i.toggleControls)(n))},e.stopCar=u,e.handleStop=async function(n){const t=Number((0,a.getTargetID)(n));e.someCar.isMoving=!1,cancelAnimationFrame(A.animation.id),await u(t),(0,i.toggleControls)(n)},e.handleReset=async function(n){n.preventDefault(),(0,s.cleanWinner)(),(0,i.moveToStart)(),cancelAnimationFrame(A.animation.id),(0,i.disableButtons)(["race","create","generate"],!1);const e=(0,c.getCurrentPage)();await(0,d.updateGarage)(e),console.log("Reset")},e.handleRace=async function(n){n.preventDefault(),(0,s.cleanWinner)(),(0,i.moveToStart)(),cancelAnimationFrame(A.animation.id),A.race.isRace=!0;const e=["race","start","edit","delete","page","create","generate"];(0,i.disableButtons)(e,!0);const t=(0,i.getCarsIds)().map((async n=>await(0,A.startAnimation)(n)));await Promise.all(t),(0,p.hidePopup)(),(0,i.disableButtons)(e,!1),(0,l.togglePageButtons)(),A.race.isRace=!1,console.log("Race",A.race.isRace)}},736:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.disableButtons=e.disableButton=e.getCarsIds=e.toggleControls=e.getSiblingButton=e.getDistance=e.getDriveTime=e.moveToStart=void 0;const a=t(7052),o=t(3834),r=t(7073);function i(n){const e=n.classList.contains(".button__stop".slice(1))?n.previousElementSibling:n.nextElementSibling;if(!(e instanceof HTMLButtonElement))throw Error("Couldn't find a sibling button...");return e}function s(n,e){[...(0,o.getElementsArray)(`.button__${n}`)].forEach((n=>{n instanceof HTMLButtonElement&&(n.disabled=e)}))}e.moveToStart=function(){[...(0,o.getElementsArray)(".car")].forEach((n=>{n.style.transform="translate(0px)"}))},e.getDriveTime=async function(n){const e=await(0,a.startCarAPI)(Number(n));return e.distance/e.velocity},e.getDistance=function(){const n=document.body.clientWidth;return n-(n>550?40:30)},e.getSiblingButton=i,e.toggleControls=function(n){const e=(0,o.getTarget)(n),t=i(e);(0,r.toggleDisable)(e),(0,r.toggleDisable)(t)},e.getCarsIds=function(){const n=[...(0,o.getElementsArray)(".track")].map((n=>n.id.split("--").at(-1)||""));if(!n.length)throw Error("Can't get current cars' ids.");return n},e.disableButton=s,e.disableButtons=function(n,e){n.forEach((n=>{s(n,e)}))}},5689:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getSelectedCar=void 0,e.getSelectedCar=function(){const n=localStorage.getItem("editItem");if(!n)throw Error("Couldn't get 'editItem' from Local Storage.");return JSON.parse(n)}},7833:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.hideUpdateForm=e.showUpdateForm=e.setUpdateInputs=void 0;const a=t(3834);function o(n){const{inputText:e,inputColor:t}=(0,a.getFormInputs)(".form__update");e.value=n.name,t.value=n.color}e.setUpdateInputs=o,e.showUpdateForm=function(n){o(n),console.log(n);const e=(0,a.getElement)(".form__update");e.classList.add(".form__update--open".slice(1)),e.dataset.editId=String(n.id)},e.hideUpdateForm=function(n){const e=(0,a.getTarget)(n);e.classList.contains("button__edit")||"BUTTON"===e.tagName&&(0,a.getElement)(".form__update").classList.remove(".form__update--open".slice(1))}},8986:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleUpdate=void 0;const a=t(3834),o=t(7833),r=t(737),i=t(5626),s=t(5689);e.handleUpdate=async function(n){n.preventDefault();const{inputText:e,inputColor:t}=(0,a.getFormInputs)(".form__update"),A=(0,s.getSelectedCar)();if(!e.value.trim())return void e.focus();if(e.value===A.name&&t.value===A.color)return void(0,o.hideUpdateForm)(n);const c=A.id,d={name:e.value,color:t.value};await(0,r.updateCarAPI)(c,d),(0,i.updateCarUI)(c,d),(0,o.hideUpdateForm)(n)}},61:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.cancelUpdate=e.startUpdate=void 0;const a=t(7073),o=t(7815),r=t(7833);e.startUpdate=async function(n){const e=(0,a.getTargetID)(n),t=await(0,o.getCarAPI)(e);(0,r.showUpdateForm)(t),localStorage.setItem("editItem",JSON.stringify(t))},e.cancelUpdate=function(n){n.preventDefault(),(0,r.hideUpdateForm)(n),localStorage.setItem("editItem","")}},5626:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.updateCarUI=void 0,e.updateCarUI=function(n,e){const t=document.getElementById(`track--${n}`),a=t?.querySelector(`#car--${n} svg`),o=t?.querySelector(".car__name");if(!(a&&a instanceof SVGElement))throw Error("Couldn't get car SVG element.");if(!o)throw Error("Couldn't get a span with car name.");a.style.backgroundColor=e.color,o.textContent=e.name}},4306:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleGaragePages=void 0;const a=t(3834),o=t(947),r=t(5751),i=t(1272);e.handleGaragePages=async function(n){const e=(0,a.getTarget)(n),t=e.id===".button__next".slice(1),s=e.id===".button__prev".slice(1);if(t&&(0,o.isLastPage)())return void console.log("Last page");if(s&&(0,o.isFirstPage)())return void console.log("First page");const A=(0,o.getCurrentPage)(),c=t?A+1:A-1;await(0,r.updateGarage)(c),console.log("Is race:",i.race)}},6232:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.setPagination=e.togglePageButtons=e.setCurrentPage=e.setTotalPages=e.getTotalPages=void 0;const a=t(7840),o=t(3834),r=t(947),i=t(736),s=t(7073);function A(){const n=(0,s.getCurrentView)(),e=Number(localStorage.getItem(`total--${n}`));return"garage"===n?Math.ceil(e/a.GARAGE_LIMIT):Math.ceil(e/a.WINNERS_LIMIT)}function c(){const n=(0,s.getCurrentView)(),e=(0,o.getElement)(".page--total"),t=String(A());e.textContent=t,localStorage.setItem(`${n}-totalPages`,t)}function d(n){const e=(0,s.getCurrentView)(),t=n||1;(0,o.getElement)(".page--current").textContent=String(t),localStorage.setItem(`${e}-page`,String(t))}function l(){(0,i.disableButton)("page",!1),1===(0,r.getCurrentPage)()&&(0,i.disableButton)("prev",!0),(0,r.isLastPage)()&&(0,i.disableButton)("next",!0)}e.getTotalPages=A,e.setTotalPages=c,e.setCurrentPage=d,e.togglePageButtons=l,e.setPagination=function(n){d(n),c(),l()}},7047:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.showPopup=e.hidePopup=void 0;const a=t(3834);e.hidePopup=function(n){(n||(0,a.getElement)(".popup")).classList.remove(".popup--open".slice(1))},e.showPopup=function(n){const e=(0,a.getElement)(".popup"),t=(0,a.getElement)(".popup__winner"),o=(0,a.getElement)(".popup__time"),r=(0,a.getElement)(`#car__name--${n.id}`).textContent,i=Number(n.time/1e3).toFixed(2);t.textContent=r,o.textContent=`${i} sec`,e.classList.add(".popup--open".slice(1))}},5751:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.renderGarageView=e.updateGarage=void 0;const a=t(7815),o=t(2612),r=t(947),i=t(6232),s=t(7073),A=t(1400),c=t(5568),d=t(4652);async function l(n){const e=await(0,a.getCarsAPI)(n);(0,c.appendTracks)(e),(0,A.setTotalCount)(e.count),(0,i.setPagination)(n)}e.updateGarage=l,e.renderGarageView=async function(n){if(n&&"garage"===(0,s.getCurrentView)())return;(0,s.saveCurrentView)("garage"),(0,o.toggleUIElements)("garage"),(0,d.initPagination)("garage");const e=(0,r.getCurrentPage)();await l(e),console.log("🙂 Garage View")}},7744:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createTrackButtons=e.handleDelete=void 0;const a=t(6479),o=t(737),r=t(5751),i=t(7073),s=t(61),A=t(947),c=t(5944),d=t(7833),l=t(2304);async function p(n){if(1===(0,A.getCurrentPage)()&&(0,A.isLastTrack)())return;const e=(0,i.getTargetID)(n);await(0,o.deleteCarAPI)(e),await(0,l.deleteWinnerAPI)(e);const t=(0,A.getCurrentPage)(),a=(0,A.isLastTrack)()?t-1:t;await(0,r.updateGarage)(a),(0,d.hideUpdateForm)(n),console.log("Delete:",localStorage)}e.handleDelete=p,e.createTrackButtons=function(){const n=(0,a.createElement)("div",[".track__buttons"]),e=(0,a.createButton)("start",[".button__track",".button__start"]),t=(0,a.createButton)("stop",[".button__track",".button__stop"]),o=(0,a.createButton)("edit",[".button__track",".button__edit"]),r=(0,a.createButton)("delete",[".button__track",".button__delete"]);return o.addEventListener("click",s.startUpdate),r.addEventListener("click",p),e.addEventListener("click",c.handleStart),t.addEventListener("click",c.handleStop),t.disabled=!0,n.append(e,t,o,r),n}},5568:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.appendTracks=e.appendTrack=void 0;const a=t(3834),o=t(7073),r=t(3517);e.appendTrack=function(n){const e=(0,a.getElement)(".view__body"),t=(0,r.createTrack)(n);e.append(t)},e.appendTracks=function(n){const e=(0,a.getElement)(".view__body");return(0,o.cleanContent)(e),[...n.items].forEach((n=>{const t=(0,r.createTrack)(n);e.append(t)})),e}},3517:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createTrack=e.createTrackBody=e.createTrackHeader=void 0;const a=t(6479),o=t(7744),r="40px";function i(n){const e=(0,a.createElement)("div",[".track__header"]),t=(0,o.createTrackButtons)(),r=(0,a.createElement)("span",[".car__name"],n.name);return r.id=`${".car__name".slice(1)}--${n.id}`,e.append(t,r),e}function s(n){const e=(0,a.createElement)("div",[".track__body"]),t={divClass:".car",ns:"http://www.w3.org/2000/svg",width:r,height:r,color:n.color},o=(0,a.createSVG)(t);o.id=`car--${n.id}`;const i=(0,a.createElement)("div",[".flag"]);return e.append(o,i),e}e.createTrackHeader=i,e.createTrackBody=s,e.createTrack=function(n){const e=(0,a.createElement)("div",[".track"]);e.id=`track--${n.id}`;const t=(0,a.createElement)("div",[".track__container"]),o=i(n),r=s(n);return t.append(o,r),e.append(t),e}},7599:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleWinner=e.cleanWinner=void 0;const a=t(1272),o=t(7047),r=t(2304),i=t(467);e.cleanWinner=function(){a.race.winner.id="",a.race.winner.time=0,a.race.isRace=!1},e.handleWinner=async function(n,e){if(a.race.winner.id)return;const t={id:Number(n),win:1,time:Number(e)};(await(0,i.getWinnerAPI)(n)).id?await(0,r.updateWinnerAPI)(n,{win:1,time:e}):await(0,r.saveWinnerAPI)(t),a.race.winner.id=n,a.race.winner.time=e,(0,o.showPopup)(a.race.winner)}},7613:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleWinnersPages=void 0;const a=t(3834),o=t(947),r=t(7294),i=t(9802);e.handleWinnersPages=async function(n){const e=(0,a.getTarget)(n),t=e.id===".button__next".slice(1),s=e.id===".button__prev".slice(1);if(t&&(0,o.isLastPage)()||s&&(0,o.isFirstPage)())return;const A=(0,o.getCurrentPage)(),c=t?A+1:A-1,d=(0,r.getCurrentSort)(),{sort:l,order:p}=(0,r.getSortOrder)(d);await(0,i.updateWinners)({page:c,sort:l,order:p})}},9160:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.renderWinnersTable=e.appendRows=void 0;const a=t(7815),o=t(6479),r=t(3834),i=t(7073),s=t(4794),A=t(595);async function c(n){const e=(0,o.createElement)("div",[".rows__container"]);return n.forEach((async(n,t)=>{const o=await(0,a.getCarAPI)(String(n.id));if(!o.id)return;const r={color:o.color,name:o.name,id:o.id,win:n.win,time:Number((n.time/1e3).toFixed(2))},i=(0,A.createRow)(r,t);e.append(i)})),e}e.appendRows=c,e.renderWinnersTable=async function(n){const e=(0,r.getElement)(".view__body");(0,i.cleanContent)(e);const t=(0,o.createElement)("div",[".table"]),a=(0,s.createTableHeader)(),A=await c(n);return t.append(a,A),e.append(t),e}},9802:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.renderWinnersView=e.updateWinners=void 0;const a=t(7073),o=t(2612),r=t(947),i=t(467),s=t(9160),A=t(1400),c=t(4652),d=t(7294),l=t(6232);async function p(n){const{cars:e,count:t}=await(0,i.getWinnersAPI)(n);await(0,s.renderWinnersTable)(e),(0,A.setTotalCount)(t);const a=Number(n.page);(0,l.setPagination)(a)}e.updateWinners=p,e.renderWinnersView=async function(n){if(n&&"winners"===(0,a.getCurrentView)())return;(0,a.saveCurrentView)("winners"),(0,o.toggleUIElements)("winners"),(0,c.initPagination)("winners");const e=(0,r.getCurrentPage)(),t=(0,d.getCurrentSort)(),{sort:i,order:s}=(0,d.getSortOrder)(t);await p({page:e,sort:i,order:s}),console.log("🙂 Winner View")}},7294:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getCurrentSort=e.saveSortOption=e.getSortOrder=void 0,e.getSortOrder=function(n){return{sort:n,order:localStorage.getItem(`sort--${n}`)||"DESC"}},e.saveSortOption=function(n,e){localStorage.setItem(`sort--${n}`,e),localStorage.setItem("currentSort",n)},e.getCurrentSort=function(){return localStorage.getItem("currentSort")||"id"}},4794:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createTableHeader=e.sortWinners=void 0;const a=t(6479),o=t(7294),r=t(947),i=t(9802);async function s(n){const{sort:e,order:t}=(0,o.getSortOrder)(n),a="DESC"===t?"ASC":"DESC",s=(0,r.getCurrentPage)();(0,o.saveSortOption)(e,a),await(0,i.updateWinners)({page:s,sort:e,order:a})}e.sortWinners=s,e.createTableHeader=function(){const n=(0,a.createElement)("div",[".table__header"]),e=(0,a.createElement)("span",[".row__number"],"#"),t=(0,a.createElement)("span",[".row__color"],"Color"),o=(0,a.createElement)("div",[".row__car"]),r=(0,a.createElement)("span",[],"Car"),i=(0,a.createButton)("sort--ids",[".button__sort--ids"]);i.textContent="";const A=(0,a.createElement)("div",[".row__wins"]),c=(0,a.createElement)("span",[],"Wins"),d=(0,a.createButton)("sort--wins",[".button__sort--wins"]);d.textContent="";const l=(0,a.createElement)("div",[".row__time"]),p=(0,a.createElement)("span",[],"Time"),u=(0,a.createButton)("sort--time",[".button__sort--time"]);return u.textContent="",u.addEventListener("click",(()=>s("time"))),d.addEventListener("click",(()=>s("wins"))),i.addEventListener("click",(()=>s("id"))),o.append(r,i),A.append(c,d),l.append(p,u),n.append(e,t,o,A,l),n}},595:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createRow=void 0;const a=t(6479);e.createRow=function(n,e){const t=(0,a.createElement)("div",[".table__row"]);t.id=`track--${n.id}`;const o=(0,a.createElement)("span",[".row__number"],`${e+1}`),r=(0,a.createElement)("div",[".color__container"]),i=(0,a.createElement)("span",[".row__color"]);r.append(i);const s=(0,a.createElement)("span",[".row__car"],n.name),A=(0,a.createElement)("span",[".row__wins"],String(n.win)),c=(0,a.createElement)("span",[".row__time"],String(n.time));return i.style.backgroundColor=n.color,t.append(o,r,s,A,c),t}},6191:(n,e,t)=>{n.exports=t.p+"f184225b7b3184f4baf5.svg"},6140:(n,e,t)=>{n.exports=t.p+"fe22c9f7a75c10f13ff7.svg"},3233:(n,e,t)=>{n.exports=t.p+"69984fd172bcf5b02d1e.svg"},5960:(n,e,t)=>{n.exports=t.p+"3d70b8debbefafdfc11c.svg"},5197:(n,e,t)=>{n.exports=t.p+"87743b742844cc6930c4.svg"}},e={};function t(a){var o=e[a];if(void 0!==o)return o.exports;var r=e[a]={id:a,exports:{}};return n[a](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var a in e)t.o(e,a)&&!t.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:e[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var a=e.getElementsByTagName("script");if(a.length)for(var o=a.length-1;o>-1&&!n;)n=a[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{t(4643);const n=t(1769),e=t(4652),a=t(5751);(0,n.renderApp)(),(0,a.renderGarageView)(),window.addEventListener("DOMContentLoaded",(()=>{console.log("✅ DOM Loaded"),(0,e.initListeners)()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SUEsUUFBUSxZQUFhLEtBQ3BGOGUsRUFBb0J3QixFQUFJUCxDLEtDbEJ4QmpCLEVBQW9CeUIsUUFBS3RCLEUsTUNFekIsRUFBUSxNQUNSLE1BQU11QixFQUFRLEVBQVEsTUFDaEIxRixFQUFjLEVBQVEsTUFDdEJyTyxFQUFrQixFQUFRLE9BRWhDLEVBQUkrVCxFQUFNdlosY0FDVixFQUFJd0YsRUFBZ0JnQixvQkFFcEJqTixPQUFPZ04saUJBQWlCLG9CQUFvQixLQUN4QzhHLFFBQVFDLElBQUksaUJBQ1osRUFBSXVHLEVBQVl2TyxnQkFBZ0IsRyIsInNvdXJjZXMiOlsid2VicGFjazovL1JTIFNlbGVjdG9ycy8uL3NyYy9zdHlsZXMvY29tcG9uZW50cy9idXR0b25zLmNzcyIsIndlYnBhY2s6Ly9SUyBTZWxlY3RvcnMvLi9zcmMvc3R5bGVzL2NvbXBvbmVudHMvZm9ybXMuY3NzIiwid2VicGFjazovL1JTIFNlbGVjdG9ycy8uL3NyYy9zdHlsZXMvY29tcG9uZW50cy9pbnB1dC5jc3MiLCJ3ZWJwYWNrOi8vUlMgU2VsZWN0b3JzLy4vc3JjL3N0eWxlcy9jb21wb25lbnRzL3BhZ2luYXRpb24uY3NzIiwid2VicGFjazovL1JTIFNlbGVjdG9ycy8uL3NyYy9zdHlsZXMvY29tcG9uZW50cy90cmFjay5jc3MiLCJ3ZWJwYWNrOi8vUlMgU2VsZWN0b3JzLy4vc3JjL3N0eWxlcy9mb290ZXIuY3NzIiwid2VicGFjazovL1JTIFNlbGVjdG9ycy8uL3NyYy9zdHlsZXMvaGVhZGVyLmNzcyIsIndlYnBhY2s6Ly9SUyBTZWxlY3RvcnMvLi9zcmMvc3R5bGVzL2luZGV4LmNzcyIsIndlYnBhY2s6Ly9SUyBTZWxlY3RvcnMvLi9zcmMvc3R5bGVzL21haW4uY3NzIiwid2VicGFjazovL1JTIFNlbGVjdG9ycy8uL3NyYy9zdHlsZXMvcG9wdXAuY3NzIiwid2VicGFjazovL1JTIFNlbGVjdG9ycy8uL3NyYy9zdHlsZXMvc3R5bGVzLmNzcyIsIndlYnBhY2s6Ly9SUyBTZWxlY3RvcnMvLi9zcmMvc3R5bGVzL3ZhcmlhYmxlcy5jc3MiLCJ3ZWJwYWNrOi8vUlMgU2VsZWN0b3JzLy4vc3JjL3N0eWxlcy93aW5uZXJzLmNzcyIsIndlYnBhY2s6Ly9SUyBTZWxlY3RvcnMvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL1JTIFNlbGVjdG9ycy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9jc3NXaXRoTWFwcGluZ1RvU3RyaW5nLmpzIiwid2VicGFjazovL1JTIFNlbGVjdG9ycy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanMiLCJ3ZWJwYWNrOi8vUlMgU2VsZWN0b3JzLy4vc3JjL3N0eWxlcy9pbmRleC5jc3M/NjM0OSIsIndlYnBhY2s6Ly9SUyBTZWxlY3RvcnMvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vUlMgU2VsZWN0b3JzLy4vc3JjL3NjcmlwdHMvYXBpL2NvbnN0YW50cy50cyIsIndlYnBhY2s6Ly9SUyBTZWxlY3RvcnMvLi9zcmMvc2NyaXB0cy9hcGkvY3JlYXRlLWNhci50cyIsIndlYnBhY2s6Ly9SUyBTZWxlY3RvcnMvLi9zcmMvc2NyaXB0cy9hcGkvY3JlYXRlLXdpbm5lcnMudHMiLCJ3ZWJwYWNrOi8vUlMgU2VsZWN0b3JzLy4vc3JjL3NjcmlwdHMvYXBpL2RyaXZlLWNhci50cyIsIndlYnBhY2s6Ly9SUyBTZWxlY3RvcnMvLi9zcmMvc2NyaXB0cy9hcGkvZ2V0LWNhcnMudHMiLCJ3ZWJwYWNrOi8vUlMgU2VsZWN0b3JzLy4vc3JjL3NjcmlwdHMvYXBpL2dldC13aW5uZXJzLnRzIiwid2VicGFjazovL1JTIFNlbGVjdG9ycy8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvYXBwLnRzIiwid2VicGFjazovL1JTIFNlbGVjdG9ycy8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvZm9vdGVyL2Zvb3Rlci50cyIsIndlYnBhY2s6Ly9SUyBTZWxlY3RvcnMvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL2hlYWRlci9mb3JtLWJhc2ljLnRzIiwid2VicGFjazovL1JTIFNlbGVjdG9ycy8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvaGVhZGVyL2Zvcm1zLnRzIiwid2VicGFjazovL1JTIFNlbGVjdG9ycy8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci50cyIsIndlYnBhY2s6Ly9SUyBTZWxlY3RvcnMvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL2hlYWRlci92aWV3LWJ1dHRvbnMudHMiLCJ3ZWJwYWNrOi8vUlMgU2VsZWN0b3JzLy4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9tYWluL21haW4udHMiLCJ3ZWJwYWNrOi8vUlMgU2VsZWN0b3JzLy4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9tYWluL3BhZ2UtaGVhZGVyL2NvdW50LWVsZW1lbnQudHMiLCJ3ZWJwYWNrOi8vUlMgU2VsZWN0b3JzLy4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9tYWluL3BhZ2UtaGVhZGVyL2dhcmFnZS1idXR0b25zLnRzIiwid2VicGFjazovL1JTIFNlbGVjdG9ycy8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvbWFpbi9wYWdlLWhlYWRlci92aWV3LWhlYWRlci50cyIsIndlYnBhY2s6Ly9SUyBTZWxlY3RvcnMvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL21haW4vcGFnaW5hdGlvbi9wYWdpbmF0aW9uLnRzIiwid2VicGFjazovL1JTIFNlbGVjdG9ycy8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvbWFpbi9wb3B1cC9wb3B1cC50cyIsIndlYnBhY2s6Ly9SUyBTZWxlY3RvcnMvLi9zcmMvc2NyaXB0cy9saXN0ZW5lcnMudHMiLCJ3ZWJwYWNrOi8vUlMgU2VsZWN0b3JzLy4vc3JjL3NjcmlwdHMvdXRpbHMvY3JlYXRlLWVsZW1lbnQudHMiLCJ3ZWJwYWNrOi8vUlMgU2VsZWN0b3JzLy4vc3JjL3NjcmlwdHMvdXRpbHMvZ2V0LWVsZW1lbnQudHMiLCJ3ZWJwYWNrOi8vUlMgU2VsZWN0b3JzLy4vc3JjL3NjcmlwdHMvdXRpbHMvaGVscGVycy50cyIsIndlYnBhY2s6Ly9SUyBTZWxlY3RvcnMvLi9zcmMvc2NyaXB0cy91dGlscy9wYWdpbmF0aW9uLWhlbHBlcnMudHMiLCJ3ZWJwYWNrOi8vUlMgU2VsZWN0b3JzLy4vc3JjL3NjcmlwdHMvdXRpbHMvc2V0LXRvdGFsLnRzIiwid2VicGFjazovL1JTIFNlbGVjdG9ycy8uL3NyYy9zY3JpcHRzL3ZpZXcvdG9nZ2xlL3RvZ2dsZS1idXR0b25zLnRzIiwid2VicGFjazovL1JTIFNlbGVjdG9ycy8uL3NyYy9zY3JpcHRzL3ZpZXcvdG9nZ2xlL3RvZ2dsZS1lbGVtZW50cy50cyIsIndlYnBhY2s6Ly9SUyBTZWxlY3RvcnMvLi9zcmMvc2NyaXB0cy92aWV3L3ZpZXctZ2FyYWdlL2hhbmRsZS1jcmVhdGUvaGFuZGxlLWNyZWF0ZS50cyIsIndlYnBhY2s6Ly9SUyBTZWxlY3RvcnMvLi9zcmMvc2NyaXB0cy92aWV3L3ZpZXctZ2FyYWdlL2hhbmRsZS1nZW5lcmF0ZS9jYXItbWFrZXMudHMiLCJ3ZWJwYWNrOi8vUlMgU2VsZWN0b3JzLy4vc3JjL3NjcmlwdHMvdmlldy92aWV3LWdhcmFnZS9oYW5kbGUtZ2VuZXJhdGUvaGFuZGxlLWdlbmVyYXRlLnRzIiwid2VicGFjazovL1JTIFNlbGVjdG9ycy8uL3NyYy9zY3JpcHRzL3ZpZXcvdmlldy1nYXJhZ2UvaGFuZGxlLWdlbmVyYXRlL3JhbmRvbS1jb2xvci50cyIsIndlYnBhY2s6Ly9SUyBTZWxlY3RvcnMvLi9zcmMvc2NyaXB0cy92aWV3L3ZpZXctZ2FyYWdlL2hhbmRsZS1nZW5lcmF0ZS9yYW5kb20tbWFrZS50cyIsIndlYnBhY2s6Ly9SUyBTZWxlY3RvcnMvLi9zcmMvc2NyaXB0cy92aWV3L3ZpZXctZ2FyYWdlL2hhbmRsZS1yYWNlL2FuaW1hdGlvbi50cyIsIndlYnBhY2s6Ly9SUyBTZWxlY3RvcnMvLi9zcmMvc2NyaXB0cy92aWV3L3ZpZXctZ2FyYWdlL2hhbmRsZS1yYWNlL2hhbmRsZS1yYWNlLnRzIiwid2VicGFjazovL1JTIFNlbGVjdG9ycy8uL3NyYy9zY3JpcHRzL3ZpZXcvdmlldy1nYXJhZ2UvaGFuZGxlLXJhY2UvaGVscGVycy50cyIsIndlYnBhY2s6Ly9SUyBTZWxlY3RvcnMvLi9zcmMvc2NyaXB0cy92aWV3L3ZpZXctZ2FyYWdlL2hhbmRsZS11cGRhdGUvZ2V0LXNlbGVjdGVkLWNhci50cyIsIndlYnBhY2s6Ly9SUyBTZWxlY3RvcnMvLi9zcmMvc2NyaXB0cy92aWV3L3ZpZXctZ2FyYWdlL2hhbmRsZS11cGRhdGUvaGFuZGxlLWZvcm0udHMiLCJ3ZWJwYWNrOi8vUlMgU2VsZWN0b3JzLy4vc3JjL3NjcmlwdHMvdmlldy92aWV3LWdhcmFnZS9oYW5kbGUtdXBkYXRlL2hhbmRsZS11cGRhdGUudHMiLCJ3ZWJwYWNrOi8vUlMgU2VsZWN0b3JzLy4vc3JjL3NjcmlwdHMvdmlldy92aWV3LWdhcmFnZS9oYW5kbGUtdXBkYXRlL3N0YXJ0LXVwZGF0ZS50cyIsIndlYnBhY2s6Ly9SUyBTZWxlY3RvcnMvLi9zcmMvc2NyaXB0cy92aWV3L3ZpZXctZ2FyYWdlL2hhbmRsZS11cGRhdGUvdXBkYXRlLWNhci11aS50cyIsIndlYnBhY2s6Ly9SUyBTZWxlY3RvcnMvLi9zcmMvc2NyaXB0cy92aWV3L3ZpZXctZ2FyYWdlL3BhZ2VzL2hhbmRsZS1wYWdpbmF0aW9uLnRzIiwid2VicGFjazovL1JTIFNlbGVjdG9ycy8uL3NyYy9zY3JpcHRzL3ZpZXcvdmlldy1nYXJhZ2UvcGFnZXMvcGFnZS11dGlscy50cyIsIndlYnBhY2s6Ly9SUyBTZWxlY3RvcnMvLi9zcmMvc2NyaXB0cy92aWV3L3ZpZXctZ2FyYWdlL3BvcHVwL3Nob3ctcG9wdXAudHMiLCJ3ZWJwYWNrOi8vUlMgU2VsZWN0b3JzLy4vc3JjL3NjcmlwdHMvdmlldy92aWV3LWdhcmFnZS9yZW5kZXItZ2FyYWdlLnRzIiwid2VicGFjazovL1JTIFNlbGVjdG9ycy8uL3NyYy9zY3JpcHRzL3ZpZXcvdmlldy1nYXJhZ2UvdHJhY2stYnV0dG9ucy90cmFjay1idXR0b25zLnRzIiwid2VicGFjazovL1JTIFNlbGVjdG9ycy8uL3NyYy9zY3JpcHRzL3ZpZXcvdmlldy1nYXJhZ2UvdHJhY2tzL2FwcGVuZC10cmFja3MudHMiLCJ3ZWJwYWNrOi8vUlMgU2VsZWN0b3JzLy4vc3JjL3NjcmlwdHMvdmlldy92aWV3LWdhcmFnZS90cmFja3MvY3JlYXRlLXRyYWNrLnRzIiwid2VicGFjazovL1JTIFNlbGVjdG9ycy8uL3NyYy9zY3JpcHRzL3ZpZXcvdmlldy13aW5uZXJzL2hhbmRsZS13aW4udHMiLCJ3ZWJwYWNrOi8vUlMgU2VsZWN0b3JzLy4vc3JjL3NjcmlwdHMvdmlldy92aWV3LXdpbm5lcnMvcGFnZXMvd2lubmVycy1wYWdlcy50cyIsIndlYnBhY2s6Ly9SUyBTZWxlY3RvcnMvLi9zcmMvc2NyaXB0cy92aWV3L3ZpZXctd2lubmVycy9yZW5kZXItdGFibGUudHMiLCJ3ZWJwYWNrOi8vUlMgU2VsZWN0b3JzLy4vc3JjL3NjcmlwdHMvdmlldy92aWV3LXdpbm5lcnMvcmVuZGVyLXdpbm5lcnMudHMiLCJ3ZWJwYWNrOi8vUlMgU2VsZWN0b3JzLy4vc3JjL3NjcmlwdHMvdmlldy92aWV3LXdpbm5lcnMvc29ydC1wYXJhbXMudHMiLCJ3ZWJwYWNrOi8vUlMgU2VsZWN0b3JzLy4vc3JjL3NjcmlwdHMvdmlldy92aWV3LXdpbm5lcnMvdGFibGUvdGFibGUtaGVhZGVyLnRzIiwid2VicGFjazovL1JTIFNlbGVjdG9ycy8uL3NyYy9zY3JpcHRzL3ZpZXcvdmlldy13aW5uZXJzL3RhYmxlL3RhYmxlLXJvdy50cyIsIndlYnBhY2s6Ly9SUyBTZWxlY3RvcnMvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vUlMgU2VsZWN0b3JzL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL1JTIFNlbGVjdG9ycy93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vUlMgU2VsZWN0b3JzL3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vUlMgU2VsZWN0b3JzL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vUlMgU2VsZWN0b3JzL3dlYnBhY2svcnVudGltZS9tYWtlIG5hbWVzcGFjZSBvYmplY3QiLCJ3ZWJwYWNrOi8vUlMgU2VsZWN0b3JzL3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL1JTIFNlbGVjdG9ycy93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vUlMgU2VsZWN0b3JzLy4vc3JjL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvY3NzV2l0aE1hcHBpbmdUb1N0cmluZy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyBmcm9tIFwiLi4vLi4vYXNzZXRzL3NvcnQuc3ZnXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzFfX18gZnJvbSBcIi4uLy4uL2Fzc2V0cy9zb3J0LWJsYWNrLnN2Z1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMV9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJidXR0b24ge1xcbiAgYm9yZGVyOiAwO1xcbiAgb3V0bGluZTogMDtcXG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250KTtcXG4gIGZvbnQtc2l6ZTogdmFyKC0tYnV0dG9uLWZvbnQtc2l6ZSk7XFxuICBjb2xvcjogdmFyKC0tYmxhY2spO1xcbiAgaGVpZ2h0OiAzMHB4O1xcbiAgcGFkZGluZzogMCAxNXB4O1xcblxcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGZsZXgtc2hyaW5rOiAwO1xcblxcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0td2hpdGUpO1xcbiAgYm9yZGVyLXJhZGl1czogMzBweDtcXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XFxuXFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICB6LWluZGV4OiAxMDA7XFxuICB1c2VyLXNlbGVjdDogbm9uZTtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG5cXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2UtaW47XFxufVxcblxcbmJ1dHRvbjpub3QoLmJ1dHRvbl9fdmlldyk6aG92ZXIge1xcbiAgb3BhY2l0eTogMTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJ1dHRvbi1ob3Zlci13aGl0ZSk7XFxufVxcblxcbi5idXR0b25fX3ZpZXcge1xcbiAgd2lkdGg6IDEyMHB4O1xcbiAgaGVpZ2h0OiA2MHB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICBjb2xvcjogdmFyKC0td2hpdGUpO1xcbiAgZm9udC1zaXplOiAxOHB4O1xcbiAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XFxuXFxuICB0cmFuc2l0aW9uOiBjb2xvciAwLjJzIGVhc2UtaW47XFxufVxcblxcbi5idXR0b25fX3ZpZXcuYWN0aXZlIHtcXG4gIGNvbG9yOiB2YXIoLS1ibGFjayk7XFxuICBjdXJzb3I6IGRlZmF1bHQ7XFxufVxcblxcbmZvcm0gYnV0dG9uIHtcXG4gIHBhZGRpbmc6IDAgMTVweDtcXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XFxuICBmb250LXNpemU6IDEycHg7XFxufVxcblxcbi5idXR0b25fX2NhbmNlbCxcXG4uYnV0dG9uX19yZXNldCxcXG4uYnV0dG9uX19wYWdlIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0td2hpdGUpO1xcbiAgY29sb3I6IHZhcigtLXdoaXRlKTtcXG59XFxuXFxuLmJ1dHRvbl9fY2FuY2VsOmhvdmVyLFxcbi5idXR0b25fX3Jlc2V0OmhvdmVyLFxcbi5idXR0b25fX3BhZ2U6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0td2hpdGUpO1xcbiAgY29sb3I6IHZhcigtLWJsYWNrKTtcXG59XFxuXFxuLmJ1dHRvbl9fcmFjZSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1ncmVlbik7XFxufVxcblxcbmJ1dHRvbi5idXR0b25fX3JhY2U6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYnV0dG9uLWhvdmVyLXByaW1hcnkpO1xcbn1cXG5cXG4uYnV0dG9uX19yYWNlOmRpc2FibGVkLFxcbmJ1dHRvbi5idXR0b25fX3JhY2U6ZGlzYWJsZWQ6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZ3JlZW4pO1xcbiAgb3BhY2l0eTogMC42O1xcbiAgY3Vyc29yOiBkZWZhdWx0O1xcbn1cXG5cXG4uYnV0dG9uX19wYWdlIHtcXG4gIGhlaWdodDogMjBweDtcXG4gIHBhZGRpbmc6IDAgMTBweDtcXG59XFxuXFxuLmJ1dHRvbl9fcGFnZTpkaXNhYmxlZCB7XFxuICBjdXJzb3I6IGRlZmF1bHQ7XFxuICBvcGFjaXR5OiAwLjU7XFxufVxcblxcbmJ1dHRvbi5idXR0b25fX3BhZ2U6ZGlzYWJsZWQ6aG92ZXIge1xcbiAgY3Vyc29yOiBkZWZhdWx0O1xcbiAgb3BhY2l0eTogMC41O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICBjb2xvcjogdmFyKC0td2hpdGUpO1xcbn1cXG5cXG4vKiBUcmFjayAqL1xcbi5idXR0b25fX3RyYWNrIHtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICBjb2xvcjogdmFyKC0tdHJhY2stYnV0dG9uLWNvbG9yKTtcXG5cXG4gIHBhZGRpbmc6IDAgNXB4O1xcbiAgaGVpZ2h0OiAyMHB4O1xcbn1cXG5cXG5idXR0b24uYnV0dG9uX190cmFjazpob3ZlciB7XFxuICBjb2xvcjogdmFyKC0td2hpdGUpO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmxhY2stbGlnaHQpO1xcbn1cXG5cXG5idXR0b24uYnV0dG9uX190cmFjazpkaXNhYmxlZCxcXG5idXR0b24uYnV0dG9uX190cmFjazpkaXNhYmxlZCB7XFxuICBjdXJzb3I6IGRlZmF1bHQ7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gIGNvbG9yOiB2YXIoLS10cmFjay1idXR0b24tY29sb3IpO1xcbn1cXG5cXG4uYnV0dG9uX19jcmVhdGU6ZGlzYWJsZWQsXFxuLmJ1dHRvbl9fY3JlYXRlOmRpc2FibGVkOmhvdmVyLFxcbi5idXR0b25fX2dlbmVyYXRlOmRpc2FibGVkLFxcbi5idXR0b25fX2dlbmVyYXRlOmRpc2FibGVkOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXdoaXRlKTtcXG4gIG9wYWNpdHk6IDAuNTtcXG4gIGN1cnNvcjogZGVmYXVsdDtcXG59XFxuXFxuLyogU29ydCAqL1xcblxcbmJ1dHRvbi5idXR0b25fX3NvcnQtLXdpbnMsXFxuYnV0dG9uLmJ1dHRvbl9fc29ydC0tdGltZSxcXG5idXR0b24uYnV0dG9uX19zb3J0LS1pZHMge1xcbiAgcGFkZGluZzogMCAycHggMCAxcHg7XFxuICB3aWR0aDogMTVweDtcXG4gIGhlaWdodDogMjRweDtcXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1ibGFjay1saWdodCk7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fICsgXCIpO1xcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXG4gIGJhY2tncm91bmQtc2l6ZTogNTAlO1xcbn1cXG5cXG5idXR0b24uYnV0dG9uX19zb3J0LS13aW5zOmhvdmVyLFxcbmJ1dHRvbi5idXR0b25fX3NvcnQtLXRpbWU6aG92ZXIsXFxuYnV0dG9uLmJ1dHRvbl9fc29ydC0taWRzOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzFfX18gKyBcIik7XFxufVxcblxcbi8qKi9cXG5cXG5AbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA3MjBweCkge1xcbiAgLmJ1dHRvbl9fdmlldyB7XFxuICAgIHdpZHRoOiA1MCU7XFxuICB9XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvY29tcG9uZW50cy9idXR0b25zLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLFNBQVM7RUFDVCxVQUFVO0VBQ1Ysd0JBQXdCO0VBQ3hCLGtDQUFrQztFQUNsQyxtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLGVBQWU7O0VBRWYsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsY0FBYzs7RUFFZCw4QkFBOEI7RUFDOUIsbUJBQW1CO0VBQ25CLHlCQUF5Qjs7RUFFekIsa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsZUFBZTs7RUFFZiw0QkFBNEI7QUFDOUI7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsMkNBQTJDO0FBQzdDOztBQUVBO0VBQ0UsWUFBWTtFQUNaLFlBQVk7RUFDWiw2QkFBNkI7RUFDN0IsbUJBQW1CO0VBQ25CLGVBQWU7RUFDZiwwQkFBMEI7O0VBRTFCLDhCQUE4QjtBQUNoQzs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLHlCQUF5QjtFQUN6QixlQUFlO0FBQ2pCOztBQUVBOzs7RUFHRSw2QkFBNkI7RUFDN0IsOEJBQThCO0VBQzlCLG1CQUFtQjtBQUNyQjs7QUFFQTs7O0VBR0UsOEJBQThCO0VBQzlCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLDhCQUE4QjtBQUNoQzs7QUFFQTtFQUNFLDZDQUE2QztBQUMvQzs7QUFFQTs7RUFFRSw4QkFBOEI7RUFDOUIsWUFBWTtFQUNaLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsWUFBWTtFQUNaLDZCQUE2QjtFQUM3QixtQkFBbUI7QUFDckI7O0FBRUEsVUFBVTtBQUNWO0VBQ0UsZUFBZTtFQUNmLDBCQUEwQjtFQUMxQiw2QkFBNkI7RUFDN0IsZ0NBQWdDOztFQUVoQyxjQUFjO0VBQ2QsWUFBWTtBQUNkOztBQUVBO0VBQ0UsbUJBQW1CO0VBQ25CLG9DQUFvQztBQUN0Qzs7QUFFQTs7RUFFRSxlQUFlO0VBQ2YsNkJBQTZCO0VBQzdCLGdDQUFnQztBQUNsQzs7QUFFQTs7OztFQUlFLDhCQUE4QjtFQUM5QixZQUFZO0VBQ1osZUFBZTtBQUNqQjs7QUFFQSxTQUFTOztBQUVUOzs7RUFHRSxvQkFBb0I7RUFDcEIsV0FBVztFQUNYLFlBQVk7RUFDWixtQkFBbUI7O0VBRW5CLG9DQUFvQztFQUNwQyx5REFBOEM7RUFDOUMsMkJBQTJCO0VBQzNCLDRCQUE0QjtFQUM1QixvQkFBb0I7QUFDdEI7O0FBRUE7OztFQUdFLHlEQUFvRDtBQUN0RDs7QUFFQSxHQUFHOztBQUVIO0VBQ0U7SUFDRSxVQUFVO0VBQ1o7QUFDRlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJidXR0b24ge1xcbiAgYm9yZGVyOiAwO1xcbiAgb3V0bGluZTogMDtcXG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250KTtcXG4gIGZvbnQtc2l6ZTogdmFyKC0tYnV0dG9uLWZvbnQtc2l6ZSk7XFxuICBjb2xvcjogdmFyKC0tYmxhY2spO1xcbiAgaGVpZ2h0OiAzMHB4O1xcbiAgcGFkZGluZzogMCAxNXB4O1xcblxcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGZsZXgtc2hyaW5rOiAwO1xcblxcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0td2hpdGUpO1xcbiAgYm9yZGVyLXJhZGl1czogMzBweDtcXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XFxuXFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICB6LWluZGV4OiAxMDA7XFxuICB1c2VyLXNlbGVjdDogbm9uZTtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG5cXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2UtaW47XFxufVxcblxcbmJ1dHRvbjpub3QoLmJ1dHRvbl9fdmlldyk6aG92ZXIge1xcbiAgb3BhY2l0eTogMTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJ1dHRvbi1ob3Zlci13aGl0ZSk7XFxufVxcblxcbi5idXR0b25fX3ZpZXcge1xcbiAgd2lkdGg6IDEyMHB4O1xcbiAgaGVpZ2h0OiA2MHB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICBjb2xvcjogdmFyKC0td2hpdGUpO1xcbiAgZm9udC1zaXplOiAxOHB4O1xcbiAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XFxuXFxuICB0cmFuc2l0aW9uOiBjb2xvciAwLjJzIGVhc2UtaW47XFxufVxcblxcbi5idXR0b25fX3ZpZXcuYWN0aXZlIHtcXG4gIGNvbG9yOiB2YXIoLS1ibGFjayk7XFxuICBjdXJzb3I6IGRlZmF1bHQ7XFxufVxcblxcbmZvcm0gYnV0dG9uIHtcXG4gIHBhZGRpbmc6IDAgMTVweDtcXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XFxuICBmb250LXNpemU6IDEycHg7XFxufVxcblxcbi5idXR0b25fX2NhbmNlbCxcXG4uYnV0dG9uX19yZXNldCxcXG4uYnV0dG9uX19wYWdlIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0td2hpdGUpO1xcbiAgY29sb3I6IHZhcigtLXdoaXRlKTtcXG59XFxuXFxuLmJ1dHRvbl9fY2FuY2VsOmhvdmVyLFxcbi5idXR0b25fX3Jlc2V0OmhvdmVyLFxcbi5idXR0b25fX3BhZ2U6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0td2hpdGUpO1xcbiAgY29sb3I6IHZhcigtLWJsYWNrKTtcXG59XFxuXFxuLmJ1dHRvbl9fcmFjZSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1ncmVlbik7XFxufVxcblxcbmJ1dHRvbi5idXR0b25fX3JhY2U6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYnV0dG9uLWhvdmVyLXByaW1hcnkpO1xcbn1cXG5cXG4uYnV0dG9uX19yYWNlOmRpc2FibGVkLFxcbmJ1dHRvbi5idXR0b25fX3JhY2U6ZGlzYWJsZWQ6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZ3JlZW4pO1xcbiAgb3BhY2l0eTogMC42O1xcbiAgY3Vyc29yOiBkZWZhdWx0O1xcbn1cXG5cXG4uYnV0dG9uX19wYWdlIHtcXG4gIGhlaWdodDogMjBweDtcXG4gIHBhZGRpbmc6IDAgMTBweDtcXG59XFxuXFxuLmJ1dHRvbl9fcGFnZTpkaXNhYmxlZCB7XFxuICBjdXJzb3I6IGRlZmF1bHQ7XFxuICBvcGFjaXR5OiAwLjU7XFxufVxcblxcbmJ1dHRvbi5idXR0b25fX3BhZ2U6ZGlzYWJsZWQ6aG92ZXIge1xcbiAgY3Vyc29yOiBkZWZhdWx0O1xcbiAgb3BhY2l0eTogMC41O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICBjb2xvcjogdmFyKC0td2hpdGUpO1xcbn1cXG5cXG4vKiBUcmFjayAqL1xcbi5idXR0b25fX3RyYWNrIHtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICBjb2xvcjogdmFyKC0tdHJhY2stYnV0dG9uLWNvbG9yKTtcXG5cXG4gIHBhZGRpbmc6IDAgNXB4O1xcbiAgaGVpZ2h0OiAyMHB4O1xcbn1cXG5cXG5idXR0b24uYnV0dG9uX190cmFjazpob3ZlciB7XFxuICBjb2xvcjogdmFyKC0td2hpdGUpO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmxhY2stbGlnaHQpO1xcbn1cXG5cXG5idXR0b24uYnV0dG9uX190cmFjazpkaXNhYmxlZCxcXG5idXR0b24uYnV0dG9uX190cmFjazpkaXNhYmxlZCB7XFxuICBjdXJzb3I6IGRlZmF1bHQ7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gIGNvbG9yOiB2YXIoLS10cmFjay1idXR0b24tY29sb3IpO1xcbn1cXG5cXG4uYnV0dG9uX19jcmVhdGU6ZGlzYWJsZWQsXFxuLmJ1dHRvbl9fY3JlYXRlOmRpc2FibGVkOmhvdmVyLFxcbi5idXR0b25fX2dlbmVyYXRlOmRpc2FibGVkLFxcbi5idXR0b25fX2dlbmVyYXRlOmRpc2FibGVkOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXdoaXRlKTtcXG4gIG9wYWNpdHk6IDAuNTtcXG4gIGN1cnNvcjogZGVmYXVsdDtcXG59XFxuXFxuLyogU29ydCAqL1xcblxcbmJ1dHRvbi5idXR0b25fX3NvcnQtLXdpbnMsXFxuYnV0dG9uLmJ1dHRvbl9fc29ydC0tdGltZSxcXG5idXR0b24uYnV0dG9uX19zb3J0LS1pZHMge1xcbiAgcGFkZGluZzogMCAycHggMCAxcHg7XFxuICB3aWR0aDogMTVweDtcXG4gIGhlaWdodDogMjRweDtcXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1ibGFjay1saWdodCk7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXFxcIi4uLy4uL2Fzc2V0cy9zb3J0LnN2Z1xcXCIpO1xcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXG4gIGJhY2tncm91bmQtc2l6ZTogNTAlO1xcbn1cXG5cXG5idXR0b24uYnV0dG9uX19zb3J0LS13aW5zOmhvdmVyLFxcbmJ1dHRvbi5idXR0b25fX3NvcnQtLXRpbWU6aG92ZXIsXFxuYnV0dG9uLmJ1dHRvbl9fc29ydC0taWRzOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcXFwiLi4vLi4vYXNzZXRzL3NvcnQtYmxhY2suc3ZnXFxcIik7XFxufVxcblxcbi8qKi9cXG5cXG5AbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA3MjBweCkge1xcbiAgLmJ1dHRvbl9fdmlldyB7XFxuICAgIHdpZHRoOiA1MCU7XFxuICB9XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18gZnJvbSBcIi4uLy4uL2Fzc2V0cy9kb3RzLWRpdmlkb3Iuc3ZnXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLmZvcm1zX19jb250YWluZXIge1xcbiAgbWF4LXdpZHRoOiA1MzBweDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgZGlzcGxheTogZmxleDtcXG59XFxuXFxuLmZvcm1zX19jb250YWluZXIuZm9ybXMtLWhpZGRlbiB7XFxuICB2aXNpYmlsaXR5OiBoaWRkZW47XFxuICBvcGFjaXR5OiAwO1xcbn1cXG5cXG4uZm9ybXNfX2NvbnRhaW5lciBmb3JtIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmxhY2stbGlnaHQpO1xcbiAgYm9yZGVyLXJhZGl1czogMzBweDtcXG59XFxuXFxuZm9ybSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbn1cXG5cXG5mb3JtIC5mb3JtX19jb250YWluZXIge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgZ2FwOiA1cHg7XFxufVxcblxcbi5mb3JtX19jcmVhdGUge1xcbiAgcGFkZGluZzogMTVweDtcXG59XFxuXFxuLmZvcm1fX2NyZWF0ZSBzcGFuIHtcXG4gIHdpZHRoOiAzcHg7XFxuICBoZWlnaHQ6IDMwcHg7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fICsgXCIpO1xcbiAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXG4gIG9wYWNpdHk6IDAuMjtcXG5cXG4gIG1hcmdpbjogMCAxNXB4O1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtc2hyaW5rOiAwO1xcbn1cXG5cXG4uZm9ybV9fdXBkYXRlIHtcXG4gIHBhZGRpbmc6IDE1cHg7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGxlZnQ6IDA7XFxuICB0b3A6IDA7XFxuICB6LWluZGV4OiAxMDA7XFxuXFxuICBib3gtc2hhZG93OiAxMHB4IDEwcHggMTBweCB2YXIoLS1zaGFkb3cpO1xcblxcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMDAlKTtcXG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0O1xcbn1cXG5cXG4uZm9ybV9fdXBkYXRlLS1vcGVuIHtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcXG59XFxuXFxuLmZvcm1fX3VwZGF0ZSBoMiB7XFxuICBmb250LXNpemU6IDI0cHg7XFxuICBmb250LXdlaWdodDogNDAwO1xcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcXG59XFxuXFxuLyoqL1xcblxcbkBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDcyMHB4KSB7XFxuICAuZm9ybXNfX2NvbnRhaW5lciB7XFxuICAgIG1heC13aWR0aDogNzIwcHg7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgfVxcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGVzL2NvbXBvbmVudHMvZm9ybXMuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsYUFBYTtBQUNmOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFVBQVU7QUFDWjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxvQ0FBb0M7RUFDcEMsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLDhCQUE4QjtBQUNoQzs7QUFFQTtFQUNFLFdBQVc7RUFDWCxhQUFhO0VBQ2IsOEJBQThCO0VBQzlCLFFBQVE7QUFDVjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLFVBQVU7RUFDVixZQUFZO0VBQ1oseURBQXNEO0VBQ3RELHdCQUF3QjtFQUN4QiwyQkFBMkI7RUFDM0IsNEJBQTRCO0VBQzVCLFlBQVk7O0VBRVosY0FBYztFQUNkLGFBQWE7RUFDYixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsMkJBQTJCO0VBQzNCLGtCQUFrQjtFQUNsQixPQUFPO0VBQ1AsTUFBTTtFQUNOLFlBQVk7O0VBRVosd0NBQXdDOztFQUV4Qyw0QkFBNEI7RUFDNUIsZ0NBQWdDO0FBQ2xDOztBQUVBO0VBQ0Usd0JBQXdCO0FBQzFCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixtQkFBbUI7QUFDckI7O0FBRUEsR0FBRzs7QUFFSDtFQUNFO0lBQ0UsZ0JBQWdCO0lBQ2hCLFdBQVc7RUFDYjtBQUNGXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5mb3Jtc19fY29udGFpbmVyIHtcXG4gIG1heC13aWR0aDogNTMwcHg7XFxuICB3aWR0aDogMTAwJTtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxufVxcblxcbi5mb3Jtc19fY29udGFpbmVyLmZvcm1zLS1oaWRkZW4ge1xcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xcbiAgb3BhY2l0eTogMDtcXG59XFxuXFxuLmZvcm1zX19jb250YWluZXIgZm9ybSB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJsYWNrLWxpZ2h0KTtcXG4gIGJvcmRlci1yYWRpdXM6IDMwcHg7XFxufVxcblxcbmZvcm0ge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG59XFxuXFxuZm9ybSAuZm9ybV9fY29udGFpbmVyIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gIGdhcDogNXB4O1xcbn1cXG5cXG4uZm9ybV9fY3JlYXRlIHtcXG4gIHBhZGRpbmc6IDE1cHg7XFxufVxcblxcbi5mb3JtX19jcmVhdGUgc3BhbiB7XFxuICB3aWR0aDogM3B4O1xcbiAgaGVpZ2h0OiAzMHB4O1xcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFxcXCIuLi8uLi9hc3NldHMvZG90cy1kaXZpZG9yLnN2Z1xcXCIpO1xcbiAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXG4gIG9wYWNpdHk6IDAuMjtcXG5cXG4gIG1hcmdpbjogMCAxNXB4O1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtc2hyaW5rOiAwO1xcbn1cXG5cXG4uZm9ybV9fdXBkYXRlIHtcXG4gIHBhZGRpbmc6IDE1cHg7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGxlZnQ6IDA7XFxuICB0b3A6IDA7XFxuICB6LWluZGV4OiAxMDA7XFxuXFxuICBib3gtc2hhZG93OiAxMHB4IDEwcHggMTBweCB2YXIoLS1zaGFkb3cpO1xcblxcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMDAlKTtcXG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0O1xcbn1cXG5cXG4uZm9ybV9fdXBkYXRlLS1vcGVuIHtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcXG59XFxuXFxuLmZvcm1fX3VwZGF0ZSBoMiB7XFxuICBmb250LXNpemU6IDI0cHg7XFxuICBmb250LXdlaWdodDogNDAwO1xcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcXG59XFxuXFxuLyoqL1xcblxcbkBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDcyMHB4KSB7XFxuICAuZm9ybXNfX2NvbnRhaW5lciB7XFxuICAgIG1heC13aWR0aDogNzIwcHg7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgfVxcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9jc3NXaXRoTWFwcGluZ1RvU3RyaW5nLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJpbnB1dCB7XFxuICBvdXRsaW5lOiBub25lO1xcbiAgYm9yZGVyOiBub25lO1xcbiAgaGVpZ2h0OiAzMHB4O1xcblxcbiAgdHJhbnNpdGlvbjogYWxsIDAuMXMgZWFzZS1pbjtcXG59XFxuXFxuLmlucHV0LXRleHQge1xcbiAgbWF4LXdpZHRoOiA1MDBweDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgcGFkZGluZzogMCAxNXB4O1xcblxcbiAgYm9yZGVyLXJhZGl1czogMzBweDtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWlucHV0LWJvcmRlcik7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXG59XFxuXFxuLmlucHV0LXRleHQ6Zm9jdXMge1xcbiAgY29sb3I6IHZhcigtLXdoaXRlKTtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLXdoaXRlKTtcXG59XFxuXFxuLmlucHV0LWNvbG9yIHtcXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcXG4gIC1tb3otYXBwZWFyYW5jZTogbm9uZTtcXG4gIGFwcGVhcmFuY2U6IG5vbmU7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gIHdpZHRoOiAzNHB4O1xcbiAgaGVpZ2h0OiAzMHB4O1xcbiAgYm9yZGVyOiBub25lO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcblxcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGZsZXgtc2hyaW5rOiAwO1xcblxcbiAgbWFyZ2luLXRvcDogLTRweDtcXG59XFxuXFxuLmlucHV0LWNvbG9yOjotd2Via2l0LWNvbG9yLXN3YXRjaCB7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIHdpZHRoOiAzMHB4O1xcbiAgaGVpZ2h0OiAyOHB4O1xcbiAgYm9yZGVyLXJhZGl1czogMzBweDtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLXdoaXRlKTtcXG59XFxuXFxuLmlucHV0LWNvbG9yOjotbW96LWNvbG9yLXN3YXRjaCB7XFxuICBib3JkZXItcmFkaXVzOiAzMHB4O1xcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0td2hpdGUpO1xcbn1cXG5cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGVzL2NvbXBvbmVudHMvaW5wdXQuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsYUFBYTtFQUNiLFlBQVk7RUFDWixZQUFZOztFQUVaLDRCQUE0QjtBQUM5Qjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixXQUFXO0VBQ1gsZUFBZTs7RUFFZixtQkFBbUI7RUFDbkIscUNBQXFDO0VBQ3JDLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQiw4QkFBOEI7QUFDaEM7O0FBRUE7RUFDRSx3QkFBd0I7RUFDeEIscUJBQXFCO0VBQ3JCLGdCQUFnQjtFQUNoQiw2QkFBNkI7RUFDN0IsV0FBVztFQUNYLFlBQVk7RUFDWixZQUFZO0VBQ1osZUFBZTs7RUFFZixhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUNuQixjQUFjOztFQUVkLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxXQUFXO0VBQ1gsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQiw4QkFBOEI7QUFDaEM7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsOEJBQThCO0FBQ2hDXCIsXCJzb3VyY2VzQ29udGVudFwiOltcImlucHV0IHtcXG4gIG91dGxpbmU6IG5vbmU7XFxuICBib3JkZXI6IG5vbmU7XFxuICBoZWlnaHQ6IDMwcHg7XFxuXFxuICB0cmFuc2l0aW9uOiBhbGwgMC4xcyBlYXNlLWluO1xcbn1cXG5cXG4uaW5wdXQtdGV4dCB7XFxuICBtYXgtd2lkdGg6IDUwMHB4O1xcbiAgd2lkdGg6IDEwMCU7XFxuICBwYWRkaW5nOiAwIDE1cHg7XFxuXFxuICBib3JkZXItcmFkaXVzOiAzMHB4O1xcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0taW5wdXQtYm9yZGVyKTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcbn1cXG5cXG4uaW5wdXQtdGV4dDpmb2N1cyB7XFxuICBjb2xvcjogdmFyKC0td2hpdGUpO1xcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0td2hpdGUpO1xcbn1cXG5cXG4uaW5wdXQtY29sb3Ige1xcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xcbiAgLW1vei1hcHBlYXJhbmNlOiBub25lO1xcbiAgYXBwZWFyYW5jZTogbm9uZTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcbiAgd2lkdGg6IDM0cHg7XFxuICBoZWlnaHQ6IDMwcHg7XFxuICBib3JkZXI6IG5vbmU7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuXFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgZmxleC1zaHJpbms6IDA7XFxuXFxuICBtYXJnaW4tdG9wOiAtNHB4O1xcbn1cXG5cXG4uaW5wdXQtY29sb3I6Oi13ZWJraXQtY29sb3Itc3dhdGNoIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgd2lkdGg6IDMwcHg7XFxuICBoZWlnaHQ6IDI4cHg7XFxuICBib3JkZXItcmFkaXVzOiAzMHB4O1xcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0td2hpdGUpO1xcbn1cXG5cXG4uaW5wdXQtY29sb3I6Oi1tb3otY29sb3Itc3dhdGNoIHtcXG4gIGJvcmRlci1yYWRpdXM6IDMwcHg7XFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS13aGl0ZSk7XFxufVxcblxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5wYWdpbmF0aW9uIHtcXG4gIHdpZHRoOiAyMDBweDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcblxcbiAgbWFyZ2luLXRvcDogMTVweDtcXG59XFxuXFxuLnBhZ2VfX2NvbnRhaW5lciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZ2FwOiA1cHg7XFxufVxcblxcbi5wYWdlX19jb250YWluZXIgc3BhbiB7XFxuICBmb250LXNpemU6IDEycHg7XFxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xcbn1cXG5cXG4ucGFnZXNfX2J1dHRvbnMge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGdhcDogNXB4O1xcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGVzL2NvbXBvbmVudHMvcGFnaW5hdGlvbi5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxZQUFZO0VBQ1osYUFBYTtFQUNiLDhCQUE4QjtFQUM5QixtQkFBbUI7O0VBRW5CLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixRQUFRO0FBQ1Y7O0FBRUE7RUFDRSxlQUFlO0VBQ2YseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLFFBQVE7QUFDVlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIucGFnaW5hdGlvbiB7XFxuICB3aWR0aDogMjAwcHg7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG5cXG4gIG1hcmdpbi10b3A6IDE1cHg7XFxufVxcblxcbi5wYWdlX19jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGdhcDogNXB4O1xcbn1cXG5cXG4ucGFnZV9fY29udGFpbmVyIHNwYW4ge1xcbiAgZm9udC1zaXplOiAxMnB4O1xcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcXG59XFxuXFxuLnBhZ2VzX19idXR0b25zIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBnYXA6IDVweDtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvY3NzV2l0aE1hcHBpbmdUb1N0cmluZy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyBmcm9tIFwiLi4vLi4vYXNzZXRzL2Fycm93LXJpZ2h0LnN2Z1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xX19fIGZyb20gXCIuLi8uLi9hc3NldHMvZmluaXNoLnN2Z1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMV9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIudHJhY2sge1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHZhcigtLXdoaXRlKTtcXG59XFxuXFxuLnRyYWNrOmxhc3QtY2hpbGQge1xcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHZhcigtLXdoaXRlKTtcXG59XFxuXFxuLnRyYWNrX19jb250YWluZXIge1xcbiAgcGFkZGluZzogMTBweCAwO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbn1cXG5cXG4udHJhY2tfX2hlYWRlciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZ2FwOiA3cHg7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcblxcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgbWFyZ2luLXRvcDogLTVweDtcXG59XFxuXFxuLnRyYWNrX19idXR0b25zIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBnYXA6IDRweDtcXG4gIG1hcmdpbi1sZWZ0OiAtMnB4O1xcbn1cXG5cXG4uY2FyX19uYW1lIHtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHBhZGRpbmctbGVmdDogMTZweDtcXG59XFxuXFxuLmNhcl9fbmFtZTo6YmVmb3JlIHtcXG4gIGNvbnRlbnQ6IFxcXCJcXFwiO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgd2lkdGg6IDhweDtcXG4gIGhlaWdodDogOHB4O1xcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyArIFwiKTtcXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcXG4gIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XFxuICBsZWZ0OiAwO1xcbiAgdG9wOiA1cHg7XFxufVxcblxcbi8qIEJPRFkgKi9cXG5cXG4udHJhY2tfX2JvZHkge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBoZWlnaHQ6IDY1cHg7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xcbn1cXG5cXG4uY2FyIHtcXG4gIHdpZHRoOiA0MHB4O1xcbiAgaGVpZ2h0OiA0MHB4O1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgei1pbmRleDogMTAwO1xcbn1cXG5cXG4uY2FyIHN2ZyB7XFxuICBib3JkZXItcmFkaXVzOiA1MCU7XFxufVxcblxcbi5mbGFnIHtcXG4gIHdpZHRoOiAzMHB4O1xcbiAgaGVpZ2h0OiA2NXB4O1xcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMV9fXyArIFwiKTtcXG4gIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XFxuXFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICByaWdodDogNDBweDtcXG4gIGJvdHRvbTogMDtcXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlcy9jb21wb25lbnRzL3RyYWNrLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLGtCQUFrQjtFQUNsQixrQ0FBa0M7QUFDcEM7O0FBRUE7RUFDRSxxQ0FBcUM7QUFDdkM7O0FBRUE7RUFDRSxlQUFlO0VBQ2Ysa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLFFBQVE7RUFDUixtQkFBbUI7O0VBRW5CLGtCQUFrQjtFQUNsQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsUUFBUTtFQUNSLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixXQUFXO0VBQ1gseURBQXFEO0VBQ3JELDJCQUEyQjtFQUMzQix3QkFBd0I7RUFDeEIsNEJBQTRCO0VBQzVCLE9BQU87RUFDUCxRQUFRO0FBQ1Y7O0FBRUEsU0FBUzs7QUFFVDtFQUNFLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLGFBQWE7RUFDYixxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLHlEQUFnRDtFQUNoRCx3QkFBd0I7RUFDeEIsMkJBQTJCO0VBQzNCLDRCQUE0Qjs7RUFFNUIsa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxTQUFTO0FBQ1hcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLnRyYWNrIHtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCB2YXIoLS13aGl0ZSk7XFxufVxcblxcbi50cmFjazpsYXN0LWNoaWxkIHtcXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB2YXIoLS13aGl0ZSk7XFxufVxcblxcbi50cmFja19fY29udGFpbmVyIHtcXG4gIHBhZGRpbmc6IDEwcHggMDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxuXFxuLnRyYWNrX19oZWFkZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGdhcDogN3B4O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG5cXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIG1hcmdpbi10b3A6IC01cHg7XFxufVxcblxcbi50cmFja19fYnV0dG9ucyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZ2FwOiA0cHg7XFxuICBtYXJnaW4tbGVmdDogLTJweDtcXG59XFxuXFxuLmNhcl9fbmFtZSB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBwYWRkaW5nLWxlZnQ6IDE2cHg7XFxufVxcblxcbi5jYXJfX25hbWU6OmJlZm9yZSB7XFxuICBjb250ZW50OiBcXFwiXFxcIjtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHdpZHRoOiA4cHg7XFxuICBoZWlnaHQ6IDhweDtcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcXFwiLi4vLi4vYXNzZXRzL2Fycm93LXJpZ2h0LnN2Z1xcXCIpO1xcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xcbiAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXG4gIGxlZnQ6IDA7XFxuICB0b3A6IDVweDtcXG59XFxuXFxuLyogQk9EWSAqL1xcblxcbi50cmFja19fYm9keSB7XFxuICB3aWR0aDogMTAwJTtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIGhlaWdodDogNjVweDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XFxufVxcblxcbi5jYXIge1xcbiAgd2lkdGg6IDQwcHg7XFxuICBoZWlnaHQ6IDQwcHg7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB6LWluZGV4OiAxMDA7XFxufVxcblxcbi5jYXIgc3ZnIHtcXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcXG59XFxuXFxuLmZsYWcge1xcbiAgd2lkdGg6IDMwcHg7XFxuICBoZWlnaHQ6IDY1cHg7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXFxcIi4uLy4uL2Fzc2V0cy9maW5pc2guc3ZnXFxcIik7XFxuICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XFxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XFxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xcblxcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgcmlnaHQ6IDQwcHg7XFxuICBib3R0b206IDA7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5mb290ZXIge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBwYWRkaW5nOiB2YXIoLS1wYWdlLXBhZGRpbmcpO1xcbn1cXG5cXG4uZm9vdGVyX19jb250YWluZXIge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDMwcHg7XFxuICBwYWRkaW5nOiAwIDE1cHg7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG5cXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJsYWNrLWxpZ2h0KTtcXG4gIGJvcmRlci1yYWRpdXM6IDMwcHg7XFxufVxcblxcbi5mb290ZXJfX2NvbnRhaW5lciAuZm9vdGVyX19pbmZvIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBnYXA6IDVweDtcXG59XFxuXFxuLyoqL1xcblxcbkBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDU1MHB4KSB7XFxuICAuZm9vdGVyIHtcXG4gICAgcGFkZGluZy1ib3R0b206IDIwcHg7XFxuICB9XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvZm9vdGVyLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLFdBQVc7RUFDWCw0QkFBNEI7QUFDOUI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLGVBQWU7RUFDZixhQUFhO0VBQ2IsOEJBQThCO0VBQzlCLG1CQUFtQjs7RUFFbkIsb0NBQW9DO0VBQ3BDLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixRQUFRO0FBQ1Y7O0FBRUEsR0FBRzs7QUFFSDtFQUNFO0lBQ0Usb0JBQW9CO0VBQ3RCO0FBQ0ZcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmZvb3RlciB7XFxuICB3aWR0aDogMTAwJTtcXG4gIHBhZGRpbmc6IHZhcigtLXBhZ2UtcGFkZGluZyk7XFxufVxcblxcbi5mb290ZXJfX2NvbnRhaW5lciB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMzBweDtcXG4gIHBhZGRpbmc6IDAgMTVweDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcblxcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmxhY2stbGlnaHQpO1xcbiAgYm9yZGVyLXJhZGl1czogMzBweDtcXG59XFxuXFxuLmZvb3Rlcl9fY29udGFpbmVyIC5mb290ZXJfX2luZm8ge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGdhcDogNXB4O1xcbn1cXG5cXG4vKiovXFxuXFxuQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogNTUwcHgpIHtcXG4gIC5mb290ZXIge1xcbiAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcXG4gIH1cXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvY3NzV2l0aE1hcHBpbmdUb1N0cmluZy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLmhlYWRlciB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJsYWNrKTtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIGxlZnQ6IDA7XFxuICB0b3A6IDA7XFxuICB6LWluZGV4OiAxMDAwO1xcbn1cXG5cXG4uaGVhZGVyX19jb250YWluZXIge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBwYWRkaW5nOiB2YXIoLS1wYWdlLXBhZGRpbmcpO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gIGdhcDogMTBweDtcXG59XFxuXFxuLmhlYWRlcl9fYnV0dG9ucyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgYm9yZGVyLXJhZGl1czogNjBweDtcXG5cXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJsYWNrLWxpZ2h0KTtcXG5cXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2UtaW47XFxufVxcblxcbi5idWJibGUge1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICB3aWR0aDogNTAlO1xcbiAgaGVpZ2h0OiA2MHB4O1xcbiAgYm9yZGVyLXJhZGl1czogNjBweDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXdoaXRlKTtcXG5cXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHRvcDogMDtcXG4gIGxlZnQ6IDA7XFxuXFxuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlLWluLW91dDtcXG59XFxuXFxuLmJ1YmJsZS53aW5uZXJzIHtcXG4gIGxlZnQ6IDUwJTtcXG59XFxuXFxuLyoqL1xcblxcbkBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDcyMHB4KSB7XFxuICAuaGVhZGVyX19jb250YWluZXIge1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBnYXA6IDIwcHg7XFxuICB9XFxuXFxuICAuaGVhZGVyX19idXR0b25zIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICB9XFxufVxcblxcbkBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDU1MHB4KSB7XFxuICAuaGVhZGVyX19jb250YWluZXIge1xcbiAgICBwYWRkaW5nLXRvcDogMjBweDtcXG4gIH1cXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlcy9oZWFkZXIuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsV0FBVztFQUNYLDhCQUE4QjtFQUM5QixlQUFlO0VBQ2YsT0FBTztFQUNQLE1BQU07RUFDTixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsNEJBQTRCO0VBQzVCLGFBQWE7RUFDYiw4QkFBOEI7RUFDOUIsU0FBUztBQUNYOztBQUVBO0VBQ0UsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQixtQkFBbUI7O0VBRW5CLG9DQUFvQzs7RUFFcEMsZUFBZTtFQUNmLDRCQUE0QjtBQUM5Qjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxVQUFVO0VBQ1YsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQiw4QkFBOEI7O0VBRTlCLGtCQUFrQjtFQUNsQixNQUFNO0VBQ04sT0FBTzs7RUFFUCxnQ0FBZ0M7QUFDbEM7O0FBRUE7RUFDRSxTQUFTO0FBQ1g7O0FBRUEsR0FBRzs7QUFFSDtFQUNFO0lBQ0Usc0JBQXNCO0lBQ3RCLFNBQVM7RUFDWDs7RUFFQTtJQUNFLFdBQVc7RUFDYjtBQUNGOztBQUVBO0VBQ0U7SUFDRSxpQkFBaUI7RUFDbkI7QUFDRlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuaGVhZGVyIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmxhY2spO1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgbGVmdDogMDtcXG4gIHRvcDogMDtcXG4gIHotaW5kZXg6IDEwMDA7XFxufVxcblxcbi5oZWFkZXJfX2NvbnRhaW5lciB7XFxuICB3aWR0aDogMTAwJTtcXG4gIHBhZGRpbmc6IHZhcigtLXBhZ2UtcGFkZGluZyk7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgZ2FwOiAxMHB4O1xcbn1cXG5cXG4uaGVhZGVyX19idXR0b25zIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBib3JkZXItcmFkaXVzOiA2MHB4O1xcblxcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmxhY2stbGlnaHQpO1xcblxcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZS1pbjtcXG59XFxuXFxuLmJ1YmJsZSB7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIHdpZHRoOiA1MCU7XFxuICBoZWlnaHQ6IDYwcHg7XFxuICBib3JkZXItcmFkaXVzOiA2MHB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0td2hpdGUpO1xcblxcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiAwO1xcbiAgbGVmdDogMDtcXG5cXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2UtaW4tb3V0O1xcbn1cXG5cXG4uYnViYmxlLndpbm5lcnMge1xcbiAgbGVmdDogNTAlO1xcbn1cXG5cXG4vKiovXFxuXFxuQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogNzIwcHgpIHtcXG4gIC5oZWFkZXJfX2NvbnRhaW5lciB7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGdhcDogMjBweDtcXG4gIH1cXG5cXG4gIC5oZWFkZXJfX2J1dHRvbnMge1xcbiAgICB3aWR0aDogMTAwJTtcXG4gIH1cXG59XFxuXFxuQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogNTUwcHgpIHtcXG4gIC5oZWFkZXJfX2NvbnRhaW5lciB7XFxuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xcbiAgfVxcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9jc3NXaXRoTWFwcGluZ1RvU3RyaW5nLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8wX19fIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGVzLmNzc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMV9fXyBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3ZhcmlhYmxlcy5jc3NcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzJfX18gZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9jb21wb25lbnRzL2J1dHRvbnMuY3NzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8zX19fIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vY29tcG9uZW50cy9mb3Jtcy5jc3NcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzRfX18gZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9jb21wb25lbnRzL2lucHV0LmNzc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfNV9fXyBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2NvbXBvbmVudHMvdHJhY2suY3NzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF82X19fIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vY29tcG9uZW50cy9wYWdpbmF0aW9uLmNzc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfN19fXyBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2hlYWRlci5jc3NcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzhfX18gZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9tYWluLmNzc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfOV9fXyBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2Zvb3Rlci5jc3NcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzEwX19fIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vcG9wdXAuY3NzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8xMV9fXyBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3dpbm5lcnMuY3NzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1JbnRlcjp3Z2h0QDMwMDs0MDA7NTAwOzYwMDs3MDAmZmFtaWx5PUpldEJyYWlucytNb25vOndnaHRAMzAwOzQwMDs1MDA7NjAwOzcwMCZkaXNwbGF5PXN3YXApO1wiXSk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMF9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMV9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMl9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfM19fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfNF9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfNV9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfNl9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfN19fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfOF9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfOV9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMTBfX18pO1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18uaShfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzExX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIlxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJcIixcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5tYWluIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBmbGV4LWdyb3c6IDE7XFxuXFxuICBtYXJnaW4tdG9wOiAxMjBweDtcXG59XFxuXFxuLm1haW5fX2NvbnRhaW5lciB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgZmxleC1ncm93OiAxO1xcbiAgcGFkZGluZzogNDBweCB2YXIoLS1wYWdlLXBhZGRpbmcpO1xcbn1cXG5cXG4vKiBIRUFERVIgKi9cXG5cXG4udmlld19faGVhZGVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgZ2FwOiAxNXB4O1xcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcXG59XFxuXFxuLnZpZXdfX3RpdGxlIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBnYXA6IDVweDtcXG59XFxuXFxuLnZpZXdfX3RpdGxlIHNwYW4ge1xcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XFxufVxcblxcbi52aWV3X190aXRsZSBoMixcXG4udmlld19fdGl0bGUgc3BhbiB7XFxuICBmb250LXNpemU6IDQwcHg7XFxuICBmb250LXdlaWdodDogNDAwO1xcbn1cXG5cXG4udmlld19fYnV0dG9ucyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZ2FwOiA1cHg7XFxuICBtYXJnaW4tdG9wOiA1cHg7XFxufVxcblxcbi52aWV3X19idXR0b25zLmhpZGRlbiB7XFxuICB2aXNpYmlsaXR5OiBoaWRkZW47XFxuICBvcGFjaXR5OiAwO1xcbn1cXG5cXG5AbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA3MjBweCkge1xcbiAgLm1haW4ge1xcbiAgICBtYXJnaW4tdG9wOiAxODBweDtcXG4gIH1cXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlcy9tYWluLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLFdBQVc7RUFDWCxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLFlBQVk7O0VBRVosaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsV0FBVztFQUNYLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsWUFBWTtFQUNaLGlDQUFpQztBQUNuQzs7QUFFQSxXQUFXOztBQUVYO0VBQ0UsYUFBYTtFQUNiLDhCQUE4QjtFQUM5QixtQkFBbUI7RUFDbkIsU0FBUztFQUNULG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixRQUFRO0FBQ1Y7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7O0VBRUUsZUFBZTtFQUNmLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixRQUFRO0VBQ1IsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixVQUFVO0FBQ1o7O0FBRUE7RUFDRTtJQUNFLGlCQUFpQjtFQUNuQjtBQUNGXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5tYWluIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBmbGV4LWdyb3c6IDE7XFxuXFxuICBtYXJnaW4tdG9wOiAxMjBweDtcXG59XFxuXFxuLm1haW5fX2NvbnRhaW5lciB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgZmxleC1ncm93OiAxO1xcbiAgcGFkZGluZzogNDBweCB2YXIoLS1wYWdlLXBhZGRpbmcpO1xcbn1cXG5cXG4vKiBIRUFERVIgKi9cXG5cXG4udmlld19faGVhZGVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgZ2FwOiAxNXB4O1xcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcXG59XFxuXFxuLnZpZXdfX3RpdGxlIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBnYXA6IDVweDtcXG59XFxuXFxuLnZpZXdfX3RpdGxlIHNwYW4ge1xcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XFxufVxcblxcbi52aWV3X190aXRsZSBoMixcXG4udmlld19fdGl0bGUgc3BhbiB7XFxuICBmb250LXNpemU6IDQwcHg7XFxuICBmb250LXdlaWdodDogNDAwO1xcbn1cXG5cXG4udmlld19fYnV0dG9ucyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZ2FwOiA1cHg7XFxuICBtYXJnaW4tdG9wOiA1cHg7XFxufVxcblxcbi52aWV3X19idXR0b25zLmhpZGRlbiB7XFxuICB2aXNpYmlsaXR5OiBoaWRkZW47XFxuICBvcGFjaXR5OiAwO1xcbn1cXG5cXG5AbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA3MjBweCkge1xcbiAgLm1haW4ge1xcbiAgICBtYXJnaW4tdG9wOiAxODBweDtcXG4gIH1cXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvY3NzV2l0aE1hcHBpbmdUb1N0cmluZy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLnBvcHVwIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGxlZnQ6IDA7XFxuICB3aWR0aDogMTAwdnc7XFxuICBoZWlnaHQ6IDEwMHZoO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHotaW5kZXg6IDEwMDA7XFxuXFxuICBwYWRkaW5nOiAyMHB4O1xcbiAgLyogYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyOCwgMjgsIDI4LCAwLjUpOyAqL1xcblxcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMDAlKTtcXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAxcyBlYXNlLWluO1xcbn1cXG5cXG4ucG9wdXAtLW9wZW4ge1xcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xcbn1cXG5cXG4ucG9wdXBfX2NvbnRhaW5lciB7XFxuICBtYXgtd2lkdGg6IDUyMHB4O1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDE4MHB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmxhY2stbGlnaHQpO1xcbiAgYm94LXNoYWRvdzogMTBweCAxMHB4IDEwcHggdmFyKC0tc2hhZG93KTtcXG4gIGJvcmRlci1yYWRpdXM6IDQwcHg7XFxuXFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4ucG9wdXBfX2NvbnRlbnQge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4ucG9wdXBfX2NvbnRlbnQgc3BhbiB7XFxuICBmb250LXNpemU6IDI0cHg7XFxuICB1c2VyLXNlbGVjdDogbm9uZTtcXG59XFxuXFxuLyoqL1xcblxcbkBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDU1MHB4KSB7XFxuICAucG9wdXAge1xcbiAgICBwYWRkaW5nOiAxNXB4O1xcbiAgfVxcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGVzL3BvcHVwLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLGtCQUFrQjtFQUNsQixPQUFPO0VBQ1AsWUFBWTtFQUNaLGFBQWE7RUFDYixhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUNuQixhQUFhOztFQUViLGFBQWE7RUFDYiw2Q0FBNkM7O0VBRTdDLDRCQUE0QjtFQUM1QixnQ0FBZ0M7QUFDbEM7O0FBRUE7RUFDRSx3QkFBd0I7QUFDMUI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsV0FBVztFQUNYLGFBQWE7RUFDYixvQ0FBb0M7RUFDcEMsd0NBQXdDO0VBQ3hDLG1CQUFtQjs7RUFFbkIsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixpQkFBaUI7QUFDbkI7O0FBRUEsR0FBRzs7QUFFSDtFQUNFO0lBQ0UsYUFBYTtFQUNmO0FBQ0ZcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLnBvcHVwIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGxlZnQ6IDA7XFxuICB3aWR0aDogMTAwdnc7XFxuICBoZWlnaHQ6IDEwMHZoO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHotaW5kZXg6IDEwMDA7XFxuXFxuICBwYWRkaW5nOiAyMHB4O1xcbiAgLyogYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyOCwgMjgsIDI4LCAwLjUpOyAqL1xcblxcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMDAlKTtcXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAxcyBlYXNlLWluO1xcbn1cXG5cXG4ucG9wdXAtLW9wZW4ge1xcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xcbn1cXG5cXG4ucG9wdXBfX2NvbnRhaW5lciB7XFxuICBtYXgtd2lkdGg6IDUyMHB4O1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDE4MHB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmxhY2stbGlnaHQpO1xcbiAgYm94LXNoYWRvdzogMTBweCAxMHB4IDEwcHggdmFyKC0tc2hhZG93KTtcXG4gIGJvcmRlci1yYWRpdXM6IDQwcHg7XFxuXFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4ucG9wdXBfX2NvbnRlbnQge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4ucG9wdXBfX2NvbnRlbnQgc3BhbiB7XFxuICBmb250LXNpemU6IDI0cHg7XFxuICB1c2VyLXNlbGVjdDogbm9uZTtcXG59XFxuXFxuLyoqL1xcblxcbkBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDU1MHB4KSB7XFxuICAucG9wdXAge1xcbiAgICBwYWRkaW5nOiAxNXB4O1xcbiAgfVxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9jc3NXaXRoTWFwcGluZ1RvU3RyaW5nLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIqIHtcXG4gIHBhZGRpbmc6IDA7XFxuICBtYXJnaW46IDA7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgZm9udC1zaXplOiAxNHB4O1xcbiAgY29sb3I6IHZhcigtLXdoaXRlKTtcXG59XFxuXFxuYm9keSB7XFxuICB3aWR0aDogMTAwJTtcXG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgYmFja2dyb3VuZDogdmFyKC0tYmxhY2spO1xcbiAgZm9udC1mYW1pbHk6IFxcXCJJbnRlclxcXCIsIFxcXCJBcmlhbFxcXCIsIHNhbnMtc2VyaWY7XFxuXFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuXFxuICBvdmVyZmxvdy14OiBoaWRkZW47XFxufVxcblxcbi5jb250ZW50LXdpZHRoIHtcXG4gIHdpZHRoOiAxMDAlO1xcbn1cXG5cXG5hIHtcXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG4gIGNvbG9yOiB2YXIoLS13aGl0ZSk7XFxuICBvcGFjaXR5OiAwLjY7XFxuXFxuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlLWluO1xcbn1cXG5cXG5hOmhvdmVyIHtcXG4gIG9wYWNpdHk6IDE7XFxufVxcblxcbi8qKi9cXG5cXG5AbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA5ODBweCkge1xcbn1cXG5cXG5cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGVzL3N0eWxlcy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxVQUFVO0VBQ1YsU0FBUztFQUNULHNCQUFzQjtFQUN0QixlQUFlO0VBQ2YsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsV0FBVztFQUNYLGlCQUFpQjtFQUNqQixZQUFZO0VBQ1osd0JBQXdCO0VBQ3hCLHlDQUF5Qzs7RUFFekMsYUFBYTtFQUNiLHNCQUFzQjtFQUN0Qiw4QkFBOEI7RUFDOUIsbUJBQW1COztFQUVuQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsbUJBQW1CO0VBQ25CLFlBQVk7O0VBRVosNEJBQTRCO0FBQzlCOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBLEdBQUc7O0FBRUg7QUFDQVwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIqIHtcXG4gIHBhZGRpbmc6IDA7XFxuICBtYXJnaW46IDA7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgZm9udC1zaXplOiAxNHB4O1xcbiAgY29sb3I6IHZhcigtLXdoaXRlKTtcXG59XFxuXFxuYm9keSB7XFxuICB3aWR0aDogMTAwJTtcXG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgYmFja2dyb3VuZDogdmFyKC0tYmxhY2spO1xcbiAgZm9udC1mYW1pbHk6IFxcXCJJbnRlclxcXCIsIFxcXCJBcmlhbFxcXCIsIHNhbnMtc2VyaWY7XFxuXFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuXFxuICBvdmVyZmxvdy14OiBoaWRkZW47XFxufVxcblxcbi5jb250ZW50LXdpZHRoIHtcXG4gIHdpZHRoOiAxMDAlO1xcbn1cXG5cXG5hIHtcXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG4gIGNvbG9yOiB2YXIoLS13aGl0ZSk7XFxuICBvcGFjaXR5OiAwLjY7XFxuXFxuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlLWluO1xcbn1cXG5cXG5hOmhvdmVyIHtcXG4gIG9wYWNpdHk6IDE7XFxufVxcblxcbi8qKi9cXG5cXG5AbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA5ODBweCkge1xcbn1cXG5cXG5cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9jc3NXaXRoTWFwcGluZ1RvU3RyaW5nLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCI6cm9vdCB7XFxuICAtLWJsYWNrOiAjMUMxQzFDO1xcbiAgLS13aGl0ZTogd2hpdGVzbW9rZTtcXG4gIC0tZ3JlZW46ICM2QkQ4NTY7XFxuICAtLXNoYWRvdzogIzEzMTMxMztcXG5cXG4gIC0tcGFnZS1wYWRkaW5nOiAyMHB4O1xcbiAgLS1mb250OiBcXFwiSW50ZXJcXFwiLCBcXFwiQXJpYWxcXFwiLCBzYW5zLXNlcmlmO1xcblxcbiAgLyogQlVUVE9OUyAqL1xcbiAgLS1idXR0b24tZm9udC1zaXplOiAxMnB4O1xcbiAgLS1ibGFjay1saWdodDogIzMwMzAzMDtcXG4gIC0tYnV0dG9uLWhvdmVyLXdoaXRlOiAjZGJkYmRiO1xcbiAgLS1idXR0b24taG92ZXItcHJpbWFyeTogIzRhYWEzNztcXG4gIC0tdHJhY2stYnV0dG9uLWNvbG9yOiAjODU4NTg1O1xcblxcbiAgLypJTlBVVFMqL1xcbiAgLS1pbnB1dC1ib3JkZXI6ICM5MTkxOTE7XFxufVxcblxcbkBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDU1MHB4KSB7XFxuICA6cm9vdCB7XFxuICAgIC0tcGFnZS1wYWRkaW5nOiAxNXB4O1xcbiAgfVxcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGVzL3ZhcmlhYmxlcy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGdCQUFnQjtFQUNoQixpQkFBaUI7O0VBRWpCLG9CQUFvQjtFQUNwQixvQ0FBb0M7O0VBRXBDLFlBQVk7RUFDWix3QkFBd0I7RUFDeEIsc0JBQXNCO0VBQ3RCLDZCQUE2QjtFQUM3QiwrQkFBK0I7RUFDL0IsNkJBQTZCOztFQUU3QixTQUFTO0VBQ1QsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0U7SUFDRSxvQkFBb0I7RUFDdEI7QUFDRlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCI6cm9vdCB7XFxuICAtLWJsYWNrOiAjMUMxQzFDO1xcbiAgLS13aGl0ZTogd2hpdGVzbW9rZTtcXG4gIC0tZ3JlZW46ICM2QkQ4NTY7XFxuICAtLXNoYWRvdzogIzEzMTMxMztcXG5cXG4gIC0tcGFnZS1wYWRkaW5nOiAyMHB4O1xcbiAgLS1mb250OiBcXFwiSW50ZXJcXFwiLCBcXFwiQXJpYWxcXFwiLCBzYW5zLXNlcmlmO1xcblxcbiAgLyogQlVUVE9OUyAqL1xcbiAgLS1idXR0b24tZm9udC1zaXplOiAxMnB4O1xcbiAgLS1ibGFjay1saWdodDogIzMwMzAzMDtcXG4gIC0tYnV0dG9uLWhvdmVyLXdoaXRlOiAjZGJkYmRiO1xcbiAgLS1idXR0b24taG92ZXItcHJpbWFyeTogIzRhYWEzNztcXG4gIC0tdHJhY2stYnV0dG9uLWNvbG9yOiAjODU4NTg1O1xcblxcbiAgLypJTlBVVFMqL1xcbiAgLS1pbnB1dC1ib3JkZXI6ICM5MTkxOTE7XFxufVxcblxcbkBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDU1MHB4KSB7XFxuICA6cm9vdCB7XFxuICAgIC0tcGFnZS1wYWRkaW5nOiAxNXB4O1xcbiAgfVxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9jc3NXaXRoTWFwcGluZ1RvU3RyaW5nLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIudGFibGVfX3JvdyxcXG4udGFibGVfX2hlYWRlciB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogNDBweDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgLyogcGFkZGluZzogMTBweCAwOyAqL1xcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHZhcigtLXdoaXRlKTtcXG59XFxuXFxuLnRhYmxlX19oZWFkZXIgc3BhbiB7XFxuICBvcGFjaXR5OiAwLjU7XFxufVxcblxcbi50YWJsZV9fcm93Omxhc3QtY2hpbGQge1xcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHZhcigtLXdoaXRlKTtcXG59XFxuXFxuLnRhYmxlIHNwYW4ge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG59XFxuXFxuLnJvd19fbnVtYmVyIHtcXG4gIHdpZHRoOiAzMHB4O1xcbn1cXG5cXG4ucm93X19jYXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBmbGV4LWdyb3c6IDE7XFxuICBtYXJnaW4tbGVmdDogMjBweDtcXG4gIGdhcDogNXB4O1xcbn1cXG5cXG4ucm93c19faGVhZGVyIC5zcGFuX19jb2xvcixcXG4uY29sb3JfX2NvbnRhaW5lciB7XFxuICB3aWR0aDogNDBweDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuXFxuLnJvd3NfX2NvbnRhaW5lciAucm93X19jb2xvciB7XFxuICB3aWR0aDogMjBweDtcXG4gIGhlaWdodDogMjBweDtcXG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XFxufVxcblxcbi5yb3dfX3dpbnMsXFxuLnJvd19fdGltZSB7XFxuICB3aWR0aDogNTBweDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcXG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xcbiAgZ2FwOiA1cHg7XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvd2lubmVycy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7O0VBRUUsV0FBVztFQUNYLFlBQVk7RUFDWixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLHFCQUFxQjtFQUNyQixrQ0FBa0M7QUFDcEM7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxxQ0FBcUM7QUFDdkM7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLGlCQUFpQjtFQUNqQixRQUFRO0FBQ1Y7O0FBRUE7O0VBRUUsV0FBVztFQUNYLGFBQWE7RUFDYix1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLG1CQUFtQjtBQUNyQjs7QUFFQTs7RUFFRSxXQUFXO0VBQ1gsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQix5QkFBeUI7RUFDekIsaUJBQWlCO0VBQ2pCLFFBQVE7QUFDVlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIudGFibGVfX3JvdyxcXG4udGFibGVfX2hlYWRlciB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogNDBweDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgLyogcGFkZGluZzogMTBweCAwOyAqL1xcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHZhcigtLXdoaXRlKTtcXG59XFxuXFxuLnRhYmxlX19oZWFkZXIgc3BhbiB7XFxuICBvcGFjaXR5OiAwLjU7XFxufVxcblxcbi50YWJsZV9fcm93Omxhc3QtY2hpbGQge1xcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHZhcigtLXdoaXRlKTtcXG59XFxuXFxuLnRhYmxlIHNwYW4ge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG59XFxuXFxuLnJvd19fbnVtYmVyIHtcXG4gIHdpZHRoOiAzMHB4O1xcbn1cXG5cXG4ucm93X19jYXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBmbGV4LWdyb3c6IDE7XFxuICBtYXJnaW4tbGVmdDogMjBweDtcXG4gIGdhcDogNXB4O1xcbn1cXG5cXG4ucm93c19faGVhZGVyIC5zcGFuX19jb2xvcixcXG4uY29sb3JfX2NvbnRhaW5lciB7XFxuICB3aWR0aDogNDBweDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuXFxuLnJvd3NfX2NvbnRhaW5lciAucm93X19jb2xvciB7XFxuICB3aWR0aDogMjBweDtcXG4gIGhlaWdodDogMjBweDtcXG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XFxufVxcblxcbi5yb3dfX3dpbnMsXFxuLnJvd19fdGltZSB7XFxuICB3aWR0aDogNTBweDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcXG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xcbiAgZ2FwOiA1cHg7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICByZXR1cm4gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGNvbnRlbnQsIFwifVwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIChtb2R1bGVzLCBtZWRpYVF1ZXJ5LCBkZWR1cGUpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgXCJcIl1dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgIHZhciBpZCA9IHRoaXNbaV1bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbW9kdWxlcy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250aW51ZVxuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsyXSA9IFwiXCIuY29uY2F0KG1lZGlhUXVlcnksIFwiIGFuZCBcIikuY29uY2F0KGl0ZW1bMl0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBfc2xpY2VkVG9BcnJheShhcnIsIGkpIHsgcmV0dXJuIF9hcnJheVdpdGhIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIsIGkpIHx8IF9ub25JdGVyYWJsZVJlc3QoKTsgfVxuXG5mdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpOyB9XG5cbmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTsgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTsgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obyk7IGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgfVxuXG5mdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikgeyBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH1cblxuZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgeyB2YXIgX2kgPSBhcnIgJiYgKHR5cGVvZiBTeW1ib2wgIT09IFwidW5kZWZpbmVkXCIgJiYgYXJyW1N5bWJvbC5pdGVyYXRvcl0gfHwgYXJyW1wiQEBpdGVyYXRvclwiXSk7IGlmIChfaSA9PSBudWxsKSByZXR1cm47IHZhciBfYXJyID0gW107IHZhciBfbiA9IHRydWU7IHZhciBfZCA9IGZhbHNlOyB2YXIgX3MsIF9lOyB0cnkgeyBmb3IgKF9pID0gX2kuY2FsbChhcnIpOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVtcInJldHVyblwiXSAhPSBudWxsKSBfaVtcInJldHVyblwiXSgpOyB9IGZpbmFsbHkgeyBpZiAoX2QpIHRocm93IF9lOyB9IH0gcmV0dXJuIF9hcnI7IH1cblxuZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOyB9XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKSB7XG4gIHZhciBfaXRlbSA9IF9zbGljZWRUb0FycmF5KGl0ZW0sIDQpLFxuICAgICAgY29udGVudCA9IF9pdGVtWzFdLFxuICAgICAgY3NzTWFwcGluZyA9IF9pdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgXCJcIikuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVybCwgb3B0aW9ucykge1xuICBpZiAoIW9wdGlvbnMpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICBvcHRpb25zID0ge307XG4gIH0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVyc2NvcmUtZGFuZ2xlLCBuby1wYXJhbS1yZWFzc2lnblxuXG5cbiAgdXJsID0gdXJsICYmIHVybC5fX2VzTW9kdWxlID8gdXJsLmRlZmF1bHQgOiB1cmw7XG5cbiAgaWYgKHR5cGVvZiB1cmwgIT09IFwic3RyaW5nXCIpIHtcbiAgICByZXR1cm4gdXJsO1xuICB9IC8vIElmIHVybCBpcyBhbHJlYWR5IHdyYXBwZWQgaW4gcXVvdGVzLCByZW1vdmUgdGhlbVxuXG5cbiAgaWYgKC9eWydcIl0uKlsnXCJdJC8udGVzdCh1cmwpKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgdXJsID0gdXJsLnNsaWNlKDEsIC0xKTtcbiAgfVxuXG4gIGlmIChvcHRpb25zLmhhc2gpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICB1cmwgKz0gb3B0aW9ucy5oYXNoO1xuICB9IC8vIFNob3VsZCB1cmwgYmUgd3JhcHBlZD9cbiAgLy8gU2VlIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3MtdmFsdWVzLTMvI3VybHNcblxuXG4gIGlmICgvW1wiJygpIFxcdFxcbl0vLnRlc3QodXJsKSB8fCBvcHRpb25zLm5lZWRRdW90ZXMpIHtcbiAgICByZXR1cm4gXCJcXFwiXCIuY29uY2F0KHVybC5yZXBsYWNlKC9cIi9nLCAnXFxcXFwiJykucmVwbGFjZSgvXFxuL2csIFwiXFxcXG5cIiksIFwiXFxcIlwiKTtcbiAgfVxuXG4gIHJldHVybiB1cmw7XG59OyIsImltcG9ydCBhcGkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgICAgICAgIGltcG9ydCBjb250ZW50IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaW5kZXguY3NzXCI7XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0IGRlZmF1bHQgY29udGVudC5sb2NhbHMgfHwge307IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBpc09sZElFID0gZnVuY3Rpb24gaXNPbGRJRSgpIHtcbiAgdmFyIG1lbW87XG4gIHJldHVybiBmdW5jdGlvbiBtZW1vcml6ZSgpIHtcbiAgICBpZiAodHlwZW9mIG1lbW8gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAvLyBUZXN0IGZvciBJRSA8PSA5IGFzIHByb3Bvc2VkIGJ5IEJyb3dzZXJoYWNrc1xuICAgICAgLy8gQHNlZSBodHRwOi8vYnJvd3NlcmhhY2tzLmNvbS8jaGFjay1lNzFkODY5MmY2NTMzNDE3M2ZlZTcxNWMyMjJjYjgwNVxuICAgICAgLy8gVGVzdHMgZm9yIGV4aXN0ZW5jZSBvZiBzdGFuZGFyZCBnbG9iYWxzIGlzIHRvIGFsbG93IHN0eWxlLWxvYWRlclxuICAgICAgLy8gdG8gb3BlcmF0ZSBjb3JyZWN0bHkgaW50byBub24tc3RhbmRhcmQgZW52aXJvbm1lbnRzXG4gICAgICAvLyBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyL2lzc3Vlcy8xNzdcbiAgICAgIG1lbW8gPSBCb29sZWFuKHdpbmRvdyAmJiBkb2N1bWVudCAmJiBkb2N1bWVudC5hbGwgJiYgIXdpbmRvdy5hdG9iKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbWVtbztcbiAgfTtcbn0oKTtcblxudmFyIGdldFRhcmdldCA9IGZ1bmN0aW9uIGdldFRhcmdldCgpIHtcbiAgdmFyIG1lbW8gPSB7fTtcbiAgcmV0dXJuIGZ1bmN0aW9uIG1lbW9yaXplKHRhcmdldCkge1xuICAgIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpOyAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXG4gICAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgICB9XG5cbiAgICByZXR1cm4gbWVtb1t0YXJnZXRdO1xuICB9O1xufSgpO1xuXG52YXIgc3R5bGVzSW5Eb20gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRvbS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRvbVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdXG4gICAgfTtcblxuICAgIGlmIChpbmRleCAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdHlsZXNJbkRvbS5wdXNoKHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogYWRkU3R5bGUob2JqLCBvcHRpb25zKSxcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTtcbiAgdmFyIGF0dHJpYnV0ZXMgPSBvcHRpb25zLmF0dHJpYnV0ZXMgfHwge307XG5cbiAgaWYgKHR5cGVvZiBhdHRyaWJ1dGVzLm5vbmNlID09PSAndW5kZWZpbmVkJykge1xuICAgIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gJ3VuZGVmaW5lZCcgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgICBpZiAobm9uY2UpIHtcbiAgICAgIGF0dHJpYnV0ZXMubm9uY2UgPSBub25jZTtcbiAgICB9XG4gIH1cblxuICBPYmplY3Qua2V5cyhhdHRyaWJ1dGVzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICBzdHlsZS5zZXRBdHRyaWJ1dGUoa2V5LCBhdHRyaWJ1dGVzW2tleV0pO1xuICB9KTtcblxuICBpZiAodHlwZW9mIG9wdGlvbnMuaW5zZXJ0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgb3B0aW9ucy5pbnNlcnQoc3R5bGUpO1xuICB9IGVsc2Uge1xuICAgIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQob3B0aW9ucy5pbnNlcnQgfHwgJ2hlYWQnKTtcblxuICAgIGlmICghdGFyZ2V0KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICAgIH1cblxuICAgIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG4gIH1cblxuICByZXR1cm4gc3R5bGU7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlLnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzdHlsZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlKTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbnZhciByZXBsYWNlVGV4dCA9IGZ1bmN0aW9uIHJlcGxhY2VUZXh0KCkge1xuICB2YXIgdGV4dFN0b3JlID0gW107XG4gIHJldHVybiBmdW5jdGlvbiByZXBsYWNlKGluZGV4LCByZXBsYWNlbWVudCkge1xuICAgIHRleHRTdG9yZVtpbmRleF0gPSByZXBsYWNlbWVudDtcbiAgICByZXR1cm4gdGV4dFN0b3JlLmZpbHRlcihCb29sZWFuKS5qb2luKCdcXG4nKTtcbiAgfTtcbn0oKTtcblxuZnVuY3Rpb24gYXBwbHlUb1NpbmdsZXRvblRhZyhzdHlsZSwgaW5kZXgsIHJlbW92ZSwgb2JqKSB7XG4gIHZhciBjc3MgPSByZW1vdmUgPyAnJyA6IG9iai5tZWRpYSA/IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIikuY29uY2F0KG9iai5jc3MsIFwifVwiKSA6IG9iai5jc3M7IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cbiAgaWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSByZXBsYWNlVGV4dChpbmRleCwgY3NzKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgY3NzTm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcyk7XG4gICAgdmFyIGNoaWxkTm9kZXMgPSBzdHlsZS5jaGlsZE5vZGVzO1xuXG4gICAgaWYgKGNoaWxkTm9kZXNbaW5kZXhdKSB7XG4gICAgICBzdHlsZS5yZW1vdmVDaGlsZChjaGlsZE5vZGVzW2luZGV4XSk7XG4gICAgfVxuXG4gICAgaWYgKGNoaWxkTm9kZXMubGVuZ3RoKSB7XG4gICAgICBzdHlsZS5pbnNlcnRCZWZvcmUoY3NzTm9kZSwgY2hpbGROb2Rlc1tpbmRleF0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdHlsZS5hcHBlbmRDaGlsZChjc3NOb2RlKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gYXBwbHlUb1RhZyhzdHlsZSwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBvYmouY3NzO1xuICB2YXIgbWVkaWEgPSBvYmoubWVkaWE7XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChtZWRpYSkge1xuICAgIHN0eWxlLnNldEF0dHJpYnV0ZSgnbWVkaWEnLCBtZWRpYSk7XG4gIH0gZWxzZSB7XG4gICAgc3R5bGUucmVtb3ZlQXR0cmlidXRlKCdtZWRpYScpO1xuICB9XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgaWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlLmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKHN0eWxlLmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbnZhciBzaW5nbGV0b24gPSBudWxsO1xudmFyIHNpbmdsZXRvbkNvdW50ZXIgPSAwO1xuXG5mdW5jdGlvbiBhZGRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlO1xuICB2YXIgdXBkYXRlO1xuICB2YXIgcmVtb3ZlO1xuXG4gIGlmIChvcHRpb25zLnNpbmdsZXRvbikge1xuICAgIHZhciBzdHlsZUluZGV4ID0gc2luZ2xldG9uQ291bnRlcisrO1xuICAgIHN0eWxlID0gc2luZ2xldG9uIHx8IChzaW5nbGV0b24gPSBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykpO1xuICAgIHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgZmFsc2UpO1xuICAgIHJlbW92ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgdHJ1ZSk7XG4gIH0gZWxzZSB7XG4gICAgc3R5bGUgPSBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gICAgdXBkYXRlID0gYXBwbHlUb1RhZy5iaW5kKG51bGwsIHN0eWxlLCBvcHRpb25zKTtcblxuICAgIHJlbW92ZSA9IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG4gICAgfTtcbiAgfVxuXG4gIHVwZGF0ZShvYmopO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlU3R5bGUobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICByZW1vdmUoKTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307IC8vIEZvcmNlIHNpbmdsZS10YWcgc29sdXRpb24gb24gSUU2LTksIHdoaWNoIGhhcyBhIGhhcmQgbGltaXQgb24gdGhlICMgb2YgPHN0eWxlPlxuICAvLyB0YWdzIGl0IHdpbGwgYWxsb3cgb24gYSBwYWdlXG5cbiAgaWYgKCFvcHRpb25zLnNpbmdsZXRvbiAmJiB0eXBlb2Ygb3B0aW9ucy5zaW5nbGV0b24gIT09ICdib29sZWFuJykge1xuICAgIG9wdGlvbnMuc2luZ2xldG9uID0gaXNPbGRJRSgpO1xuICB9XG5cbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChuZXdMaXN0KSAhPT0gJ1tvYmplY3QgQXJyYXldJykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRvbVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5Eb21bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5Eb20uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuV0lOTkVSU19MSU1JVCA9IGV4cG9ydHMuR0FSQUdFX0xJTUlUID0gZXhwb3J0cy5FTkdJTkVfVVJMID0gZXhwb3J0cy5XSU5ORVJTX1VSTCA9IGV4cG9ydHMuR0FSQUdFX1VSTCA9IGV4cG9ydHMuVVJMID0gdm9pZCAwO1xuZXhwb3J0cy5VUkwgPSBcImh0dHA6Ly8xMjcuMC4wLjE6MzAwMFwiO1xuZXhwb3J0cy5HQVJBR0VfVVJMID0gYCR7ZXhwb3J0cy5VUkx9L2dhcmFnZWA7XG5leHBvcnRzLldJTk5FUlNfVVJMID0gYCR7ZXhwb3J0cy5VUkx9L3dpbm5lcnNgO1xuZXhwb3J0cy5FTkdJTkVfVVJMID0gYCR7ZXhwb3J0cy5VUkx9L2VuZ2luZWA7XG5leHBvcnRzLkdBUkFHRV9MSU1JVCA9IDc7XG5leHBvcnRzLldJTk5FUlNfTElNSVQgPSAxMDtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWxldGVDYXJBUEkgPSBleHBvcnRzLnVwZGF0ZUNhckFQSSA9IGV4cG9ydHMuY3JlYXRlQ2FyQVBJID0gdm9pZCAwO1xuY29uc3QgY29uc3RhbnRzXzEgPSByZXF1aXJlKFwiLi9jb25zdGFudHNcIik7XG4vLyBDcmVhdGVcbmFzeW5jIGZ1bmN0aW9uIGNyZWF0ZUNhckFQSShib2R5KSB7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYCR7Y29uc3RhbnRzXzEuR0FSQUdFX1VSTH1gLCB7XG4gICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGJvZHkpLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgfSxcbiAgICB9KTtcbiAgICBjb25zdCBjYXIgPSBhd2FpdCByZXMuanNvbigpO1xuICAgIHJldHVybiBjYXI7XG59XG5leHBvcnRzLmNyZWF0ZUNhckFQSSA9IGNyZWF0ZUNhckFQSTtcbi8vIFVwZGF0ZVxuYXN5bmMgZnVuY3Rpb24gdXBkYXRlQ2FyQVBJKGlkLCBib2R5KSB7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYCR7Y29uc3RhbnRzXzEuR0FSQUdFX1VSTH0vJHtpZH1gLCB7XG4gICAgICAgIG1ldGhvZDogXCJQVVRcIixcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoYm9keSksXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICB9LFxuICAgIH0pO1xuICAgIGNvbnN0IGNhciA9IGF3YWl0IHJlcy5qc29uKCk7XG4gICAgcmV0dXJuIGNhcjtcbn1cbmV4cG9ydHMudXBkYXRlQ2FyQVBJID0gdXBkYXRlQ2FyQVBJO1xuLy8gR2V0IGNhcnNcbmFzeW5jIGZ1bmN0aW9uIGRlbGV0ZUNhckFQSShpZCkge1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGAke2NvbnN0YW50c18xLkdBUkFHRV9VUkx9LyR7aWR9YCwge1xuICAgICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgfSk7XG4gICAgY29uc3QgZGF0YSA9IHJlcy5qc29uKCk7XG4gICAgcmV0dXJuIGRhdGE7XG59XG5leHBvcnRzLmRlbGV0ZUNhckFQSSA9IGRlbGV0ZUNhckFQSTtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWxldGVXaW5uZXJBUEkgPSBleHBvcnRzLnVwZGF0ZVdpbm5lckFQSSA9IGV4cG9ydHMuc2F2ZVdpbm5lckFQSSA9IHZvaWQgMDtcbmNvbnN0IGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4vY29uc3RhbnRzXCIpO1xuLy8gU2F2ZSB3aW5uZXJcbmFzeW5jIGZ1bmN0aW9uIHNhdmVXaW5uZXJBUEkoYm9keSkge1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGAke2NvbnN0YW50c18xLldJTk5FUlNfVVJMfWAsIHtcbiAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoYm9keSksXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICB9LFxuICAgIH0pO1xuICAgIGNvbnN0IHdpbm5lciA9IGF3YWl0IHJlcy5qc29uKCk7XG4gICAgcmV0dXJuIHdpbm5lcjtcbn1cbmV4cG9ydHMuc2F2ZVdpbm5lckFQSSA9IHNhdmVXaW5uZXJBUEk7XG4vLyBVcGRhdGVcbmFzeW5jIGZ1bmN0aW9uIHVwZGF0ZVdpbm5lckFQSShpZCwgYm9keSkge1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGAke2NvbnN0YW50c18xLldJTk5FUlNfVVJMfS8ke2lkfWAsIHtcbiAgICAgICAgbWV0aG9kOiBcIlBVVFwiLFxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShib2R5KSxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgIH0sXG4gICAgfSk7XG4gICAgY29uc3QgY2FyID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgICByZXR1cm4gY2FyO1xufVxuZXhwb3J0cy51cGRhdGVXaW5uZXJBUEkgPSB1cGRhdGVXaW5uZXJBUEk7XG4vLyBEZWxldGUgd2lubmVyXG5hc3luYyBmdW5jdGlvbiBkZWxldGVXaW5uZXJBUEkoaWQpIHtcbiAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgJHtjb25zdGFudHNfMS5XSU5ORVJTX1VSTH0vJHtpZH1gLCB7XG4gICAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcbiAgICB9KTtcbiAgICBjb25zdCBkYXRhID0gcmVzLmpzb24oKTtcbiAgICByZXR1cm4gZGF0YTtcbn1cbmV4cG9ydHMuZGVsZXRlV2lubmVyQVBJID0gZGVsZXRlV2lubmVyQVBJO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRyaXZlQ2FyQVBJID0gZXhwb3J0cy5zdG9wQ2FyQVBJID0gZXhwb3J0cy5zdGFydENhckFQSSA9IHZvaWQgMDtcbmNvbnN0IGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4vY29uc3RhbnRzXCIpO1xuLy8gU3RhcnQgY2FyXG5hc3luYyBmdW5jdGlvbiBzdGFydENhckFQSShpZCkge1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGAke2NvbnN0YW50c18xLkVOR0lORV9VUkx9P2lkPSR7aWR9JnN0YXR1cz1zdGFydGVkYCwge1xuICAgICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgICB9KTtcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgICByZXR1cm4gZGF0YTtcbn1cbmV4cG9ydHMuc3RhcnRDYXJBUEkgPSBzdGFydENhckFQSTtcbi8vIFN0b3AgY2FyXG5hc3luYyBmdW5jdGlvbiBzdG9wQ2FyQVBJKGlkKSB7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYCR7Y29uc3RhbnRzXzEuRU5HSU5FX1VSTH0/aWQ9JHtpZH0mc3RhdHVzPXN0b3BwZWRgLCB7XG4gICAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgIH0pO1xuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuICAgIHJldHVybiBkYXRhO1xufVxuZXhwb3J0cy5zdG9wQ2FyQVBJID0gc3RvcENhckFQSTtcbi8vIERyaXZlIGNhclxuYXN5bmMgZnVuY3Rpb24gZHJpdmVDYXJBUEkoaWQpIHtcbiAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgJHtjb25zdGFudHNfMS5FTkdJTkVfVVJMfT9pZD0ke2lkfSZzdGF0dXM9ZHJpdmVgLCB7XG4gICAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgIH0pLmNhdGNoKCk7XG4gICAgaWYgKHJlcy5zdGF0dXMgIT09IDIwMCkge1xuICAgICAgICByZXR1cm4geyBzdWNjZXNzOiBmYWxzZSB9O1xuICAgIH1cbiAgICByZXR1cm4geyAuLi4oYXdhaXQgcmVzLmpzb24oKSkgfTtcbn1cbmV4cG9ydHMuZHJpdmVDYXJBUEkgPSBkcml2ZUNhckFQSTtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRDYXJBUEkgPSBleHBvcnRzLmdldENhcnNBUEkgPSB2b2lkIDA7XG5jb25zdCBjb25zdGFudHNfMSA9IHJlcXVpcmUoXCIuL2NvbnN0YW50c1wiKTtcbi8vIEdldCBjYXJzXG5hc3luYyBmdW5jdGlvbiBnZXRDYXJzQVBJKHBhZ2UgPSAxKSB7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYCR7Y29uc3RhbnRzXzEuR0FSQUdFX1VSTH0/X3BhZ2U9JHtwYWdlfSZfbGltaXQ9JHtjb25zdGFudHNfMS5HQVJBR0VfTElNSVR9YCk7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG4gICAgY29uc3QgdG90YWxDb3VudCA9IHJlcy5oZWFkZXJzLmdldChcIlgtVG90YWwtQ291bnRcIik7XG4gICAgaWYgKCF0b3RhbENvdW50KSB7XG4gICAgICAgIHRocm93IEVycm9yKFwiQ291bGRuJ3QgZ2V0IGRhdGEgZnJvbSBYLVRvdGFsLUNvdW50IGhlYWRlci5cIik7XG4gICAgfVxuICAgIGNvbnN0IGNhcnMgPSB7XG4gICAgICAgIGl0ZW1zOiBkYXRhLFxuICAgICAgICBjb3VudDogdG90YWxDb3VudCxcbiAgICB9O1xuICAgIHJldHVybiBjYXJzO1xufVxuZXhwb3J0cy5nZXRDYXJzQVBJID0gZ2V0Q2Fyc0FQSTtcbi8vIEdldCBjYXJcbmFzeW5jIGZ1bmN0aW9uIGdldENhckFQSShpZCkge1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGAke2NvbnN0YW50c18xLkdBUkFHRV9VUkx9LyR7aWR9YCk7XG4gICAgY29uc3QgY2FyID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgICByZXR1cm4gY2FyO1xufVxuZXhwb3J0cy5nZXRDYXJBUEkgPSBnZXRDYXJBUEk7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0V2lubmVyQVBJID0gZXhwb3J0cy5nZXRXaW5uZXJzQVBJID0gdm9pZCAwO1xuY29uc3QgY29uc3RhbnRzXzEgPSByZXF1aXJlKFwiLi9jb25zdGFudHNcIik7XG4vLyBXaW5uZXJzXG5hc3luYyBmdW5jdGlvbiBnZXRXaW5uZXJzQVBJKHsgcGFnZSwgc29ydCA9IFwiaWRcIiwgb3JkZXIgPSBcIkRFU0NcIiB9KSB7XG4gICAgY29uc3QgdXJsID0gYCR7Y29uc3RhbnRzXzEuV0lOTkVSU19VUkx9P19wYWdlPSR7cGFnZX0mX2xpbWl0PSR7Y29uc3RhbnRzXzEuV0lOTkVSU19MSU1JVH0mX3NvcnQ9JHtzb3J0fSZfb3JkZXI9JHtvcmRlcn1gO1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKHVybCk7XG4gICAgY29uc3Qgd2lubmVycyA9IGF3YWl0IHJlcy5qc29uKCk7XG4gICAgY29uc3QgdG90YWxDb3VudCA9IHJlcy5oZWFkZXJzLmdldChcIlgtVG90YWwtQ291bnRcIik7XG4gICAgaWYgKCF0b3RhbENvdW50KSB7XG4gICAgICAgIHRocm93IEVycm9yKFwiQ291bGRuJ3QgZ2V0IHRvdGFsIHdpbm5lcnMuXCIpO1xuICAgIH1cbiAgICBjb25zdCB3aW5uZXJzRGF0YSA9IHtcbiAgICAgICAgY2Fyczogd2lubmVycyxcbiAgICAgICAgY291bnQ6IHRvdGFsQ291bnQsXG4gICAgfTtcbiAgICByZXR1cm4gd2lubmVyc0RhdGE7XG59XG5leHBvcnRzLmdldFdpbm5lcnNBUEkgPSBnZXRXaW5uZXJzQVBJO1xuLy8gR2V0IHdpbm5lclxuYXN5bmMgZnVuY3Rpb24gZ2V0V2lubmVyQVBJKGlkKSB7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYCR7Y29uc3RhbnRzXzEuV0lOTkVSU19VUkx9LyR7aWR9YCk7XG4gICAgY29uc3Qgd2lubmVyID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgICByZXR1cm4gd2lubmVyO1xufVxuZXhwb3J0cy5nZXRXaW5uZXJBUEkgPSBnZXRXaW5uZXJBUEk7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucmVuZGVyQXBwID0gdm9pZCAwO1xuY29uc3QgaGVhZGVyXzEgPSByZXF1aXJlKFwiLi9oZWFkZXIvaGVhZGVyXCIpO1xuY29uc3QgZm9vdGVyXzEgPSByZXF1aXJlKFwiLi9mb290ZXIvZm9vdGVyXCIpO1xuY29uc3QgbWFpbl8xID0gcmVxdWlyZShcIi4vbWFpbi9tYWluXCIpO1xuY29uc3QgcG9wdXBfMSA9IHJlcXVpcmUoXCIuL21haW4vcG9wdXAvcG9wdXBcIik7XG4vLyBSZW5kZXIgQXBwXG5mdW5jdGlvbiByZW5kZXJBcHAoKSB7XG4gICAgY29uc3QgaGVhZGVyID0gKDAsIGhlYWRlcl8xLmNyZWF0ZUhlYWRlcikoKTtcbiAgICBjb25zdCBtYWluID0gKDAsIG1haW5fMS5jcmVhdGVNYWluKSgpO1xuICAgIGNvbnN0IGZvb3RlciA9ICgwLCBmb290ZXJfMS5jcmVhdGVGb290ZXIpKCk7XG4gICAgY29uc3QgcG9wdXAgPSAoMCwgcG9wdXBfMS5jcmVhdGVXaW5Qb3B1cCkoKTtcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZChoZWFkZXIsIG1haW4sIGZvb3RlciwgcG9wdXApO1xufVxuZXhwb3J0cy5yZW5kZXJBcHAgPSByZW5kZXJBcHA7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlRm9vdGVyID0gdm9pZCAwO1xuY29uc3QgY3JlYXRlX2VsZW1lbnRfMSA9IHJlcXVpcmUoXCIuLi8uLi91dGlscy9jcmVhdGUtZWxlbWVudFwiKTtcbmNvbnN0IFNDSE9PTF9VUkwgPSBcImh0dHBzOi8vcnMuc2Nob29sL1wiO1xuY29uc3QgR0lUSFVCX1VSTCA9IFwiaHR0cHM6Ly9naXRodWIuY29tL0hlcmVFYXN0XCI7XG5jb25zdCBTQ0hPT0xfTElOS19URVhUID0gXCJSUyBTY2hvb2wgKDIwMjMpXCI7XG5jb25zdCBHSVRIVUJfTElOS19URVhUID0gXCJIZXJlIEVhc3RcIjtcbmNvbnN0IFBST0pFQ1RfTkFNRSA9IFwiQXN5bmMgUmFjZSxcIjtcbi8vIEZPT1RFUlxuZnVuY3Rpb24gY3JlYXRlRm9vdGVyKCkge1xuICAgIGNvbnN0IGZvb3RlciA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmNyZWF0ZUVsZW1lbnQpKFwiZm9vdGVyXCIsIFtcIi5mb290ZXJcIiAvKiBTZWxlY3Rvci5Gb290ZXIgKi9dKTtcbiAgICBjb25zdCBmb290ZXJDb250YWluZXIgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVFbGVtZW50KShcImZvb3RlclwiLCBbXCIuZm9vdGVyX19jb250YWluZXJcIiAvKiBTZWxlY3Rvci5Gb290ZXJDb250YWluZXIgKi9dKTtcbiAgICBjb25zdCBwcm9qZWN0SW5mbyA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmNyZWF0ZUVsZW1lbnQpKFwiZGl2XCIsIFtcIi5mb290ZXJfX2luZm9cIiAvKiBTZWxlY3Rvci5Gb290ZXJJbmZvICovXSk7XG4gICAgY29uc3QgZ2l0aHViSW5mbyA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmNyZWF0ZUVsZW1lbnQpKFwiZGl2XCIsIFtcIi5mb290ZXJfX2luZm9cIiAvKiBTZWxlY3Rvci5Gb290ZXJJbmZvICovXSk7XG4gICAgY29uc3QgcHJvamVjdE5hbWUgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVFbGVtZW50KShcInNwYW5cIiwgW10sIFBST0pFQ1RfTkFNRSk7XG4gICAgY29uc3Qgc2Nob29sTGluayA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmNyZWF0ZUxpbmspKFNDSE9PTF9MSU5LX1RFWFQsIFNDSE9PTF9VUkwpO1xuICAgIGNvbnN0IGdpdGh1YkxpbmsgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVMaW5rKShHSVRIVUJfTElOS19URVhULCBHSVRIVUJfVVJMKTtcbiAgICBwcm9qZWN0SW5mby5hcHBlbmQocHJvamVjdE5hbWUsIHNjaG9vbExpbmspO1xuICAgIGdpdGh1YkluZm8uYXBwZW5kKGdpdGh1YkxpbmspO1xuICAgIGZvb3RlckNvbnRhaW5lci5hcHBlbmQocHJvamVjdEluZm8sIGdpdGh1YkluZm8pO1xuICAgIGZvb3Rlci5hcHBlbmQoZm9vdGVyQ29udGFpbmVyKTtcbiAgICByZXR1cm4gZm9vdGVyO1xufVxuZXhwb3J0cy5jcmVhdGVGb290ZXIgPSBjcmVhdGVGb290ZXI7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlQmFzaWNGb3JtID0gdm9pZCAwO1xuY29uc3QgY3JlYXRlX2VsZW1lbnRfMSA9IHJlcXVpcmUoXCIuLi8uLi91dGlscy9jcmVhdGUtZWxlbWVudFwiKTtcbmNvbnN0IFBMQUNFSE9MREVSID0gXCJDYXIgbmFtZS4uLlwiO1xuY29uc3QgQ09MT1IgPSBcIiNmNmI3M2NcIjtcbi8vIEJhc2ljIGZvcm1cbmZ1bmN0aW9uIGNyZWF0ZUJhc2ljRm9ybShidXR0b25OYW1lKSB7XG4gICAgY29uc3QgZm9ybUNvbnRhaW5lciA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmNyZWF0ZUVsZW1lbnQpKFwiZGl2XCIsIFtcIi5mb3JtX19jb250YWluZXJcIiAvKiBTZWxlY3Rvci5Gb3JtQ29udGFpbmVyICovXSk7XG4gICAgY29uc3QgdGV4dElucHV0ID0gKDAsIGNyZWF0ZV9lbGVtZW50XzEuY3JlYXRlSW5wdXQpKFwidGV4dFwiLCBidXR0b25OYW1lKTtcbiAgICB0ZXh0SW5wdXQucGxhY2Vob2xkZXIgPSBQTEFDRUhPTERFUjtcbiAgICBjb25zdCBjb2xvcklucHV0ID0gKDAsIGNyZWF0ZV9lbGVtZW50XzEuY3JlYXRlSW5wdXQpKFwiY29sb3JcIiwgYnV0dG9uTmFtZSk7XG4gICAgY29sb3JJbnB1dC52YWx1ZSA9IENPTE9SO1xuICAgIGNvbnN0IGJ1dHRvbkNyZWF0ZSA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmNyZWF0ZUJ1dHRvbikoYnV0dG9uTmFtZSwgW2AuYnV0dG9uX18ke2J1dHRvbk5hbWV9YF0pO1xuICAgIGZvcm1Db250YWluZXIuYXBwZW5kKHRleHRJbnB1dCwgY29sb3JJbnB1dCwgYnV0dG9uQ3JlYXRlKTtcbiAgICByZXR1cm4gZm9ybUNvbnRhaW5lcjtcbn1cbmV4cG9ydHMuY3JlYXRlQmFzaWNGb3JtID0gY3JlYXRlQmFzaWNGb3JtO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZUhlYWRlckZvcm1zID0gZXhwb3J0cy5jcmVhdGVVcGRhdGVGb3JtID0gZXhwb3J0cy5jcmVhdGVDcmVhdGVGb3JtID0gdm9pZCAwO1xuY29uc3QgY3JlYXRlX2VsZW1lbnRfMSA9IHJlcXVpcmUoXCIuLi8uLi91dGlscy9jcmVhdGUtZWxlbWVudFwiKTtcbmNvbnN0IGZvcm1fYmFzaWNfMSA9IHJlcXVpcmUoXCIuL2Zvcm0tYmFzaWNcIik7XG5jb25zdCBCVVRUT05fR0VORVJBVEUgPSBcIkdlbmVyYXRlIENhcnNcIjtcbmNvbnN0IFRJVExFX1RFWFQgPSBcIkVkaXQgY2FyIOKame+4j1wiO1xuLy8gQ1JFQVRFXG5mdW5jdGlvbiBjcmVhdGVDcmVhdGVGb3JtKCkge1xuICAgIGNvbnN0IGZvcm1DcmVhdGUgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVFbGVtZW50KShcImZvcm1cIiwgW1wiLmZvcm1fX2NyZWF0ZVwiIC8qIFNlbGVjdG9yLkZvcm1DcmVhdGUgKi9dKTtcbiAgICBjb25zdCBmb3JtRWxlbWVudHMgPSAoMCwgZm9ybV9iYXNpY18xLmNyZWF0ZUJhc2ljRm9ybSkoXCJjcmVhdGVcIiAvKiBCdXR0b24uQ3JlYXRlICovKTtcbiAgICBjb25zdCBnZW5lcmF0ZUJ1dHRvbiA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmNyZWF0ZUJ1dHRvbikoXCJnZW5lcmF0ZVwiIC8qIEJ1dHRvbi5HZW5lcmF0ZSAqLywgW1wiLmJ1dHRvbl9fZ2VuZXJhdGVcIiAvKiBTZWxlY3Rvci5CdXR0b25HZW5lcmF0ZSAqL10pO1xuICAgIGdlbmVyYXRlQnV0dG9uLnRleHRDb250ZW50ID0gQlVUVE9OX0dFTkVSQVRFO1xuICAgIGNvbnN0IGRvdHMgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVFbGVtZW50KShcInNwYW5cIik7XG4gICAgZm9ybUNyZWF0ZS5hcHBlbmQoZm9ybUVsZW1lbnRzLCBkb3RzLCBnZW5lcmF0ZUJ1dHRvbik7XG4gICAgcmV0dXJuIGZvcm1DcmVhdGU7XG59XG5leHBvcnRzLmNyZWF0ZUNyZWF0ZUZvcm0gPSBjcmVhdGVDcmVhdGVGb3JtO1xuLy8gVVBEQVRFXG5mdW5jdGlvbiBjcmVhdGVVcGRhdGVGb3JtKCkge1xuICAgIGNvbnN0IGZvcm1VcGRhdGUgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVFbGVtZW50KShcImZvcm1cIiwgW1wiLmZvcm1fX3VwZGF0ZVwiIC8qIFNlbGVjdG9yLkZvcm1VcGRhdGUgKi9dKTtcbiAgICBjb25zdCBmb3JtRWxlbWVudHMgPSAoMCwgZm9ybV9iYXNpY18xLmNyZWF0ZUJhc2ljRm9ybSkoXCJ1cGRhdGVcIiAvKiBCdXR0b24uVXBkYXRlICovKTtcbiAgICBjb25zdCBidXR0b25DYW5jZWwgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVCdXR0b24pKFwiY2FuY2VsXCIgLyogQnV0dG9uLkNhbmNlbEVkaXQgKi8sIFtcIi5idXR0b25fX2NhbmNlbFwiIC8qIFNlbGVjdG9yLkJ1dHRvbkNhbmNlbCAqL10pO1xuICAgIGNvbnN0IHRpdGxlID0gKDAsIGNyZWF0ZV9lbGVtZW50XzEuY3JlYXRlRWxlbWVudCkoXCJoMlwiLCBbXSwgVElUTEVfVEVYVCk7XG4gICAgZm9ybUVsZW1lbnRzLmFwcGVuZChidXR0b25DYW5jZWwpO1xuICAgIGZvcm1VcGRhdGUuYXBwZW5kKHRpdGxlLCBmb3JtRWxlbWVudHMpO1xuICAgIHJldHVybiBmb3JtVXBkYXRlO1xufVxuZXhwb3J0cy5jcmVhdGVVcGRhdGVGb3JtID0gY3JlYXRlVXBkYXRlRm9ybTtcbi8vIEZPUk1TXG5mdW5jdGlvbiBjcmVhdGVIZWFkZXJGb3JtcygpIHtcbiAgICBjb25zdCBjb250YWluZXIgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVFbGVtZW50KShcImRpdlwiLCBbXCIuZm9ybXNfX2NvbnRhaW5lclwiIC8qIFNlbGVjdG9yLkZvcm1zQ29udGFpbmVyICovXSk7XG4gICAgY29uc3QgZm9ybUNyZWF0ZSA9IGNyZWF0ZUNyZWF0ZUZvcm0oKTtcbiAgICBjb25zdCBmb3JtVXBkYXRlID0gY3JlYXRlVXBkYXRlRm9ybSgpO1xuICAgIGNvbnRhaW5lci5hcHBlbmQoZm9ybUNyZWF0ZSwgZm9ybVVwZGF0ZSk7XG4gICAgcmV0dXJuIGNvbnRhaW5lcjtcbn1cbmV4cG9ydHMuY3JlYXRlSGVhZGVyRm9ybXMgPSBjcmVhdGVIZWFkZXJGb3JtcztcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVIZWFkZXIgPSB2b2lkIDA7XG5jb25zdCBjcmVhdGVfZWxlbWVudF8xID0gcmVxdWlyZShcIi4uLy4uL3V0aWxzL2NyZWF0ZS1lbGVtZW50XCIpO1xuY29uc3Qgdmlld19idXR0b25zXzEgPSByZXF1aXJlKFwiLi92aWV3LWJ1dHRvbnNcIik7XG5jb25zdCBmb3Jtc18xID0gcmVxdWlyZShcIi4vZm9ybXNcIik7XG4vLyBIZWFkZXJcbmZ1bmN0aW9uIGNyZWF0ZUhlYWRlcigpIHtcbiAgICBjb25zdCBoZWFkZXIgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVFbGVtZW50KShcImhlYWRlclwiLCBbXCIuaGVhZGVyXCIgLyogU2VsZWN0b3IuSGVhZGVyICovXSk7XG4gICAgY29uc3QgaGVhZGVyQ29udGFpbmVyID0gKDAsIGNyZWF0ZV9lbGVtZW50XzEuY3JlYXRlRWxlbWVudCkoXCJkaXZcIiwgW1wiLmhlYWRlcl9fY29udGFpbmVyXCIgLyogU2VsZWN0b3IuSGVhZGVyQ29udGFpbmVyICovXSk7XG4gICAgY29uc3QgaGVhZGVyQnV0dG9ucyA9ICgwLCB2aWV3X2J1dHRvbnNfMS5jcmVhdGVIZWFkZXJCdXR0b25zKSgpO1xuICAgIGNvbnN0IGhlYWRlckZvcm1zID0gKDAsIGZvcm1zXzEuY3JlYXRlSGVhZGVyRm9ybXMpKCk7XG4gICAgaGVhZGVyQ29udGFpbmVyLmFwcGVuZChoZWFkZXJCdXR0b25zLCBoZWFkZXJGb3Jtcyk7XG4gICAgaGVhZGVyLmFwcGVuZChoZWFkZXJDb250YWluZXIpO1xuICAgIHJldHVybiBoZWFkZXI7XG59XG5leHBvcnRzLmNyZWF0ZUhlYWRlciA9IGNyZWF0ZUhlYWRlcjtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVIZWFkZXJCdXR0b25zID0gdm9pZCAwO1xuY29uc3QgY3JlYXRlX2VsZW1lbnRfMSA9IHJlcXVpcmUoXCIuLi8uLi91dGlscy9jcmVhdGUtZWxlbWVudFwiKTtcbi8vIEhlYWRlciBidXR0b25zXG5mdW5jdGlvbiBjcmVhdGVIZWFkZXJCdXR0b25zKCkge1xuICAgIGNvbnN0IGNvbnRhaW5lciA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmNyZWF0ZUVsZW1lbnQpKFwiZGl2XCIsIFtcIi5oZWFkZXJfX2J1dHRvbnNcIiAvKiBTZWxlY3Rvci5IZWFkZXJCdXR0b25zICovXSk7XG4gICAgY29uc3QgYnViYmxlRWxlbWVudCA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmNyZWF0ZUVsZW1lbnQpKFwic3BhblwiLCBbXCIuYnViYmxlXCIgLyogU2VsZWN0b3IuQnViYmxlICovXSk7XG4gICAgY29uc3QgZ2FyYWdlQnV0dG9uID0gKDAsIGNyZWF0ZV9lbGVtZW50XzEuY3JlYXRlQnV0dG9uKShcImdhcmFnZVwiIC8qIEJ1dHRvbi5HYXJhZ2UgKi8sIFtcIi5idXR0b25fX3ZpZXdcIiAvKiBTZWxlY3Rvci5WaWV3QnV0dG9uICovXSk7XG4gICAgY29uc3Qgd2lubmVyc0J1dHRvbiA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmNyZWF0ZUJ1dHRvbikoXCJ3aW5uZXJzXCIgLyogQnV0dG9uLldpbm5lcnMgKi8sIFtcIi5idXR0b25fX3ZpZXdcIiAvKiBTZWxlY3Rvci5WaWV3QnV0dG9uICovXSk7XG4gICAgY29udGFpbmVyLmFwcGVuZChidWJibGVFbGVtZW50LCBnYXJhZ2VCdXR0b24sIHdpbm5lcnNCdXR0b24pO1xuICAgIHJldHVybiBjb250YWluZXI7XG59XG5leHBvcnRzLmNyZWF0ZUhlYWRlckJ1dHRvbnMgPSBjcmVhdGVIZWFkZXJCdXR0b25zO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZU1haW4gPSB2b2lkIDA7XG5jb25zdCBjcmVhdGVfZWxlbWVudF8xID0gcmVxdWlyZShcIi4uLy4uL3V0aWxzL2NyZWF0ZS1lbGVtZW50XCIpO1xuY29uc3Qgdmlld19oZWFkZXJfMSA9IHJlcXVpcmUoXCIuL3BhZ2UtaGVhZGVyL3ZpZXctaGVhZGVyXCIpO1xuY29uc3QgcGFnaW5hdGlvbl8xID0gcmVxdWlyZShcIi4vcGFnaW5hdGlvbi9wYWdpbmF0aW9uXCIpO1xuLy8gTWFpblxuZnVuY3Rpb24gY3JlYXRlTWFpbigpIHtcbiAgICBjb25zdCBtYWluID0gKDAsIGNyZWF0ZV9lbGVtZW50XzEuY3JlYXRlRWxlbWVudCkoXCJtYWluXCIsIFtcIi5tYWluXCIgLyogU2VsZWN0b3IuTWFpbiAqL10pO1xuICAgIGNvbnN0IG1haW5Db250YWluZXIgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVFbGVtZW50KShcImRpdlwiLCBbXCIubWFpbl9fY29udGFpbmVyXCIgLyogU2VsZWN0b3IuTWFpbkNvbnRhaW5lciAqL10pO1xuICAgIGNvbnN0IHZpZXdIZWFkZXIgPSAoMCwgdmlld19oZWFkZXJfMS5jcmVhdGVWaWV3SGVhZGVyKSgpO1xuICAgIGNvbnN0IHZpZXdCb2R5ID0gKDAsIGNyZWF0ZV9lbGVtZW50XzEuY3JlYXRlRWxlbWVudCkoXCJkaXZcIiwgW1wiLnZpZXdfX2JvZHlcIiAvKiBTZWxlY3Rvci5WaWV3Qm9keSAqL10pO1xuICAgIGNvbnN0IHBhZ2luYXRpb24gPSAoMCwgcGFnaW5hdGlvbl8xLmNyZWF0ZVBhZ2luYXRpb24pKCk7XG4gICAgbWFpbkNvbnRhaW5lci5hcHBlbmQodmlld0hlYWRlciwgdmlld0JvZHksIHBhZ2luYXRpb24pO1xuICAgIG1haW4uYXBwZW5kKG1haW5Db250YWluZXIpO1xuICAgIHJldHVybiBtYWluO1xufVxuZXhwb3J0cy5jcmVhdGVNYWluID0gY3JlYXRlTWFpbjtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVDb3VudEVsZW1lbnQgPSB2b2lkIDA7XG5jb25zdCBjcmVhdGVfZWxlbWVudF8xID0gcmVxdWlyZShcIi4uLy4uLy4uL3V0aWxzL2NyZWF0ZS1lbGVtZW50XCIpO1xuLy8gQ291bnQgZWxlbWVudFxuZnVuY3Rpb24gY3JlYXRlQ291bnRFbGVtZW50KG4gPSAwKSB7XG4gICAgY29uc3QgY291bnRDb250YWluZXIgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVFbGVtZW50KShcImRpdlwiLCBbXCIudmlld19fY291bnRcIiAvKiBTZWxlY3Rvci5DYXJzQ291bnQgKi9dKTtcbiAgICBjb25zdCBvcGVuQnIgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVFbGVtZW50KShcInNwYW5cIiwgW10sIFwiKFwiKTtcbiAgICBjb25zdCBjbG9zZUJyID0gKDAsIGNyZWF0ZV9lbGVtZW50XzEuY3JlYXRlRWxlbWVudCkoXCJzcGFuXCIsIFtdLCBcIilcIik7XG4gICAgY29uc3QgY291bnQgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVFbGVtZW50KShcInNwYW5cIiwgW1wiLmNvdW50XCIgLyogU2VsZWN0b3IuQ3VycmVudENvdW50ICovXSwgU3RyaW5nKG4pKTtcbiAgICBjb3VudENvbnRhaW5lci5hcHBlbmQob3BlbkJyLCBjb3VudCwgY2xvc2VCcik7XG4gICAgcmV0dXJuIGNvdW50Q29udGFpbmVyO1xufVxuZXhwb3J0cy5jcmVhdGVDb3VudEVsZW1lbnQgPSBjcmVhdGVDb3VudEVsZW1lbnQ7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlR2FyYWdlQnV0dG9ucyA9IHZvaWQgMDtcbmNvbnN0IGNyZWF0ZV9lbGVtZW50XzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vdXRpbHMvY3JlYXRlLWVsZW1lbnRcIik7XG4vLyBHYXJhZ2UgYnV0dG9uc1xuZnVuY3Rpb24gY3JlYXRlR2FyYWdlQnV0dG9ucygpIHtcbiAgICBjb25zdCBjb250YWluZXIgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVFbGVtZW50KShcImRpdlwiLCBbXCIudmlld19fYnV0dG9uc1wiIC8qIFNlbGVjdG9yLlZpZXdCdXR0b25zICovXSk7XG4gICAgY29uc3QgYnV0dG9uUmFjZSA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmNyZWF0ZUJ1dHRvbikoXCJyYWNlXCIgLyogQnV0dG9uLlJhY2UgKi8sIFtcIi5idXR0b25fX3JhY2VcIiAvKiBTZWxlY3Rvci5CdXR0b25SYWNlICovXSk7XG4gICAgY29uc3QgYnV0dG9uUmVzZXQgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVCdXR0b24pKFwicmVzZXRcIiAvKiBCdXR0b24uUmVzZXQgKi8sIFtcIi5idXR0b25fX3Jlc2V0XCIgLyogU2VsZWN0b3IuQnV0dG9uUmVzZXQgKi9dKTtcbiAgICBjb250YWluZXIuYXBwZW5kKGJ1dHRvblJhY2UsIGJ1dHRvblJlc2V0KTtcbiAgICByZXR1cm4gY29udGFpbmVyO1xufVxuZXhwb3J0cy5jcmVhdGVHYXJhZ2VCdXR0b25zID0gY3JlYXRlR2FyYWdlQnV0dG9ucztcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVWaWV3SGVhZGVyID0gdm9pZCAwO1xuY29uc3QgY3JlYXRlX2VsZW1lbnRfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi91dGlscy9jcmVhdGUtZWxlbWVudFwiKTtcbmNvbnN0IGNvdW50X2VsZW1lbnRfMSA9IHJlcXVpcmUoXCIuL2NvdW50LWVsZW1lbnRcIik7XG5jb25zdCBnYXJhZ2VfYnV0dG9uc18xID0gcmVxdWlyZShcIi4vZ2FyYWdlLWJ1dHRvbnNcIik7XG4vLyBQYWdlIGhlYWRlclxuZnVuY3Rpb24gY3JlYXRlVmlld0hlYWRlcigpIHtcbiAgICBjb25zdCBoZWFkZXIgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVFbGVtZW50KShcImRpdlwiLCBbXCIudmlld19faGVhZGVyXCIgLyogU2VsZWN0b3IuVmlld0hlYWRlciAqL10pO1xuICAgIGNvbnN0IHRpdGxlID0gKDAsIGNyZWF0ZV9lbGVtZW50XzEuY3JlYXRlRWxlbWVudCkoXCJkaXZcIiwgW1wiLnZpZXdfX3RpdGxlXCIgLyogU2VsZWN0b3IuVGl0bGVDb250YWluZXIgKi9dKTtcbiAgICBjb25zdCB0aXRsZVRleHQgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVFbGVtZW50KShcImgyXCIsIFtcIi50aXRsZVwiIC8qIFNlbGVjdG9yLlRpdGxlICovXSwgXCJcIik7XG4gICAgY29uc3QgY291bnRFbGVtZW50ID0gKDAsIGNvdW50X2VsZW1lbnRfMS5jcmVhdGVDb3VudEVsZW1lbnQpKCk7XG4gICAgY29uc3QgYnV0dG9ucyA9ICgwLCBnYXJhZ2VfYnV0dG9uc18xLmNyZWF0ZUdhcmFnZUJ1dHRvbnMpKCk7XG4gICAgdGl0bGUuYXBwZW5kKHRpdGxlVGV4dCwgY291bnRFbGVtZW50KTtcbiAgICBoZWFkZXIuYXBwZW5kKHRpdGxlLCBidXR0b25zKTtcbiAgICByZXR1cm4gaGVhZGVyO1xufVxuZXhwb3J0cy5jcmVhdGVWaWV3SGVhZGVyID0gY3JlYXRlVmlld0hlYWRlcjtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVQYWdpbmF0aW9uID0gdm9pZCAwO1xuY29uc3QgY3JlYXRlX2VsZW1lbnRfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi91dGlscy9jcmVhdGUtZWxlbWVudFwiKTtcbi8vIFBhZ2luYXRpb25cbmZ1bmN0aW9uIGNyZWF0ZVBhZ2luYXRpb24oKSB7XG4gICAgY29uc3QgY29udGFpbmVyID0gKDAsIGNyZWF0ZV9lbGVtZW50XzEuY3JlYXRlRWxlbWVudCkoXCJkaXZcIiwgW1wiLnBhZ2luYXRpb25cIiAvKiBTZWxlY3Rvci5QYWdlc0NvbnRhaW5lciAqL10pO1xuICAgIGNvbnN0IHBhZ2VDb250YWluZXIgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVFbGVtZW50KShcImRpdlwiLCBbXCIucGFnZV9fY29udGFpbmVyXCIgLyogU2VsZWN0b3IuUGFnZSAqL10pO1xuICAgIGNvbnN0IHRpdGxlID0gKDAsIGNyZWF0ZV9lbGVtZW50XzEuY3JlYXRlRWxlbWVudCkoXCJzcGFuXCIsIFtdLCBcIlBhZ2VcIik7XG4gICAgY29uc3QgcGFnZU51bSA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmNyZWF0ZUVsZW1lbnQpKFwic3BhblwiLCBbXCIucGFnZS0tY3VycmVudFwiIC8qIFNlbGVjdG9yLkN1cnJlbnRQYWdlICovXSwgXCIxXCIpO1xuICAgIGNvbnN0IHNwYW4gPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVFbGVtZW50KShcInNwYW5cIiwgW10sIFwib2ZcIik7XG4gICAgY29uc3QgdG90YWxQYWdlcyA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmNyZWF0ZUVsZW1lbnQpKFwic3BhblwiLCBbXCIucGFnZS0tdG90YWxcIiAvKiBTZWxlY3Rvci5Ub3RhbFBhZ2VzICovXSwgXCJcIik7XG4gICAgY29uc3QgYnV0dG9uc0NvbnRhaW5lciA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmNyZWF0ZUVsZW1lbnQpKFwiZGl2XCIsIFtcIi5wYWdlc19fYnV0dG9uc1wiIC8qIFNlbGVjdG9yLlBhZ2VzQnV0dG9ucyAqL10pO1xuICAgIGNvbnN0IGJ1dHRvblByZXYgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVCdXR0b24pKFwicHJldlwiIC8qIEJ1dHRvbi5QcmV2ICovLCBbXCIuYnV0dG9uX19wcmV2XCIgLyogU2VsZWN0b3IuQnV0dG9uUHJldiAqLywgXCIuYnV0dG9uX19wYWdlXCIgLyogU2VsZWN0b3IuQnV0dG9uUGFnZSAqL10pO1xuICAgIGNvbnN0IGJ1dHRvbk5leHQgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVCdXR0b24pKFwibmV4dFwiIC8qIEJ1dHRvbi5OZXh0ICovLCBbXCIuYnV0dG9uX19uZXh0XCIgLyogU2VsZWN0b3IuQnV0dG9uTmV4dCAqLywgXCIuYnV0dG9uX19wYWdlXCIgLyogU2VsZWN0b3IuQnV0dG9uUGFnZSAqL10pO1xuICAgIGJ1dHRvbnNDb250YWluZXIuYXBwZW5kKGJ1dHRvblByZXYsIGJ1dHRvbk5leHQpO1xuICAgIHBhZ2VDb250YWluZXIuYXBwZW5kKHRpdGxlLCBwYWdlTnVtLCBzcGFuLCB0b3RhbFBhZ2VzKTtcbiAgICBjb250YWluZXIuYXBwZW5kKHBhZ2VDb250YWluZXIsIGJ1dHRvbnNDb250YWluZXIpO1xuICAgIHJldHVybiBjb250YWluZXI7XG59XG5leHBvcnRzLmNyZWF0ZVBhZ2luYXRpb24gPSBjcmVhdGVQYWdpbmF0aW9uO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZVdpblBvcHVwID0gdm9pZCAwO1xuY29uc3QgY3JlYXRlX2VsZW1lbnRfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi91dGlscy9jcmVhdGUtZWxlbWVudFwiKTtcbi8vIFBvcHVwXG5mdW5jdGlvbiBjcmVhdGVXaW5Qb3B1cCgpIHtcbiAgICBjb25zdCBwb3B1cCA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmNyZWF0ZUVsZW1lbnQpKFwiZGl2XCIsIFtcIi5wb3B1cFwiIC8qIFNlbGVjdG9yLlBvcHVwICovXSk7XG4gICAgY29uc3QgcG9wdXBDb250YWluZXIgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVFbGVtZW50KShcImRpdlwiLCBbXCIucG9wdXBfX2NvbnRhaW5lclwiIC8qIFNlbGVjdG9yLlBvcHVwQ29udGFpbmVyICovXSk7XG4gICAgY29uc3QgY29udGVudCA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmNyZWF0ZUVsZW1lbnQpKFwiZGl2XCIsIFtcIi5wb3B1cF9fY29udGVudFwiIC8qIFNlbGVjdG9yLlBvcHVwQ29udGVudCAqL10pO1xuICAgIGNvbnN0IGNhciA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmNyZWF0ZUVsZW1lbnQpKFwic3BhblwiLCBbXCIucG9wdXBfX3dpbm5lclwiIC8qIFNlbGVjdG9yLlBvcHVwV2lubmVyICovXSwgXCJXaW5uZXJcIik7XG4gICAgY29uc3QgbWVzc2FnZSA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmNyZWF0ZUVsZW1lbnQpKFwic3BhblwiLCBbXCIucG9wdXBfX21lc3NhZ2VcIiAvKiBTZWxlY3Rvci5Qb3B1cE1lc3NhZ2UgKi9dLCBcIndvbiB0aGUgcmFjZSBpbiBcIik7XG4gICAgY29uc3QgdGltZSA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmNyZWF0ZUVsZW1lbnQpKFwic3BhblwiLCBbXCIucG9wdXBfX3RpbWVcIiAvKiBTZWxlY3Rvci5Qb3B1cFRpbWUgKi9dLCBcIjIuMzQ1IHNlY1wiKTtcbiAgICBtZXNzYWdlLmFwcGVuZCh0aW1lKTtcbiAgICBjb250ZW50LmFwcGVuZChjYXIsIG1lc3NhZ2UpO1xuICAgIHBvcHVwQ29udGFpbmVyLmFwcGVuZChjb250ZW50KTtcbiAgICBwb3B1cC5hcHBlbmQocG9wdXBDb250YWluZXIpO1xuICAgIHJldHVybiBwb3B1cDtcbn1cbmV4cG9ydHMuY3JlYXRlV2luUG9wdXAgPSBjcmVhdGVXaW5Qb3B1cDtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pbml0UGFnaW5hdGlvbiA9IGV4cG9ydHMuaW5pdExpc3RlbmVycyA9IHZvaWQgMDtcbmNvbnN0IGdldF9lbGVtZW50XzEgPSByZXF1aXJlKFwiLi91dGlscy9nZXQtZWxlbWVudFwiKTtcbmNvbnN0IHJlbmRlcl9nYXJhZ2VfMSA9IHJlcXVpcmUoXCIuL3ZpZXcvdmlldy1nYXJhZ2UvcmVuZGVyLWdhcmFnZVwiKTtcbmNvbnN0IHJlbmRlcl93aW5uZXJzXzEgPSByZXF1aXJlKFwiLi92aWV3L3ZpZXctd2lubmVycy9yZW5kZXItd2lubmVyc1wiKTtcbmNvbnN0IGhhbmRsZV9jcmVhdGVfMSA9IHJlcXVpcmUoXCIuL3ZpZXcvdmlldy1nYXJhZ2UvaGFuZGxlLWNyZWF0ZS9oYW5kbGUtY3JlYXRlXCIpO1xuY29uc3Qgc3RhcnRfdXBkYXRlXzEgPSByZXF1aXJlKFwiLi92aWV3L3ZpZXctZ2FyYWdlL2hhbmRsZS11cGRhdGUvc3RhcnQtdXBkYXRlXCIpO1xuY29uc3QgaGFuZGxlX3VwZGF0ZV8xID0gcmVxdWlyZShcIi4vdmlldy92aWV3LWdhcmFnZS9oYW5kbGUtdXBkYXRlL2hhbmRsZS11cGRhdGVcIik7XG5jb25zdCBoYW5kbGVfZ2VuZXJhdGVfMSA9IHJlcXVpcmUoXCIuL3ZpZXcvdmlldy1nYXJhZ2UvaGFuZGxlLWdlbmVyYXRlL2hhbmRsZS1nZW5lcmF0ZVwiKTtcbmNvbnN0IGhhbmRsZV9wYWdpbmF0aW9uXzEgPSByZXF1aXJlKFwiLi92aWV3L3ZpZXctZ2FyYWdlL3BhZ2VzL2hhbmRsZS1wYWdpbmF0aW9uXCIpO1xuY29uc3QgaGFuZGxlX3JhY2VfMSA9IHJlcXVpcmUoXCIuL3ZpZXcvdmlldy1nYXJhZ2UvaGFuZGxlLXJhY2UvaGFuZGxlLXJhY2VcIik7XG5jb25zdCB3aW5uZXJzX3BhZ2VzXzEgPSByZXF1aXJlKFwiLi92aWV3L3ZpZXctd2lubmVycy9wYWdlcy93aW5uZXJzLXBhZ2VzXCIpO1xuLy8gTGlzdGVuZXJzXG5mdW5jdGlvbiBpbml0TGlzdGVuZXJzKCkge1xuICAgIGNvbnN0IGJ1dHRvbkdhcmFnZSA9ICgwLCBnZXRfZWxlbWVudF8xLmdldEVsZW1lbnQpKFwiI2J1dHRvbl9fZ2FyYWdlXCIgLyogU2VsZWN0b3IuQnV0dG9uR2FyYWdlICovKTtcbiAgICBjb25zdCBidXR0b25XaW5uZXJzID0gKDAsIGdldF9lbGVtZW50XzEuZ2V0RWxlbWVudCkoXCIjYnV0dG9uX193aW5uZXJzXCIgLyogU2VsZWN0b3IuQnV0dG9uV2lubmVycyAqLyk7XG4gICAgY29uc3QgYnV0dG9uQ3JlYXRlID0gKDAsIGdldF9lbGVtZW50XzEuZ2V0RWxlbWVudCkoXCIuYnV0dG9uX19jcmVhdGVcIiAvKiBTZWxlY3Rvci5CdXR0b25DcmVhdGUgKi8pO1xuICAgIGNvbnN0IGJ1dHRvbkNhbmNlbEVkaXQgPSAoMCwgZ2V0X2VsZW1lbnRfMS5nZXRFbGVtZW50KShcIi5idXR0b25fX2NhbmNlbFwiIC8qIFNlbGVjdG9yLkJ1dHRvbkNhbmNlbCAqLyk7XG4gICAgY29uc3QgYnV0dG9uVXBkYXRlID0gKDAsIGdldF9lbGVtZW50XzEuZ2V0RWxlbWVudCkoXCIuYnV0dG9uX191cGRhdGVcIiAvKiBTZWxlY3Rvci5CdXR0b25VcGRhdGUgKi8pO1xuICAgIGNvbnN0IGJ1dHRvbkdlbmVyYXRlID0gKDAsIGdldF9lbGVtZW50XzEuZ2V0RWxlbWVudCkoXCIuYnV0dG9uX19nZW5lcmF0ZVwiIC8qIFNlbGVjdG9yLkJ1dHRvbkdlbmVyYXRlICovKTtcbiAgICBjb25zdCBidXR0b25SZXNldCA9ICgwLCBnZXRfZWxlbWVudF8xLmdldEVsZW1lbnQpKFwiLmJ1dHRvbl9fcmVzZXRcIiAvKiBTZWxlY3Rvci5CdXR0b25SZXNldCAqLyk7XG4gICAgY29uc3QgYnV0dG9uUmFjZSA9ICgwLCBnZXRfZWxlbWVudF8xLmdldEVsZW1lbnQpKFwiLmJ1dHRvbl9fcmFjZVwiIC8qIFNlbGVjdG9yLkJ1dHRvblJhY2UgKi8pO1xuICAgIC8vIEV2ZW50c1xuICAgIGJ1dHRvbkdhcmFnZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgcmVuZGVyX2dhcmFnZV8xLnJlbmRlckdhcmFnZVZpZXcpO1xuICAgIGJ1dHRvbldpbm5lcnMuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHJlbmRlcl93aW5uZXJzXzEucmVuZGVyV2lubmVyc1ZpZXcpO1xuICAgIGJ1dHRvbkNyZWF0ZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgaGFuZGxlX2NyZWF0ZV8xLmhhbmRsZUNyZWF0ZUNhcik7XG4gICAgYnV0dG9uQ2FuY2VsRWRpdC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgc3RhcnRfdXBkYXRlXzEuY2FuY2VsVXBkYXRlKTtcbiAgICBidXR0b25VcGRhdGUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGhhbmRsZV91cGRhdGVfMS5oYW5kbGVVcGRhdGUpO1xuICAgIGJ1dHRvbkdlbmVyYXRlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBoYW5kbGVfZ2VuZXJhdGVfMS5oYW5kbGVHZW5lcmF0ZSk7XG4gICAgYnV0dG9uUmVzZXQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGhhbmRsZV9yYWNlXzEuaGFuZGxlUmVzZXQpO1xuICAgIGJ1dHRvblJhY2UuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGhhbmRsZV9yYWNlXzEuaGFuZGxlUmFjZSk7XG59XG5leHBvcnRzLmluaXRMaXN0ZW5lcnMgPSBpbml0TGlzdGVuZXJzO1xuLy8gSW5pdCBwYWdpbmF0aW9uXG5mdW5jdGlvbiBpbml0UGFnaW5hdGlvbih2aWV3KSB7XG4gICAgY29uc3QgYnV0dG9uUHJldiA9ICgwLCBnZXRfZWxlbWVudF8xLmdldEVsZW1lbnQpKFwiLmJ1dHRvbl9fcHJldlwiIC8qIFNlbGVjdG9yLkJ1dHRvblByZXYgKi8pO1xuICAgIGNvbnN0IGJ1dHRvbk5leHQgPSAoMCwgZ2V0X2VsZW1lbnRfMS5nZXRFbGVtZW50KShcIi5idXR0b25fX25leHRcIiAvKiBTZWxlY3Rvci5CdXR0b25OZXh0ICovKTtcbiAgICBpZiAodmlldyA9PT0gXCJnYXJhZ2VcIiAvKiBWaWV3LkdhcmFnZSAqLykge1xuICAgICAgICBidXR0b25QcmV2LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB3aW5uZXJzX3BhZ2VzXzEuaGFuZGxlV2lubmVyc1BhZ2VzKTtcbiAgICAgICAgYnV0dG9uTmV4dC5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgd2lubmVyc19wYWdlc18xLmhhbmRsZVdpbm5lcnNQYWdlcyk7XG4gICAgICAgIGJ1dHRvblByZXYuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGhhbmRsZV9wYWdpbmF0aW9uXzEuaGFuZGxlR2FyYWdlUGFnZXMpO1xuICAgICAgICBidXR0b25OZXh0LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBoYW5kbGVfcGFnaW5hdGlvbl8xLmhhbmRsZUdhcmFnZVBhZ2VzKTtcbiAgICB9XG4gICAgaWYgKHZpZXcgPT09IFwid2lubmVyc1wiIC8qIFZpZXcuV2lubmVycyAqLykge1xuICAgICAgICBidXR0b25QcmV2LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBoYW5kbGVfcGFnaW5hdGlvbl8xLmhhbmRsZUdhcmFnZVBhZ2VzKTtcbiAgICAgICAgYnV0dG9uTmV4dC5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgaGFuZGxlX3BhZ2luYXRpb25fMS5oYW5kbGVHYXJhZ2VQYWdlcyk7XG4gICAgICAgIGJ1dHRvblByZXYuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHdpbm5lcnNfcGFnZXNfMS5oYW5kbGVXaW5uZXJzUGFnZXMpO1xuICAgICAgICBidXR0b25OZXh0LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB3aW5uZXJzX3BhZ2VzXzEuaGFuZGxlV2lubmVyc1BhZ2VzKTtcbiAgICB9XG59XG5leHBvcnRzLmluaXRQYWdpbmF0aW9uID0gaW5pdFBhZ2luYXRpb247XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlU1ZHID0gZXhwb3J0cy5jcmVhdGVMaW5rID0gZXhwb3J0cy5jcmVhdGVJbnB1dCA9IGV4cG9ydHMuY3JlYXRlQnV0dG9uID0gZXhwb3J0cy5jcmVhdGVFbGVtZW50ID0gdm9pZCAwO1xuLy8gSFRNTFxuZnVuY3Rpb24gY3JlYXRlRWxlbWVudCh0YWcsIGNsYXNzTmFtZXMsIHRleHQpIHtcbiAgICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0YWcpO1xuICAgIGlmICghKGVsZW1lbnQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCkpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoYENvdWxkbid0IGNyZWF0ZSBIVE1MIGVsZW1lbnQgJHt0YWd9YCk7XG4gICAgfVxuICAgIGlmIChjbGFzc05hbWVzPy5sZW5ndGgpIHtcbiAgICAgICAgY29uc3QgY2xhc3NMaXN0ID0gY2xhc3NOYW1lcy5tYXAoKGVsKSA9PiBlbC5zbGljZSgxKSk7XG4gICAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LmFkZCguLi5jbGFzc0xpc3QpO1xuICAgIH1cbiAgICBpZiAodGV4dClcbiAgICAgICAgZWxlbWVudC50ZXh0Q29udGVudCA9IHRleHQ7XG4gICAgcmV0dXJuIGVsZW1lbnQ7XG59XG5leHBvcnRzLmNyZWF0ZUVsZW1lbnQgPSBjcmVhdGVFbGVtZW50O1xuLy8gQlVUVE9OLy9cbmZ1bmN0aW9uIGNyZWF0ZUJ1dHRvbihuYW1lLCBjbGFzc05hbWVzKSB7XG4gICAgY29uc3QgYnV0dG9uID0gY3JlYXRlRWxlbWVudChcImJ1dHRvblwiLCBjbGFzc05hbWVzLCBuYW1lKTtcbiAgICBpZiAoIShidXR0b24gaW5zdGFuY2VvZiBIVE1MQnV0dG9uRWxlbWVudCkpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoYENvdWxkbid0IGNyZWF0ZSBidXR0b24gJHtuYW1lfWApO1xuICAgIH1cbiAgICBpZiAoY2xhc3NOYW1lcyAmJiAhY2xhc3NOYW1lcy5pbmNsdWRlcyhcIi5idXR0b25fX3RyYWNrXCIgLyogU2VsZWN0b3IuQnV0dG9uVHJhY2sgKi8pKSB7XG4gICAgICAgIGNvbnN0IGJ1dHRvbklEID0gYGJ1dHRvbl9fJHtuYW1lLnRvTG93ZXJDYXNlKCl9YDtcbiAgICAgICAgYnV0dG9uLmlkID0gYnV0dG9uSUQ7XG4gICAgfVxuICAgIHJldHVybiBidXR0b247XG59XG5leHBvcnRzLmNyZWF0ZUJ1dHRvbiA9IGNyZWF0ZUJ1dHRvbjtcbi8vIElOUFVUXG5mdW5jdGlvbiBjcmVhdGVJbnB1dCh0eXBlLCBhY3Rpb24pIHtcbiAgICBjb25zdCBpbnB1dCA9IGNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCBbYC5pbnB1dC0ke3R5cGV9YF0pO1xuICAgIGlmICghKGlucHV0IGluc3RhbmNlb2YgSFRNTElucHV0RWxlbWVudCkpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXCJGYWlsZWQgdG8gY3JlYXRlIEhUTUxJbnB1dCBFbGVtZW50Li4uXCIpO1xuICAgIH1cbiAgICBpbnB1dC5pZCA9IGBpbnB1dC0ke3R5cGV9X18ke2FjdGlvbn1gO1xuICAgIGlucHV0LnR5cGUgPSB0eXBlO1xuICAgIGlucHV0LmF1dG9jb21wbGV0ZSA9IFwib2ZmXCI7XG4gICAgcmV0dXJuIGlucHV0O1xufVxuZXhwb3J0cy5jcmVhdGVJbnB1dCA9IGNyZWF0ZUlucHV0O1xuLy8gTElOS1xuZnVuY3Rpb24gY3JlYXRlTGluayh0ZXh0LCB1cmwsIGNsYXNzTmFtZXMpIHtcbiAgICBjb25zdCBsaW5rID0gY3JlYXRlRWxlbWVudChcImFcIiwgY2xhc3NOYW1lcywgdGV4dCk7XG4gICAgaWYgKCEobGluayBpbnN0YW5jZW9mIEhUTUxBbmNob3JFbGVtZW50KSkge1xuICAgICAgICB0aHJvdyBFcnJvcihcIkZhaWxlZCB0byBjcmVhdGUgYSA8YT4gZWxlbWVudC4uLlwiKTtcbiAgICB9XG4gICAgbGluay5ocmVmID0gdXJsO1xuICAgIHJldHVybiBsaW5rO1xufVxuZXhwb3J0cy5jcmVhdGVMaW5rID0gY3JlYXRlTGluaztcbi8vIFNWR1xuZnVuY3Rpb24gY3JlYXRlU1ZHKHBhcmFtcykge1xuICAgIGNvbnN0IGRpdiA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgW3BhcmFtcy5kaXZDbGFzc10pO1xuICAgIGNvbnN0IHN2ZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhwYXJhbXMubnMsIFwic3ZnXCIpO1xuICAgIHN2Zy5zZXRBdHRyaWJ1dGUoXCJ3aWR0aFwiLCBwYXJhbXMud2lkdGgpO1xuICAgIHN2Zy5zZXRBdHRyaWJ1dGUoXCJoZWlnaHRcIiwgcGFyYW1zLmhlaWdodCk7XG4gICAgaWYgKHBhcmFtcy5jb2xvciAmJiBzdmcgaW5zdGFuY2VvZiBTVkdFbGVtZW50KSB7XG4gICAgICAgIHN2Zy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBwYXJhbXMuY29sb3I7XG4gICAgfVxuICAgIGRpdi5hcHBlbmQoc3ZnKTtcbiAgICByZXR1cm4gZGl2O1xufVxuZXhwb3J0cy5jcmVhdGVTVkcgPSBjcmVhdGVTVkc7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0Rm9ybUlucHV0cyA9IGV4cG9ydHMuZ2V0RWxlbWVudHNBcnJheSA9IGV4cG9ydHMuZ2V0RWxlbWVudCA9IGV4cG9ydHMuZ2V0Q2xvc2VzdCA9IGV4cG9ydHMuZ2V0VGFyZ2V0ID0gdm9pZCAwO1xuLy8gVEFSR0VUXG5mdW5jdGlvbiBnZXRUYXJnZXQoZSkge1xuICAgIGNvbnN0IHRhcmdldCA9IGUudGFyZ2V0O1xuICAgIGlmICghdGFyZ2V0KVxuICAgICAgICB0aHJvdyBFcnJvcihcIlRhcmdldCBlbGVtZW50IGlzIG5vdCBmb3VuZC4uLlwiKTtcbiAgICBpZiAoISh0YXJnZXQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCkpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXCJUYXJnZXQgaXMgbm90IGFuIEhUTUxFbGVtZW50Li4uXCIpO1xuICAgIH1cbiAgICByZXR1cm4gdGFyZ2V0O1xufVxuZXhwb3J0cy5nZXRUYXJnZXQgPSBnZXRUYXJnZXQ7XG4vLyBDTE9TRVNUXG5mdW5jdGlvbiBnZXRDbG9zZXN0KHRhcmdldEVsZW1lbnQsIHNlbGVjdG9yKSB7XG4gICAgY29uc3QgZWxlbWVudCA9IHRhcmdldEVsZW1lbnQuY2xvc2VzdChzZWxlY3Rvcik7XG4gICAgaWYgKCFlbGVtZW50IHx8ICEoZWxlbWVudCBpbnN0YW5jZW9mIEhUTUxFbGVtZW50KSkge1xuICAgICAgICB0aHJvdyBFcnJvcihgJHtzZWxlY3Rvcn0gZWxlbWVudCBpcyBub3QgZm91bmQuLi5gKTtcbiAgICB9XG4gICAgcmV0dXJuIGVsZW1lbnQ7XG59XG5leHBvcnRzLmdldENsb3Nlc3QgPSBnZXRDbG9zZXN0O1xuLy8gSFRNTFxuZnVuY3Rpb24gZ2V0RWxlbWVudChzZWxlY3Rvcikge1xuICAgIGNvbnN0IGVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKTtcbiAgICBpZiAoIWVsZW1lbnQgfHwgIShlbGVtZW50IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpKSB7XG4gICAgICAgIHRocm93IEVycm9yKGAke3NlbGVjdG9yfSBpcyBub3QgZm91bmQuLi5gKTtcbiAgICB9XG4gICAgcmV0dXJuIGVsZW1lbnQ7XG59XG5leHBvcnRzLmdldEVsZW1lbnQgPSBnZXRFbGVtZW50O1xuLy8gZXhwb3J0IGZ1bmN0aW9uIGdldEVsZW1lbnQ8VCBleHRlbmRzIEVsZW1lbnQ+KHNlbGVjdG9yOiBTZWxlY3RvciB8IHN0cmluZyk6IFQge1xuLy8gICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XG4vLyAgIGlmICghZWxlbWVudCkge1xuLy8gICAgIHRocm93IEVycm9yKGBFbGVtZW50ICR7c2VsZWN0b3J9IGlzIG5vdCBmb3VuZC4uLmApO1xuLy8gICB9XG4vLyAgIHJldHVybiBlbGVtZW50IGFzIFQ7XG4vLyB9XG4vLyBBUlJBWVxuZnVuY3Rpb24gZ2V0RWxlbWVudHNBcnJheShzZWxlY3Rvcikge1xuICAgIGNvbnN0IGVsZW1lbnRzID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKSk7XG4gICAgaWYgKCFlbGVtZW50cylcbiAgICAgICAgdGhyb3cgRXJyb3IoYCR7c2VsZWN0b3J9IGVsZW1lbnRzIGFyZSBub3QgZm91bmQuLi5gKTtcbiAgICBlbGVtZW50cy5mb3JFYWNoKChlbGVtZW50KSA9PiB7XG4gICAgICAgIGlmICghKGVsZW1lbnQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCkpIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKFwiRWxlbWVudHMgYXJlIG5vdCBhbiBhcnJheSBvZiBIVE1MRWxlbWVudC4uLlwiKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBlbGVtZW50cztcbn1cbmV4cG9ydHMuZ2V0RWxlbWVudHNBcnJheSA9IGdldEVsZW1lbnRzQXJyYXk7XG4vLyBHRVQgRk9STSBJTlBVVFNcbmZ1bmN0aW9uIGdldEZvcm1JbnB1dHMoZm9ybSkge1xuICAgIGNvbnN0IGlucHV0VGV4dCA9IGdldEVsZW1lbnQoYCR7Zm9ybX0gLmlucHV0LXRleHRgKTtcbiAgICBjb25zdCBpbnB1dENvbG9yID0gZ2V0RWxlbWVudChgJHtmb3JtfSAuaW5wdXQtY29sb3JgKTtcbiAgICBpZiAoIShpbnB1dFRleHQgaW5zdGFuY2VvZiBIVE1MSW5wdXRFbGVtZW50KSkge1xuICAgICAgICB0aHJvdyBFcnJvcihcIlRleHQgaW5wdXQgaXNuJ3QgZm91bmQuXCIpO1xuICAgIH1cbiAgICBpZiAoIShpbnB1dENvbG9yIGluc3RhbmNlb2YgSFRNTElucHV0RWxlbWVudCkpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXCJDb2xvciBpbnB1dCBpc24ndCBmb3VuZC5cIik7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIGlucHV0VGV4dCxcbiAgICAgICAgaW5wdXRDb2xvcixcbiAgICB9O1xufVxuZXhwb3J0cy5nZXRGb3JtSW5wdXRzID0gZ2V0Rm9ybUlucHV0cztcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRDdXJyZW50VmlldyA9IGV4cG9ydHMuc2F2ZUN1cnJlbnRWaWV3ID0gZXhwb3J0cy5nZXRUYXJnZXRJRCA9IGV4cG9ydHMudG9nZ2xlRGlzYWJsZSA9IGV4cG9ydHMuZ2V0UmFuZG9tSW5kZXggPSBleHBvcnRzLmNsZWFuQ29udGVudCA9IHZvaWQgMDtcbmNvbnN0IGdldF9lbGVtZW50XzEgPSByZXF1aXJlKFwiLi9nZXQtZWxlbWVudFwiKTtcbi8vIENsZWFuIGNvbnRlbnRcbmZ1bmN0aW9uIGNsZWFuQ29udGVudChlbGVtZW50KSB7XG4gICAgY29uc3QgcGFyZW50RWxlbWVudCA9IGVsZW1lbnQgfHwgKDAsIGdldF9lbGVtZW50XzEuZ2V0RWxlbWVudCkoXCIudmlld19fYm9keVwiIC8qIFNlbGVjdG9yLlZpZXdCb2R5ICovKTtcbiAgICBbLi4ucGFyZW50RWxlbWVudC5jaGlsZHJlbl0uZm9yRWFjaCgoY2hpbGQpID0+IHtcbiAgICAgICAgY2hpbGQucmVtb3ZlKCk7XG4gICAgfSk7XG59XG5leHBvcnRzLmNsZWFuQ29udGVudCA9IGNsZWFuQ29udGVudDtcbi8vIFJhbmRvbSBpbmRleFxuZnVuY3Rpb24gZ2V0UmFuZG9tSW5kZXgoYXJyYXkpIHtcbiAgICBjb25zdCBpbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGFycmF5Lmxlbmd0aCk7XG4gICAgcmV0dXJuIGluZGV4O1xufVxuZXhwb3J0cy5nZXRSYW5kb21JbmRleCA9IGdldFJhbmRvbUluZGV4O1xuLy8gVG9nZ2xlIGRpc2FibGUgYnV0dG9uXG5mdW5jdGlvbiB0b2dnbGVEaXNhYmxlKGJ1dHRvbikge1xuICAgIGNvbnN0IGJ1dHRvbkVsZW1lbnQgPSBidXR0b247XG4gICAgaWYgKGJ1dHRvbkVsZW1lbnQgaW5zdGFuY2VvZiBIVE1MQnV0dG9uRWxlbWVudCkge1xuICAgICAgICBidXR0b25FbGVtZW50LmRpc2FibGVkID0gIWJ1dHRvbkVsZW1lbnQuZGlzYWJsZWQ7XG4gICAgfVxufVxuZXhwb3J0cy50b2dnbGVEaXNhYmxlID0gdG9nZ2xlRGlzYWJsZTtcbi8vIEdldCB0YXJnZXQgSURcbmZ1bmN0aW9uIGdldFRhcmdldElEKGUpIHtcbiAgICBjb25zdCB0YXJnZXQgPSAoMCwgZ2V0X2VsZW1lbnRfMS5nZXRUYXJnZXQpKGUpO1xuICAgIGNvbnN0IHRyYWNrID0gKDAsIGdldF9lbGVtZW50XzEuZ2V0Q2xvc2VzdCkodGFyZ2V0LCBcIi50cmFja1wiIC8qIFNlbGVjdG9yLlRyYWNrICovKTtcbiAgICBjb25zdCBpZCA9IHRyYWNrLmlkLnNwbGl0KFwiLS1cIikuYXQoLTEpO1xuICAgIGlmICghaWQpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXCJDb3VsZG4ndCBnZXQgdGFyZ2V0IElELi4uXCIpO1xuICAgIH1cbiAgICByZXR1cm4gaWQ7XG59XG5leHBvcnRzLmdldFRhcmdldElEID0gZ2V0VGFyZ2V0SUQ7XG4vLyBTYXZlIGN1cnJlbnQgdmlld1xuZnVuY3Rpb24gc2F2ZUN1cnJlbnRWaWV3KGN1cnJlbnRWaWV3ID0gXCJnYXJhZ2VcIikge1xuICAgIGRvY3VtZW50LmJvZHkuY2xhc3NOYW1lID0gXCJcIjtcbiAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5hZGQoY3VycmVudFZpZXcpO1xuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwidmlld1wiLCBjdXJyZW50Vmlldyk7XG59XG5leHBvcnRzLnNhdmVDdXJyZW50VmlldyA9IHNhdmVDdXJyZW50Vmlldztcbi8vIEdldCBjdXJyZW50IHZpZXdcbmZ1bmN0aW9uIGdldEN1cnJlbnRWaWV3KCkge1xuICAgIHJldHVybiB3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJ2aWV3XCIpID8/IFwiXCI7XG59XG5leHBvcnRzLmdldEN1cnJlbnRWaWV3ID0gZ2V0Q3VycmVudFZpZXc7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNFbm91Z2hTcGFjZSA9IGV4cG9ydHMuaXNMYXN0UGFnZSA9IGV4cG9ydHMuaXNGaXJzdFBhZ2UgPSBleHBvcnRzLmdldEN1cnJlbnRQYWdlID0gZXhwb3J0cy5pc0xhc3RUcmFjayA9IHZvaWQgMDtcbmNvbnN0IGdldF9lbGVtZW50XzEgPSByZXF1aXJlKFwiLi9nZXQtZWxlbWVudFwiKTtcbmNvbnN0IGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4uL2FwaS9jb25zdGFudHNcIik7XG5jb25zdCBoZWxwZXJzXzEgPSByZXF1aXJlKFwiLi9oZWxwZXJzXCIpO1xuLy8gTGFzdCB0cmFja1xuZnVuY3Rpb24gaXNMYXN0VHJhY2soKSB7XG4gICAgY29uc3QgdHJhY2tzID0gKDAsIGdldF9lbGVtZW50XzEuZ2V0RWxlbWVudHNBcnJheSkoXCIudHJhY2tcIiAvKiBTZWxlY3Rvci5UcmFjayAqLyk7XG4gICAgcmV0dXJuIHRyYWNrcy5sZW5ndGggPT09IDE7XG59XG5leHBvcnRzLmlzTGFzdFRyYWNrID0gaXNMYXN0VHJhY2s7XG4vLyBDdXJyZW50IHBhZ2VcbmZ1bmN0aW9uIGdldEN1cnJlbnRQYWdlKCkge1xuICAgIGNvbnN0IHZpZXcgPSAoMCwgaGVscGVyc18xLmdldEN1cnJlbnRWaWV3KSgpO1xuICAgIGNvbnN0IHBhZ2UgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShgJHt2aWV3fS1wYWdlYCkgfHwgMTtcbiAgICByZXR1cm4gTnVtYmVyKHBhZ2UpO1xufVxuZXhwb3J0cy5nZXRDdXJyZW50UGFnZSA9IGdldEN1cnJlbnRQYWdlO1xuLy8gRmlyc3QgcGFnZVxuZnVuY3Rpb24gaXNGaXJzdFBhZ2UoKSB7XG4gICAgcmV0dXJuIGdldEN1cnJlbnRQYWdlKCkgPT09IDE7XG59XG5leHBvcnRzLmlzRmlyc3RQYWdlID0gaXNGaXJzdFBhZ2U7XG4vLyBMYXN0IHBhZ2VcbmZ1bmN0aW9uIGlzTGFzdFBhZ2UoKSB7XG4gICAgY29uc3QgdmlldyA9ICgwLCBoZWxwZXJzXzEuZ2V0Q3VycmVudFZpZXcpKCk7XG4gICAgY29uc3QgY3VycmVudFBhZ2UgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShgJHt2aWV3fS1wYWdlYCk7XG4gICAgY29uc3QgdG90YWxQYWdlcyA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKGAke3ZpZXd9LXRvdGFsUGFnZXNgKTtcbiAgICByZXR1cm4gY3VycmVudFBhZ2UgPT09IHRvdGFsUGFnZXM7XG59XG5leHBvcnRzLmlzTGFzdFBhZ2UgPSBpc0xhc3RQYWdlO1xuLy8gUGFnZSBmdWxsXG5mdW5jdGlvbiBpc0Vub3VnaFNwYWNlKCkge1xuICAgIGNvbnN0IHRyYWNrcyA9ICgwLCBnZXRfZWxlbWVudF8xLmdldEVsZW1lbnRzQXJyYXkpKFwiLnRyYWNrXCIgLyogU2VsZWN0b3IuVHJhY2sgKi8pO1xuICAgIHJldHVybiB0cmFja3MubGVuZ3RoIDwgY29uc3RhbnRzXzEuR0FSQUdFX0xJTUlUO1xufVxuZXhwb3J0cy5pc0Vub3VnaFNwYWNlID0gaXNFbm91Z2hTcGFjZTtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy51cGRhdGVUb3RhbENhcnMgPSBleHBvcnRzLnNldFRvdGFsQ291bnQgPSB2b2lkIDA7XG5jb25zdCBnZXRfZWxlbWVudF8xID0gcmVxdWlyZShcIi4vZ2V0LWVsZW1lbnRcIik7XG5jb25zdCBoZWxwZXJzXzEgPSByZXF1aXJlKFwiLi9oZWxwZXJzXCIpO1xuLy8gU2V0IHRvdGFsIGNvdW50XG5mdW5jdGlvbiBzZXRUb3RhbENvdW50KGNvdW50KSB7XG4gICAgY29uc3QgdmlldyA9ICgwLCBoZWxwZXJzXzEuZ2V0Q3VycmVudFZpZXcpKCk7XG4gICAgY29uc3QgY291bnRFbGVtZW50ID0gKDAsIGdldF9lbGVtZW50XzEuZ2V0RWxlbWVudCkoXCIuY291bnRcIiAvKiBTZWxlY3Rvci5DdXJyZW50Q291bnQgKi8pO1xuICAgIGNvdW50RWxlbWVudC50ZXh0Q29udGVudCA9IFN0cmluZyhjb3VudCk7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oYHRvdGFsLS0ke3ZpZXd9YCwgU3RyaW5nKGNvdW50KSk7XG59XG5leHBvcnRzLnNldFRvdGFsQ291bnQgPSBzZXRUb3RhbENvdW50O1xuLy8gVXBkYXRlIGNvdW50XG5mdW5jdGlvbiB1cGRhdGVUb3RhbENhcnMobnVtYmVyKSB7XG4gICAgY29uc3QgY291bnRFbGVtZW50ID0gKDAsIGdldF9lbGVtZW50XzEuZ2V0RWxlbWVudCkoXCIuY291bnRcIiAvKiBTZWxlY3Rvci5DdXJyZW50Q291bnQgKi8pO1xuICAgIGNvbnN0IG5ld0NvdW50ID0gYCR7TnVtYmVyKGNvdW50RWxlbWVudC50ZXh0Q29udGVudCkgKyBudW1iZXJ9YDtcbiAgICBjb3VudEVsZW1lbnQudGV4dENvbnRlbnQgPSBuZXdDb3VudDtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInRvdGFsLS1nYXJhZ2VcIiwgbmV3Q291bnQpO1xufVxuZXhwb3J0cy51cGRhdGVUb3RhbENhcnMgPSB1cGRhdGVUb3RhbENhcnM7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9nZ2xlVmlld0J1dHRvbiA9IHZvaWQgMDtcbmNvbnN0IGdldF9lbGVtZW50XzEgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHMvZ2V0LWVsZW1lbnRcIik7XG4vLyBUT0dHTEUgQlVUVE9OXG5mdW5jdGlvbiB0b2dnbGVWaWV3QnV0dG9uKHZpZXcpIHtcbiAgICBjb25zdCBidWJibGUgPSAoMCwgZ2V0X2VsZW1lbnRfMS5nZXRFbGVtZW50KShcIi5idWJibGVcIiAvKiBTZWxlY3Rvci5CdWJibGUgKi8pO1xuICAgIGNvbnN0IGJ1dHRvbnMgPSAoMCwgZ2V0X2VsZW1lbnRfMS5nZXRFbGVtZW50c0FycmF5KShcIi5idXR0b25fX3ZpZXdcIiAvKiBTZWxlY3Rvci5WaWV3QnV0dG9uICovKTtcbiAgICBidXR0b25zLmZvckVhY2goKGJ0bikgPT4gYnRuLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIikpO1xuICAgIGNvbnN0IGJ1dHRvbiA9IGJ1dHRvbnMuZmluZCgoYnRuKSA9PiBidG4uaWQgPT09IGBidXR0b25fXyR7dmlld31gKTtcbiAgICBpZiAoIWJ1dHRvbikge1xuICAgICAgICB0aHJvdyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBWaWV3IEJ1dHRvbi5cIik7XG4gICAgfVxuICAgIGJ1dHRvbi5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpO1xuICAgIGlmIChidXR0b24udGV4dENvbnRlbnQ/LmluY2x1ZGVzKFwiZ2FyYWdlXCIgLyogQnV0dG9uLkdhcmFnZSAqLykpIHtcbiAgICAgICAgYnViYmxlLmNsYXNzTGlzdC5yZW1vdmUoXCJ3aW5uZXJzXCIpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgYnViYmxlLmNsYXNzTGlzdC5hZGQoXCJ3aW5uZXJzXCIpO1xuICAgIH1cbn1cbmV4cG9ydHMudG9nZ2xlVmlld0J1dHRvbiA9IHRvZ2dsZVZpZXdCdXR0b247XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9nZ2xlVUlFbGVtZW50cyA9IGV4cG9ydHMudG9nZ2xlUGFnZVRpdGxlID0gZXhwb3J0cy50b2dnbGVGb3Jtc0Rpc3BsYXkgPSB2b2lkIDA7XG5jb25zdCBnZXRfZWxlbWVudF8xID0gcmVxdWlyZShcIi4uLy4uL3V0aWxzL2dldC1lbGVtZW50XCIpO1xuY29uc3QgdG9nZ2xlX2J1dHRvbnNfMSA9IHJlcXVpcmUoXCIuL3RvZ2dsZS1idXR0b25zXCIpO1xuLy8gSGlkZSBmb3Jtc1xuZnVuY3Rpb24gdG9nZ2xlRm9ybXNEaXNwbGF5KHZpZXcpIHtcbiAgICBjb25zdCBoZWFkZXJGb3JtcyA9ICgwLCBnZXRfZWxlbWVudF8xLmdldEVsZW1lbnQpKFwiLmZvcm1zX19jb250YWluZXJcIiAvKiBTZWxlY3Rvci5Gb3Jtc0NvbnRhaW5lciAqLyk7XG4gICAgaWYgKHZpZXcgPT09IFwiZ2FyYWdlXCIgLyogVmlldy5HYXJhZ2UgKi8pIHtcbiAgICAgICAgaGVhZGVyRm9ybXMuY2xhc3NMaXN0LnJlbW92ZShcIi5mb3Jtcy0taGlkZGVuXCIgLyogU2VsZWN0b3IuRm9ybXNIaWRkZW4gKi8uc2xpY2UoMSkpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgaGVhZGVyRm9ybXMuY2xhc3NMaXN0LmFkZChcIi5mb3Jtcy0taGlkZGVuXCIgLyogU2VsZWN0b3IuRm9ybXNIaWRkZW4gKi8uc2xpY2UoMSkpO1xuICAgIH1cbn1cbmV4cG9ydHMudG9nZ2xlRm9ybXNEaXNwbGF5ID0gdG9nZ2xlRm9ybXNEaXNwbGF5O1xuLy8gUGFnZSBIZWFkZXJcbmZ1bmN0aW9uIHRvZ2dsZVBhZ2VUaXRsZSh2aWV3LCBjb3VudCA9IDApIHtcbiAgICBjb25zdCB0aXRsZSA9ICgwLCBnZXRfZWxlbWVudF8xLmdldEVsZW1lbnQpKFwiLnRpdGxlXCIgLyogU2VsZWN0b3IuVGl0bGUgKi8pO1xuICAgIHRpdGxlLnRleHRDb250ZW50ID0gYCR7dmlld1swXS50b1VwcGVyQ2FzZSgpfSR7dmlldy5zbGljZSgxKX1gO1xuICAgIGNvbnN0IGNvdW50RWxlbWVudCA9ICgwLCBnZXRfZWxlbWVudF8xLmdldEVsZW1lbnQpKFwiLmNvdW50XCIgLyogU2VsZWN0b3IuQ3VycmVudENvdW50ICovKTtcbiAgICBjb3VudEVsZW1lbnQudGV4dENvbnRlbnQgPSBTdHJpbmcoY291bnQpO1xuICAgIGNvbnN0IGdhcmFnZUJ1dHRvbnMgPSAoMCwgZ2V0X2VsZW1lbnRfMS5nZXRFbGVtZW50KShcIi52aWV3X19idXR0b25zXCIgLyogU2VsZWN0b3IuVmlld0J1dHRvbnMgKi8pO1xuICAgIGlmICh2aWV3ID09PSBcIndpbm5lcnNcIikge1xuICAgICAgICBnYXJhZ2VCdXR0b25zLmNsYXNzTGlzdC5hZGQoXCJoaWRkZW5cIik7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBnYXJhZ2VCdXR0b25zLmNsYXNzTGlzdC5yZW1vdmUoXCJoaWRkZW5cIik7XG4gICAgfVxufVxuZXhwb3J0cy50b2dnbGVQYWdlVGl0bGUgPSB0b2dnbGVQYWdlVGl0bGU7XG4vLyBBbGwgZWxlbWVudHNcbmZ1bmN0aW9uIHRvZ2dsZVVJRWxlbWVudHModmlldykge1xuICAgICgwLCB0b2dnbGVfYnV0dG9uc18xLnRvZ2dsZVZpZXdCdXR0b24pKHZpZXcpO1xuICAgIHRvZ2dsZUZvcm1zRGlzcGxheSh2aWV3KTtcbiAgICB0b2dnbGVQYWdlVGl0bGUodmlldyk7XG59XG5leHBvcnRzLnRvZ2dsZVVJRWxlbWVudHMgPSB0b2dnbGVVSUVsZW1lbnRzO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmhhbmRsZUNyZWF0ZUNhciA9IHZvaWQgMDtcbmNvbnN0IGdldF9lbGVtZW50XzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vdXRpbHMvZ2V0LWVsZW1lbnRcIik7XG5jb25zdCBjcmVhdGVfY2FyXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vYXBpL2NyZWF0ZS1jYXJcIik7XG5jb25zdCBwYWdlX3V0aWxzXzEgPSByZXF1aXJlKFwiLi4vcGFnZXMvcGFnZS11dGlsc1wiKTtcbmNvbnN0IHNldF90b3RhbF8xID0gcmVxdWlyZShcIi4uLy4uLy4uL3V0aWxzL3NldC10b3RhbFwiKTtcbmNvbnN0IGFwcGVuZF90cmFja3NfMSA9IHJlcXVpcmUoXCIuLi90cmFja3MvYXBwZW5kLXRyYWNrc1wiKTtcbmNvbnN0IHBhZ2luYXRpb25faGVscGVyc18xID0gcmVxdWlyZShcIi4uLy4uLy4uL3V0aWxzL3BhZ2luYXRpb24taGVscGVyc1wiKTtcbi8vIEhhbmRsZSBjcmVhdGVcbmFzeW5jIGZ1bmN0aW9uIGhhbmRsZUNyZWF0ZUNhcihlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNvbnN0IHsgaW5wdXRUZXh0LCBpbnB1dENvbG9yIH0gPSAoMCwgZ2V0X2VsZW1lbnRfMS5nZXRGb3JtSW5wdXRzKShcIi5mb3JtX19jcmVhdGVcIiAvKiBTZWxlY3Rvci5Gb3JtQ3JlYXRlICovKTtcbiAgICBjb25zdCBuYW1lID0gaW5wdXRUZXh0LnZhbHVlO1xuICAgIGNvbnN0IGNvbG9yID0gaW5wdXRDb2xvci52YWx1ZTtcbiAgICBpZiAoIW5hbWUpIHtcbiAgICAgICAgaW5wdXRUZXh0LmZvY3VzKCk7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgbmV3Q2FyID0gYXdhaXQgKDAsIGNyZWF0ZV9jYXJfMS5jcmVhdGVDYXJBUEkpKHsgbmFtZSwgY29sb3IgfSk7XG4gICAgaWYgKCgwLCBwYWdpbmF0aW9uX2hlbHBlcnNfMS5pc0xhc3RQYWdlKSgpICYmICgwLCBwYWdpbmF0aW9uX2hlbHBlcnNfMS5pc0Vub3VnaFNwYWNlKSgpKSB7XG4gICAgICAgICgwLCBhcHBlbmRfdHJhY2tzXzEuYXBwZW5kVHJhY2spKG5ld0Nhcik7XG4gICAgfVxuICAgICgwLCBzZXRfdG90YWxfMS51cGRhdGVUb3RhbENhcnMpKDEpO1xuICAgICgwLCBwYWdlX3V0aWxzXzEuc2V0VG90YWxQYWdlcykoKTtcbiAgICAoMCwgcGFnZV91dGlsc18xLnRvZ2dsZVBhZ2VCdXR0b25zKSgpO1xuICAgIGlucHV0VGV4dC52YWx1ZSA9IFwiXCI7XG4gICAgY29uc29sZS5sb2coXCJDcmVhdGU6XCIsIGxvY2FsU3RvcmFnZSk7XG59XG5leHBvcnRzLmhhbmRsZUNyZWF0ZUNhciA9IGhhbmRsZUNyZWF0ZUNhcjtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jYXJNYWtlcyA9IHZvaWQgMDtcbmV4cG9ydHMuY2FyTWFrZXMgPSBbXG4gICAge1xuICAgICAgICBtYWtlOiBcIkJNV1wiLFxuICAgICAgICBtb2RlbHM6IFtcIk0zXCIsIFwiTTVcIiwgXCJNNSBDU1wiLCBcImk0IE01MCB4RHJpdmVcIiwgXCJYNiBNXCIsIFwiTTggQ29tcGV0aXRpb25cIiwgXCJaNCBNNDBpXCJdLFxuICAgIH0sXG4gICAge1xuICAgICAgICBtYWtlOiBcIlBvcnNjaGVcIixcbiAgICAgICAgbW9kZWxzOiBbXCJTYWxseSBTcGVjaWFsXCIsIFwiQ2F5bWFuIFNcIiwgXCJDYXltYW4gU3B5ZGVyIFJTXCIsIFwiQ2FycmVyYVwiLCBcIkNhcnJlcmEgNFNcIiwgXCJDYXJyZXJhIEdUU1wiLCBcIjkxMSBUdXJib1wiLCBcIlRheWNhbiBHVFNcIiwgXCJQYW5hbWVyYSA0U1wiLCBcIkNheWVubmUgVHVyYm8gR1RcIl0sXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG1ha2U6IFwiTWVyY2VkZXNcIixcbiAgICAgICAgbW9kZWxzOiBbXCJTTCA2MyBSb2Fkc3RlclwiLCBcIkdMRSA1MyBDb3VwZVwiLCBcIkNMQSAzNSBDb3VwZVwiLCBcIkdUIDQzIENvdXBlXCIsIFwiQU1HIE9uZVwiLCBcIlMtQ2xhc3NcIiwgXCJDTFNcIl0sXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG1ha2U6IFwiRG9kZ2VcIixcbiAgICAgICAgbW9kZWxzOiBbXCJDaGFyZ2VyIFIvVFwiLCBcIkNoYWxsZW5nZXIgU1JULThcIiwgXCJDaGFyZ2VyIEhlbGxhY2lvdXNcIl0sXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG1ha2U6IFwiRmVycmFyaVwiLFxuICAgICAgICBtb2RlbHM6IFtcIkdUU1wiLCBcIlNGOTAgU3BpZGVyXCIsIFwiUm9tYVwiXSxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbWFrZTogXCJMYW1ib3JnaGluaVwiLFxuICAgICAgICBtb2RlbHM6IFtcIkF1dMOpbnRpY2FcIiwgXCJTQzIwIFJvYWRzdGVyXCIsIFwiVXJ1cyBQZXJmb3JtYW50ZVwiLCBcIkh1cmFjw6FuXCIsIFwiUmV2dWVsdG9cIl0sXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG1ha2U6IFwiQnVnYXR0aVwiLFxuICAgICAgICBtb2RlbHM6IFtcIkNoaXJvbiBQcm9maWzDqWVcIiwgXCJDaGlyb25cIiwgXCJNaXN0cmFsXCIsIFwiQ2VudG9kaWVjaVwiLCBcIlZleXJvblwiLCBcIkVCMTEwIFNTXCJdLFxuICAgIH0sXG4gICAge1xuICAgICAgICBtYWtlOiBcIk1jTGFyZW5cIixcbiAgICAgICAgbW9kZWxzOiBbXCJYLTFcIiwgXCJNU08gUlwiLCBcIkdUXCIsIFwiNjAwTFRcIiwgXCI3NTBTXCIsIFwiNzY1TFRcIiwgXCJBcnR1cmFcIl0sXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG1ha2U6IFwiSmFndWFyXCIsXG4gICAgICAgIG1vZGVsczogW1wiRi1UeXBlIFI3NVwiLCBcIlhGXCIsIFwiSS1QYWNlXCJdLFxuICAgIH0sXG4gICAge1xuICAgICAgICBtYWtlOiBcIk1hc2VyYXRpXCIsXG4gICAgICAgIG1vZGVsczogW1wiR2hpYmxpIEdUXCIsIFwiTUMyMFwiXSxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbWFrZTogXCJBc3RvbiBNYXJ0aW5cIixcbiAgICAgICAgbW9kZWxzOiBbXCJWaWN0b3JcIiwgXCJWYW50YWdlIEdUMTJcIiwgXCJWOCBWYW50YWdlXCIsIFwiREJTIFZvbGFudGVcIl0sXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG1ha2U6IFwiRm9yZFwiLFxuICAgICAgICBtb2RlbHM6IFtcIkYtMTUwIFJhcHRvclwiLCBcIk11c3RhbmdcIiwgXCJCcm9uY28gUmFwdG9yXCJdLFxuICAgIH0sXG5dO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmhhbmRsZUdlbmVyYXRlID0gZXhwb3J0cy5nZW5lcmF0ZUNhcnMgPSB2b2lkIDA7XG5jb25zdCBjcmVhdGVfY2FyXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vYXBpL2NyZWF0ZS1jYXJcIik7XG5jb25zdCByYW5kb21fY29sb3JfMSA9IHJlcXVpcmUoXCIuL3JhbmRvbS1jb2xvclwiKTtcbmNvbnN0IHJhbmRvbV9tYWtlXzEgPSByZXF1aXJlKFwiLi9yYW5kb20tbWFrZVwiKTtcbmNvbnN0IHJlbmRlcl9nYXJhZ2VfMSA9IHJlcXVpcmUoXCIuLi9yZW5kZXItZ2FyYWdlXCIpO1xuY29uc3QgcGFnaW5hdGlvbl9oZWxwZXJzXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vdXRpbHMvcGFnaW5hdGlvbi1oZWxwZXJzXCIpO1xuY29uc3QgcGFnZV91dGlsc18xID0gcmVxdWlyZShcIi4uL3BhZ2VzL3BhZ2UtdXRpbHNcIik7XG5jb25zdCBzZXRfdG90YWxfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi91dGlscy9zZXQtdG90YWxcIik7XG5jb25zdCBNQVhfQUREID0gMTAwO1xuLy8gR2VuZXJhdGUgMTAwIGNhcnNcbmFzeW5jIGZ1bmN0aW9uIGdlbmVyYXRlQ2FycyhuKSB7XG4gICAgaWYgKG4gPiAwKSB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSAoMCwgcmFuZG9tX21ha2VfMS5nZXRSYW5kb21NYWtlKSgpO1xuICAgICAgICBjb25zdCBjb2xvciA9ICgwLCByYW5kb21fY29sb3JfMS5nZXRSYW5kb21Db2xvcikoKTtcbiAgICAgICAgYXdhaXQgKDAsIGNyZWF0ZV9jYXJfMS5jcmVhdGVDYXJBUEkpKHsgbmFtZSwgY29sb3IgfSk7XG4gICAgICAgIGF3YWl0IGdlbmVyYXRlQ2FycyhuIC0gMSk7XG4gICAgfVxufVxuZXhwb3J0cy5nZW5lcmF0ZUNhcnMgPSBnZW5lcmF0ZUNhcnM7XG4vLyBIYW5kbGUgZ2VuZXJhdGVcbmFzeW5jIGZ1bmN0aW9uIGhhbmRsZUdlbmVyYXRlKGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgYXdhaXQgZ2VuZXJhdGVDYXJzKE1BWF9BREQpO1xuICAgIGlmICgoMCwgcGFnaW5hdGlvbl9oZWxwZXJzXzEuaXNFbm91Z2hTcGFjZSkoKSkge1xuICAgICAgICBjb25zdCBwYWdlID0gKDAsIHBhZ2luYXRpb25faGVscGVyc18xLmdldEN1cnJlbnRQYWdlKSgpO1xuICAgICAgICBhd2FpdCAoMCwgcmVuZGVyX2dhcmFnZV8xLnVwZGF0ZUdhcmFnZSkocGFnZSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICAoMCwgc2V0X3RvdGFsXzEudXBkYXRlVG90YWxDYXJzKShNQVhfQUREKTtcbiAgICAgICAgKDAsIHBhZ2VfdXRpbHNfMS5zZXRUb3RhbFBhZ2VzKSgpO1xuICAgICAgICAoMCwgcGFnZV91dGlsc18xLnRvZ2dsZVBhZ2VCdXR0b25zKSgpO1xuICAgIH1cbiAgICBjb25zb2xlLmxvZyhcIkdlbmVyYXRlOlwiLCBsb2NhbFN0b3JhZ2UpO1xufVxuZXhwb3J0cy5oYW5kbGVHZW5lcmF0ZSA9IGhhbmRsZUdlbmVyYXRlO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldFJhbmRvbUNvbG9yID0gZXhwb3J0cy5nZXRDb2xvclZhbHVlID0gdm9pZCAwO1xuLy8gQ29sb3IgdmFsdWVcbmZ1bmN0aW9uIGdldENvbG9yVmFsdWUoKSB7XG4gICAgcmV0dXJuIE1hdGguY2VpbChNYXRoLnJhbmRvbSgpICogMjU1KVxuICAgICAgICAudG9TdHJpbmcoMTYpXG4gICAgICAgIC5wYWRTdGFydCgyLCBcIjBcIik7XG59XG5leHBvcnRzLmdldENvbG9yVmFsdWUgPSBnZXRDb2xvclZhbHVlO1xuLy8gUmFuZG9tIGNvbG9yXG5mdW5jdGlvbiBnZXRSYW5kb21Db2xvcigpIHtcbiAgICBjb25zdCByZWQgPSBnZXRDb2xvclZhbHVlKCk7XG4gICAgY29uc3QgZ3JlZW4gPSBnZXRDb2xvclZhbHVlKCk7XG4gICAgY29uc3QgYmx1ZSA9IGdldENvbG9yVmFsdWUoKTtcbiAgICBjb25zdCBoZXhDb2xvciA9IGAjJHtyZWR9JHtncmVlbn0ke2JsdWV9YDtcbiAgICByZXR1cm4gaGV4Q29sb3I7XG59XG5leHBvcnRzLmdldFJhbmRvbUNvbG9yID0gZ2V0UmFuZG9tQ29sb3I7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0UmFuZG9tTWFrZSA9IHZvaWQgMDtcbmNvbnN0IGNhcl9tYWtlc18xID0gcmVxdWlyZShcIi4vY2FyLW1ha2VzXCIpO1xuY29uc3QgaGVscGVyc18xID0gcmVxdWlyZShcIi4uLy4uLy4uL3V0aWxzL2hlbHBlcnNcIik7XG4vLyBSYW5kb20gbWFrZVxuZnVuY3Rpb24gZ2V0UmFuZG9tTWFrZSgpIHtcbiAgICBjb25zdCBjYXJJZHggPSAoMCwgaGVscGVyc18xLmdldFJhbmRvbUluZGV4KShjYXJfbWFrZXNfMS5jYXJNYWtlcyk7XG4gICAgY29uc3QgeyBtYWtlLCBtb2RlbHMgfSA9IGNhcl9tYWtlc18xLmNhck1ha2VzW2NhcklkeF07XG4gICAgY29uc3QgbW9kZWxJZHggPSAoMCwgaGVscGVyc18xLmdldFJhbmRvbUluZGV4KShtb2RlbHMpO1xuICAgIGNvbnN0IG1vZGVsID0gbW9kZWxzW21vZGVsSWR4XTtcbiAgICByZXR1cm4gYCR7bWFrZX0gJHttb2RlbH1gO1xufVxuZXhwb3J0cy5nZXRSYW5kb21NYWtlID0gZ2V0UmFuZG9tTWFrZTtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zdGFydEFuaW1hdGlvbiA9IGV4cG9ydHMuY29udHJvbERyaXZlID0gZXhwb3J0cy5yYWNlID0gZXhwb3J0cy5hbmltYXRpb24gPSB2b2lkIDA7XG5jb25zdCBkcml2ZV9jYXJfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi9hcGkvZHJpdmUtY2FyXCIpO1xuY29uc3QgaGVscGVyc18xID0gcmVxdWlyZShcIi4vaGVscGVyc1wiKTtcbmNvbnN0IGdldF9lbGVtZW50XzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vdXRpbHMvZ2V0LWVsZW1lbnRcIik7XG5jb25zdCBoYW5kbGVfd2luXzEgPSByZXF1aXJlKFwiLi4vLi4vdmlldy13aW5uZXJzL2hhbmRsZS13aW5cIik7XG4vL1xuZXhwb3J0cy5hbmltYXRpb24gPSB7XG4gICAgaWQ6IDAsXG59O1xuZXhwb3J0cy5yYWNlID0ge1xuICAgIHdpbm5lcjoge1xuICAgICAgICBpZDogXCJcIixcbiAgICAgICAgdGltZTogMCxcbiAgICB9LFxuICAgIGlzUmFjZTogZmFsc2UsXG4gICAgcmVzZXQ6IGZhbHNlLFxufTtcbi8vIEhhbmRsZSBkcml2ZVxuYXN5bmMgZnVuY3Rpb24gY29udHJvbERyaXZlKGlkKSB7XG4gICAgY29uc3QgeyBzdWNjZXNzIH0gPSBhd2FpdCAoMCwgZHJpdmVfY2FyXzEuZHJpdmVDYXJBUEkpKE51bWJlcihpZCkpO1xuICAgIGlmIChzdWNjZXNzKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiRmluaXNoIVwiLCBpZCk7XG4gICAgICAgIGNhbmNlbEFuaW1hdGlvbkZyYW1lKGV4cG9ydHMuYW5pbWF0aW9uLmlkKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNhbmNlbEFuaW1hdGlvbkZyYW1lKGV4cG9ydHMuYW5pbWF0aW9uLmlkKTtcbiAgICB9XG4gICAgcmV0dXJuIHN1Y2Nlc3M7XG59XG5leHBvcnRzLmNvbnRyb2xEcml2ZSA9IGNvbnRyb2xEcml2ZTtcbi8vIFN0YXJ0IGFuaW1hdGlvblxuYXN5bmMgZnVuY3Rpb24gc3RhcnRBbmltYXRpb24oaWQpIHtcbiAgICBjb25zdCBjYXIgPSAoMCwgZ2V0X2VsZW1lbnRfMS5nZXRFbGVtZW50KShgI2Nhci0tJHtpZH1gKTtcbiAgICBjb25zdCB0aW1lID0gYXdhaXQgKDAsIGhlbHBlcnNfMS5nZXREcml2ZVRpbWUpKGlkKTtcbiAgICBjb25zdCBkaXN0ID0gKDAsIGhlbHBlcnNfMS5nZXREaXN0YW5jZSkoKSAtIDQwO1xuICAgIGNvbnN0IGZyYW1lQ291bnQgPSAodGltZSAvIDEwMDApICogODA7XG4gICAgbGV0IHN0YXJ0WCA9IGNhci5vZmZzZXRMZWZ0O1xuICAgIGNvbnN0IHN0ZXAgPSAoZGlzdCAtIHN0YXJ0WCkgLyBmcmFtZUNvdW50O1xuICAgIGZ1bmN0aW9uIGFuaW1hdGUoKSB7XG4gICAgICAgIHN0YXJ0WCArPSBzdGVwO1xuICAgICAgICBjYXIuc3R5bGUudHJhbnNmb3JtID0gYHRyYW5zbGF0ZSgke3N0YXJ0WH1weClgO1xuICAgICAgICBpZiAoc3RhcnRYIDw9IGRpc3QpIHtcbiAgICAgICAgICAgIGV4cG9ydHMuYW5pbWF0aW9uLmlkID0gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGFuaW1hdGUpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzdGFydFggPj0gZGlzdCkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJGaW5pc2ggZGF0YTpcIiwgZXhwb3J0cy5yYWNlLndpbm5lciwgZXhwb3J0cy5yYWNlLmlzUmFjZSk7XG4gICAgICAgICAgICBpZiAoIWV4cG9ydHMucmFjZS53aW5uZXIuaWQgJiYgZXhwb3J0cy5yYWNlLmlzUmFjZSkge1xuICAgICAgICAgICAgICAgICgwLCBoYW5kbGVfd2luXzEuaGFuZGxlV2lubmVyKShpZCwgdGltZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXIuc3R5bGUudHJhbnNmb3JtID0gYHRyYW5zbGF0ZSgke2Rpc3R9cHgpYDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBhbmltYXRlKCk7XG4gICAgYXdhaXQgY29udHJvbERyaXZlKGlkKTtcbn1cbmV4cG9ydHMuc3RhcnRBbmltYXRpb24gPSBzdGFydEFuaW1hdGlvbjtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5oYW5kbGVSYWNlID0gZXhwb3J0cy5oYW5kbGVSZXNldCA9IGV4cG9ydHMuaGFuZGxlU3RvcCA9IGV4cG9ydHMuc3RvcENhciA9IGV4cG9ydHMuaGFuZGxlU3RhcnQgPSBleHBvcnRzLnNvbWVDYXIgPSB2b2lkIDA7XG5jb25zdCBoZWxwZXJzXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vdXRpbHMvaGVscGVyc1wiKTtcbmNvbnN0IGRyaXZlX2Nhcl8xID0gcmVxdWlyZShcIi4uLy4uLy4uL2FwaS9kcml2ZS1jYXJcIik7XG5jb25zdCBnZXRfZWxlbWVudF8xID0gcmVxdWlyZShcIi4uLy4uLy4uL3V0aWxzL2dldC1lbGVtZW50XCIpO1xuY29uc3QgaGVscGVyc18yID0gcmVxdWlyZShcIi4vaGVscGVyc1wiKTtcbmNvbnN0IGhhbmRsZV93aW5fMSA9IHJlcXVpcmUoXCIuLi8uLi92aWV3LXdpbm5lcnMvaGFuZGxlLXdpblwiKTtcbmNvbnN0IGFuaW1hdGlvbl8xID0gcmVxdWlyZShcIi4vYW5pbWF0aW9uXCIpO1xuY29uc3QgcGFnaW5hdGlvbl9oZWxwZXJzXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vdXRpbHMvcGFnaW5hdGlvbi1oZWxwZXJzXCIpO1xuY29uc3QgcmVuZGVyX2dhcmFnZV8xID0gcmVxdWlyZShcIi4uL3JlbmRlci1nYXJhZ2VcIik7XG5jb25zdCBwYWdlX3V0aWxzXzEgPSByZXF1aXJlKFwiLi4vcGFnZXMvcGFnZS11dGlsc1wiKTtcbmNvbnN0IHNob3dfcG9wdXBfMSA9IHJlcXVpcmUoXCIuLi9wb3B1cC9zaG93LXBvcHVwXCIpO1xuZXhwb3J0cy5zb21lQ2FyID0ge1xuICAgIGlzTW92aW5nOiBmYWxzZSxcbn07XG4vL1xuLy8gSEFORExFIFNUQVJUXG4vL1xuYXN5bmMgZnVuY3Rpb24gaGFuZGxlU3RhcnQoZSkge1xuICAgIGNvbnN0IGlkID0gKDAsIGhlbHBlcnNfMS5nZXRUYXJnZXRJRCkoZSk7XG4gICAgY29uc3QgY2FyID0gKDAsIGdldF9lbGVtZW50XzEuZ2V0RWxlbWVudCkoYCNjYXItLSR7aWR9YCk7XG4gICAgY29uc3QgaXNDYXJEcml2aW5nID0gY2FyLmNsYXNzTGlzdC5jb250YWlucyhcIi5jYXItLWRyaXZpbmdcIiAvKiBTZWxlY3Rvci5DYXJEcml2aW5nICovLnNsaWNlKDEpKTtcbiAgICBpZiAoaXNDYXJEcml2aW5nKVxuICAgICAgICByZXR1cm47XG4gICAgY2FyLmNsYXNzTGlzdC5hZGQoXCIuY2FyLS1kcml2aW5nXCIgLyogU2VsZWN0b3IuQ2FyRHJpdmluZyAqLy5zbGljZSgxKSk7XG4gICAgZXhwb3J0cy5zb21lQ2FyLmlzTW92aW5nID0gdHJ1ZTtcbiAgICAoMCwgYW5pbWF0aW9uXzEuc3RhcnRBbmltYXRpb24pKGlkKTtcbiAgICAoMCwgaGVscGVyc18yLnRvZ2dsZUNvbnRyb2xzKShlKTtcbn1cbmV4cG9ydHMuaGFuZGxlU3RhcnQgPSBoYW5kbGVTdGFydDtcbi8vXG4vLyBTVE9QXG4vL1xuYXN5bmMgZnVuY3Rpb24gc3RvcENhcihpZCkge1xuICAgIGNvbnN0IGNhciA9ICgwLCBnZXRfZWxlbWVudF8xLmdldEVsZW1lbnQpKGAjY2FyLS0ke2lkfWApO1xuICAgIGNhci5zdHlsZS50cmFuc2Zvcm0gPSBcInRyYW5zbGF0ZSgwcHgpXCI7XG4gICAgYXdhaXQgKDAsIGRyaXZlX2Nhcl8xLnN0b3BDYXJBUEkpKGlkKTtcbiAgICBjYXIuY2xhc3NMaXN0LnJlbW92ZShcIi5jYXItLWRyaXZpbmdcIiAvKiBTZWxlY3Rvci5DYXJEcml2aW5nICovLnNsaWNlKDEpKTtcbn1cbmV4cG9ydHMuc3RvcENhciA9IHN0b3BDYXI7XG4vL1xuLy8gSEFORExFIFNUT1Bcbi8vXG5hc3luYyBmdW5jdGlvbiBoYW5kbGVTdG9wKGUpIHtcbiAgICBjb25zdCBpZCA9IE51bWJlcigoMCwgaGVscGVyc18xLmdldFRhcmdldElEKShlKSk7XG4gICAgZXhwb3J0cy5zb21lQ2FyLmlzTW92aW5nID0gZmFsc2U7XG4gICAgY2FuY2VsQW5pbWF0aW9uRnJhbWUoYW5pbWF0aW9uXzEuYW5pbWF0aW9uLmlkKTtcbiAgICBhd2FpdCBzdG9wQ2FyKGlkKTtcbiAgICAoMCwgaGVscGVyc18yLnRvZ2dsZUNvbnRyb2xzKShlKTtcbn1cbmV4cG9ydHMuaGFuZGxlU3RvcCA9IGhhbmRsZVN0b3A7XG4vL1xuLy8gSEFORExFIFJFU0VUXG4vL1xuYXN5bmMgZnVuY3Rpb24gaGFuZGxlUmVzZXQoZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAoMCwgaGFuZGxlX3dpbl8xLmNsZWFuV2lubmVyKSgpO1xuICAgICgwLCBoZWxwZXJzXzIubW92ZVRvU3RhcnQpKCk7XG4gICAgY2FuY2VsQW5pbWF0aW9uRnJhbWUoYW5pbWF0aW9uXzEuYW5pbWF0aW9uLmlkKTtcbiAgICBjb25zdCBidXR0b25zID0gW1wicmFjZVwiIC8qIEJ1dHRvbi5SYWNlICovLCBcImNyZWF0ZVwiIC8qIEJ1dHRvbi5DcmVhdGUgKi8sIFwiZ2VuZXJhdGVcIiAvKiBCdXR0b24uR2VuZXJhdGUgKi9dO1xuICAgICgwLCBoZWxwZXJzXzIuZGlzYWJsZUJ1dHRvbnMpKGJ1dHRvbnMsIGZhbHNlKTtcbiAgICBjb25zdCBwYWdlID0gKDAsIHBhZ2luYXRpb25faGVscGVyc18xLmdldEN1cnJlbnRQYWdlKSgpO1xuICAgIGF3YWl0ICgwLCByZW5kZXJfZ2FyYWdlXzEudXBkYXRlR2FyYWdlKShwYWdlKTtcbiAgICBjb25zb2xlLmxvZyhcIlJlc2V0XCIpO1xufVxuZXhwb3J0cy5oYW5kbGVSZXNldCA9IGhhbmRsZVJlc2V0O1xuLy9cbi8vIFJBQ0Vcbi8vXG5hc3luYyBmdW5jdGlvbiBoYW5kbGVSYWNlKGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgKDAsIGhhbmRsZV93aW5fMS5jbGVhbldpbm5lcikoKTtcbiAgICAoMCwgaGVscGVyc18yLm1vdmVUb1N0YXJ0KSgpO1xuICAgIGNhbmNlbEFuaW1hdGlvbkZyYW1lKGFuaW1hdGlvbl8xLmFuaW1hdGlvbi5pZCk7XG4gICAgYW5pbWF0aW9uXzEucmFjZS5pc1JhY2UgPSB0cnVlO1xuICAgIGNvbnN0IGJ1dHRvbnMgPSBbXCJyYWNlXCIgLyogQnV0dG9uLlJhY2UgKi8sIFwic3RhcnRcIiAvKiBCdXR0b24uU3RhcnQgKi8sIFwiZWRpdFwiIC8qIEJ1dHRvbi5FZGl0ICovLCBcImRlbGV0ZVwiIC8qIEJ1dHRvbi5EZWxldGUgKi8sIFwicGFnZVwiIC8qIEJ1dHRvbi5QYWdlICovLCBcImNyZWF0ZVwiIC8qIEJ1dHRvbi5DcmVhdGUgKi8sIFwiZ2VuZXJhdGVcIiAvKiBCdXR0b24uR2VuZXJhdGUgKi9dO1xuICAgICgwLCBoZWxwZXJzXzIuZGlzYWJsZUJ1dHRvbnMpKGJ1dHRvbnMsIHRydWUpO1xuICAgIGNvbnN0IGlkcyA9ICgwLCBoZWxwZXJzXzIuZ2V0Q2Fyc0lkcykoKTtcbiAgICBjb25zdCBhbGxSYWNlQ2FycyA9IGlkcy5tYXAoYXN5bmMgKGlkKSA9PiB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0ICgwLCBhbmltYXRpb25fMS5zdGFydEFuaW1hdGlvbikoaWQpO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0pO1xuICAgIGF3YWl0IFByb21pc2UuYWxsKGFsbFJhY2VDYXJzKTtcbiAgICAoMCwgc2hvd19wb3B1cF8xLmhpZGVQb3B1cCkoKTtcbiAgICAoMCwgaGVscGVyc18yLmRpc2FibGVCdXR0b25zKShidXR0b25zLCBmYWxzZSk7XG4gICAgKDAsIHBhZ2VfdXRpbHNfMS50b2dnbGVQYWdlQnV0dG9ucykoKTtcbiAgICBhbmltYXRpb25fMS5yYWNlLmlzUmFjZSA9IGZhbHNlO1xuICAgIGNvbnNvbGUubG9nKFwiUmFjZVwiLCBhbmltYXRpb25fMS5yYWNlLmlzUmFjZSk7XG59XG5leHBvcnRzLmhhbmRsZVJhY2UgPSBoYW5kbGVSYWNlO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRpc2FibGVCdXR0b25zID0gZXhwb3J0cy5kaXNhYmxlQnV0dG9uID0gZXhwb3J0cy5nZXRDYXJzSWRzID0gZXhwb3J0cy50b2dnbGVDb250cm9scyA9IGV4cG9ydHMuZ2V0U2libGluZ0J1dHRvbiA9IGV4cG9ydHMuZ2V0RGlzdGFuY2UgPSBleHBvcnRzLmdldERyaXZlVGltZSA9IGV4cG9ydHMubW92ZVRvU3RhcnQgPSB2b2lkIDA7XG5jb25zdCBkcml2ZV9jYXJfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi9hcGkvZHJpdmUtY2FyXCIpO1xuY29uc3QgZ2V0X2VsZW1lbnRfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi91dGlscy9nZXQtZWxlbWVudFwiKTtcbmNvbnN0IGhlbHBlcnNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi91dGlscy9oZWxwZXJzXCIpO1xuLy8gTW92ZSB0byBzdGFydFxuZnVuY3Rpb24gbW92ZVRvU3RhcnQoKSB7XG4gICAgY29uc3QgY2FycyA9IFsuLi4oMCwgZ2V0X2VsZW1lbnRfMS5nZXRFbGVtZW50c0FycmF5KShcIi5jYXJcIiAvKiBTZWxlY3Rvci5DYXIgKi8pXTtcbiAgICBjYXJzLmZvckVhY2goKGNhckVsKSA9PiB7XG4gICAgICAgIGNvbnN0IGNhciA9IGNhckVsO1xuICAgICAgICBjYXIuc3R5bGUudHJhbnNmb3JtID0gXCJ0cmFuc2xhdGUoMHB4KVwiO1xuICAgIH0pO1xufVxuZXhwb3J0cy5tb3ZlVG9TdGFydCA9IG1vdmVUb1N0YXJ0O1xuLy8gR2V0IGRyaXZlIHRpbWVcbmFzeW5jIGZ1bmN0aW9uIGdldERyaXZlVGltZShpZCkge1xuICAgIGNvbnN0IHN0YXJ0RGF0YSA9IGF3YWl0ICgwLCBkcml2ZV9jYXJfMS5zdGFydENhckFQSSkoTnVtYmVyKGlkKSk7XG4gICAgY29uc3QgdGltZSA9IHN0YXJ0RGF0YS5kaXN0YW5jZSAvIHN0YXJ0RGF0YS52ZWxvY2l0eTtcbiAgICByZXR1cm4gdGltZTtcbn1cbmV4cG9ydHMuZ2V0RHJpdmVUaW1lID0gZ2V0RHJpdmVUaW1lO1xuLy8gR2V0IGRpc3RhbmNlXG5mdW5jdGlvbiBnZXREaXN0YW5jZSgpIHtcbiAgICBjb25zdCB3aW5kb3dXaWR0aCA9IGRvY3VtZW50LmJvZHkuY2xpZW50V2lkdGg7XG4gICAgY29uc3QgcGFkZGluZyA9IHdpbmRvd1dpZHRoID4gNTUwID8gMjAgKiAyIDogMTUgKiAyO1xuICAgIHJldHVybiB3aW5kb3dXaWR0aCAtIHBhZGRpbmc7XG59XG5leHBvcnRzLmdldERpc3RhbmNlID0gZ2V0RGlzdGFuY2U7XG4vLyBHZXQgc3RhcnQgYnV0dG9uXG5mdW5jdGlvbiBnZXRTaWJsaW5nQnV0dG9uKGJ1dHRvbikge1xuICAgIGNvbnN0IGlzU3RvcEJ1dHRvbiA9IGJ1dHRvbi5jbGFzc0xpc3QuY29udGFpbnMoXCIuYnV0dG9uX19zdG9wXCIgLyogU2VsZWN0b3IuQnV0dG9uU3RvcCAqLy5zbGljZSgxKSk7XG4gICAgY29uc3Qgc2libGluZyA9IGlzU3RvcEJ1dHRvbiA/IGJ1dHRvbi5wcmV2aW91c0VsZW1lbnRTaWJsaW5nIDogYnV0dG9uLm5leHRFbGVtZW50U2libGluZztcbiAgICBpZiAoIShzaWJsaW5nIGluc3RhbmNlb2YgSFRNTEJ1dHRvbkVsZW1lbnQpKSB7XG4gICAgICAgIHRocm93IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHNpYmxpbmcgYnV0dG9uLi4uXCIpO1xuICAgIH1cbiAgICByZXR1cm4gc2libGluZztcbn1cbmV4cG9ydHMuZ2V0U2libGluZ0J1dHRvbiA9IGdldFNpYmxpbmdCdXR0b247XG4vLyBUb2dnbGUgY29udHJvbHNcbmZ1bmN0aW9uIHRvZ2dsZUNvbnRyb2xzKGUpIHtcbiAgICBjb25zdCB0YXJnZXRCdXR0b24gPSAoMCwgZ2V0X2VsZW1lbnRfMS5nZXRUYXJnZXQpKGUpO1xuICAgIGNvbnN0IHNpYmxpbmdCdXR0b24gPSBnZXRTaWJsaW5nQnV0dG9uKHRhcmdldEJ1dHRvbik7XG4gICAgKDAsIGhlbHBlcnNfMS50b2dnbGVEaXNhYmxlKSh0YXJnZXRCdXR0b24pO1xuICAgICgwLCBoZWxwZXJzXzEudG9nZ2xlRGlzYWJsZSkoc2libGluZ0J1dHRvbik7XG59XG5leHBvcnRzLnRvZ2dsZUNvbnRyb2xzID0gdG9nZ2xlQ29udHJvbHM7XG4vLyBHZXQgYWxsIGlkc1xuZnVuY3Rpb24gZ2V0Q2Fyc0lkcygpIHtcbiAgICBjb25zdCB0cmFja3MgPSBbLi4uKDAsIGdldF9lbGVtZW50XzEuZ2V0RWxlbWVudHNBcnJheSkoXCIudHJhY2tcIiAvKiBTZWxlY3Rvci5UcmFjayAqLyldO1xuICAgIGNvbnN0IGlkcyA9IHRyYWNrcy5tYXAoKHRyYWNrKSA9PiB7XG4gICAgICAgIGNvbnN0IGlkID0gdHJhY2suaWQuc3BsaXQoXCItLVwiKS5hdCgtMSk7XG4gICAgICAgIHJldHVybiBpZCB8fCBcIlwiO1xuICAgIH0pO1xuICAgIGlmICghaWRzLmxlbmd0aCkge1xuICAgICAgICB0aHJvdyBFcnJvcihcIkNhbid0IGdldCBjdXJyZW50IGNhcnMnIGlkcy5cIik7XG4gICAgfVxuICAgIHJldHVybiBpZHM7XG59XG5leHBvcnRzLmdldENhcnNJZHMgPSBnZXRDYXJzSWRzO1xuLy8gRGlzYWJsZSBidXR0b25zXG5mdW5jdGlvbiBkaXNhYmxlQnV0dG9uKGJ1dHRvbk5hbWUsIHN0YXRlKSB7XG4gICAgY29uc3QgYnV0dG9ucyA9IFsuLi4oMCwgZ2V0X2VsZW1lbnRfMS5nZXRFbGVtZW50c0FycmF5KShgLmJ1dHRvbl9fJHtidXR0b25OYW1lfWApXTtcbiAgICBidXR0b25zLmZvckVhY2goKGJ0bikgPT4ge1xuICAgICAgICBjb25zdCBidXR0b24gPSBidG47XG4gICAgICAgIGlmIChidXR0b24gaW5zdGFuY2VvZiBIVE1MQnV0dG9uRWxlbWVudCkge1xuICAgICAgICAgICAgYnV0dG9uLmRpc2FibGVkID0gc3RhdGU7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmV4cG9ydHMuZGlzYWJsZUJ1dHRvbiA9IGRpc2FibGVCdXR0b247XG4vLyBEaXNhYmxlIGFsbFxuZnVuY3Rpb24gZGlzYWJsZUJ1dHRvbnMoYnV0dG9ucywgc3RhdGUpIHtcbiAgICBidXR0b25zLmZvckVhY2goKGJ1dHRvbikgPT4ge1xuICAgICAgICBkaXNhYmxlQnV0dG9uKGJ1dHRvbiwgc3RhdGUpO1xuICAgIH0pO1xufVxuZXhwb3J0cy5kaXNhYmxlQnV0dG9ucyA9IGRpc2FibGVCdXR0b25zO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldFNlbGVjdGVkQ2FyID0gdm9pZCAwO1xuLy8gR2V0IGl0ZW0gZnJvbSBMU1xuZnVuY3Rpb24gZ2V0U2VsZWN0ZWRDYXIoKSB7XG4gICAgY29uc3Qgc2F2ZWRJdGVtID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJlZGl0SXRlbVwiKTtcbiAgICBpZiAoIXNhdmVkSXRlbSkge1xuICAgICAgICB0aHJvdyBFcnJvcihcIkNvdWxkbid0IGdldCAnZWRpdEl0ZW0nIGZyb20gTG9jYWwgU3RvcmFnZS5cIik7XG4gICAgfVxuICAgIGNvbnN0IGVkaXRJdGVtID0gSlNPTi5wYXJzZShzYXZlZEl0ZW0pO1xuICAgIHJldHVybiBlZGl0SXRlbTtcbn1cbmV4cG9ydHMuZ2V0U2VsZWN0ZWRDYXIgPSBnZXRTZWxlY3RlZENhcjtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5oaWRlVXBkYXRlRm9ybSA9IGV4cG9ydHMuc2hvd1VwZGF0ZUZvcm0gPSBleHBvcnRzLnNldFVwZGF0ZUlucHV0cyA9IHZvaWQgMDtcbmNvbnN0IGdldF9lbGVtZW50XzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vdXRpbHMvZ2V0LWVsZW1lbnRcIik7XG4vLyBTRVQgSU5QVVRTXG5mdW5jdGlvbiBzZXRVcGRhdGVJbnB1dHMoY2FyKSB7XG4gICAgY29uc3QgeyBpbnB1dFRleHQsIGlucHV0Q29sb3IgfSA9ICgwLCBnZXRfZWxlbWVudF8xLmdldEZvcm1JbnB1dHMpKFwiLmZvcm1fX3VwZGF0ZVwiIC8qIFNlbGVjdG9yLkZvcm1VcGRhdGUgKi8pO1xuICAgIGlucHV0VGV4dC52YWx1ZSA9IGNhci5uYW1lO1xuICAgIGlucHV0Q29sb3IudmFsdWUgPSBjYXIuY29sb3I7XG59XG5leHBvcnRzLnNldFVwZGF0ZUlucHV0cyA9IHNldFVwZGF0ZUlucHV0cztcbi8vIFNIT1dcbmZ1bmN0aW9uIHNob3dVcGRhdGVGb3JtKGNhcikge1xuICAgIHNldFVwZGF0ZUlucHV0cyhjYXIpO1xuICAgIGNvbnNvbGUubG9nKGNhcik7IC8vIEN1cnJlbnQgdmFsdWVzXG4gICAgY29uc3QgZm9ybSA9ICgwLCBnZXRfZWxlbWVudF8xLmdldEVsZW1lbnQpKFwiLmZvcm1fX3VwZGF0ZVwiIC8qIFNlbGVjdG9yLkZvcm1VcGRhdGUgKi8pO1xuICAgIGZvcm0uY2xhc3NMaXN0LmFkZChcIi5mb3JtX191cGRhdGUtLW9wZW5cIiAvKiBTZWxlY3Rvci5Gb3JtVXBkYXRlT3BlbiAqLy5zbGljZSgxKSk7XG4gICAgZm9ybS5kYXRhc2V0LmVkaXRJZCA9IFN0cmluZyhjYXIuaWQpO1xufVxuZXhwb3J0cy5zaG93VXBkYXRlRm9ybSA9IHNob3dVcGRhdGVGb3JtO1xuLy8gSElERVxuZnVuY3Rpb24gaGlkZVVwZGF0ZUZvcm0oZSkge1xuICAgIGNvbnN0IHRhcmdldCA9ICgwLCBnZXRfZWxlbWVudF8xLmdldFRhcmdldCkoZSk7XG4gICAgaWYgKHRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJidXR0b25fX2VkaXRcIikpXG4gICAgICAgIHJldHVybjtcbiAgICBpZiAoISh0YXJnZXQudGFnTmFtZSA9PT0gXCJCVVRUT05cIikpXG4gICAgICAgIHJldHVybjtcbiAgICBjb25zdCBmb3JtID0gKDAsIGdldF9lbGVtZW50XzEuZ2V0RWxlbWVudCkoXCIuZm9ybV9fdXBkYXRlXCIgLyogU2VsZWN0b3IuRm9ybVVwZGF0ZSAqLyk7XG4gICAgZm9ybS5jbGFzc0xpc3QucmVtb3ZlKFwiLmZvcm1fX3VwZGF0ZS0tb3BlblwiIC8qIFNlbGVjdG9yLkZvcm1VcGRhdGVPcGVuICovLnNsaWNlKDEpKTtcbn1cbmV4cG9ydHMuaGlkZVVwZGF0ZUZvcm0gPSBoaWRlVXBkYXRlRm9ybTtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5oYW5kbGVVcGRhdGUgPSB2b2lkIDA7XG5jb25zdCBnZXRfZWxlbWVudF8xID0gcmVxdWlyZShcIi4uLy4uLy4uL3V0aWxzL2dldC1lbGVtZW50XCIpO1xuY29uc3QgaGFuZGxlX2Zvcm1fMSA9IHJlcXVpcmUoXCIuL2hhbmRsZS1mb3JtXCIpO1xuY29uc3QgY3JlYXRlX2Nhcl8xID0gcmVxdWlyZShcIi4uLy4uLy4uL2FwaS9jcmVhdGUtY2FyXCIpO1xuY29uc3QgdXBkYXRlX2Nhcl91aV8xID0gcmVxdWlyZShcIi4vdXBkYXRlLWNhci11aVwiKTtcbmNvbnN0IGdldF9zZWxlY3RlZF9jYXJfMSA9IHJlcXVpcmUoXCIuL2dldC1zZWxlY3RlZC1jYXJcIik7XG4vLyBIYW5kbGUgdXBkYXRlXG5hc3luYyBmdW5jdGlvbiBoYW5kbGVVcGRhdGUoZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zdCB7IGlucHV0VGV4dCwgaW5wdXRDb2xvciB9ID0gKDAsIGdldF9lbGVtZW50XzEuZ2V0Rm9ybUlucHV0cykoXCIuZm9ybV9fdXBkYXRlXCIgLyogU2VsZWN0b3IuRm9ybVVwZGF0ZSAqLyk7XG4gICAgY29uc3Qgc2VsZWN0ZWRDYXIgPSAoMCwgZ2V0X3NlbGVjdGVkX2Nhcl8xLmdldFNlbGVjdGVkQ2FyKSgpO1xuICAgIGlmICghaW5wdXRUZXh0LnZhbHVlLnRyaW0oKSkge1xuICAgICAgICBpbnB1dFRleHQuZm9jdXMoKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoaW5wdXRUZXh0LnZhbHVlID09PSBzZWxlY3RlZENhci5uYW1lICYmIGlucHV0Q29sb3IudmFsdWUgPT09IHNlbGVjdGVkQ2FyLmNvbG9yKSB7XG4gICAgICAgICgwLCBoYW5kbGVfZm9ybV8xLmhpZGVVcGRhdGVGb3JtKShlKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBpZCA9IHNlbGVjdGVkQ2FyLmlkO1xuICAgIGNvbnN0IHBhdGNoID0ge1xuICAgICAgICBuYW1lOiBpbnB1dFRleHQudmFsdWUsXG4gICAgICAgIGNvbG9yOiBpbnB1dENvbG9yLnZhbHVlLFxuICAgIH07XG4gICAgYXdhaXQgKDAsIGNyZWF0ZV9jYXJfMS51cGRhdGVDYXJBUEkpKGlkLCBwYXRjaCk7XG4gICAgKDAsIHVwZGF0ZV9jYXJfdWlfMS51cGRhdGVDYXJVSSkoaWQsIHBhdGNoKTtcbiAgICAoMCwgaGFuZGxlX2Zvcm1fMS5oaWRlVXBkYXRlRm9ybSkoZSk7XG59XG5leHBvcnRzLmhhbmRsZVVwZGF0ZSA9IGhhbmRsZVVwZGF0ZTtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jYW5jZWxVcGRhdGUgPSBleHBvcnRzLnN0YXJ0VXBkYXRlID0gdm9pZCAwO1xuY29uc3QgaGVscGVyc18xID0gcmVxdWlyZShcIi4uLy4uLy4uL3V0aWxzL2hlbHBlcnNcIik7XG5jb25zdCBnZXRfY2Fyc18xID0gcmVxdWlyZShcIi4uLy4uLy4uL2FwaS9nZXQtY2Fyc1wiKTtcbmNvbnN0IGhhbmRsZV9mb3JtXzEgPSByZXF1aXJlKFwiLi9oYW5kbGUtZm9ybVwiKTtcbi8vIFN0YXJ0IHVwZGF0ZVxuYXN5bmMgZnVuY3Rpb24gc3RhcnRVcGRhdGUoZSkge1xuICAgIGNvbnN0IGlkID0gKDAsIGhlbHBlcnNfMS5nZXRUYXJnZXRJRCkoZSk7XG4gICAgY29uc3QgY2FyID0gYXdhaXQgKDAsIGdldF9jYXJzXzEuZ2V0Q2FyQVBJKShpZCk7XG4gICAgKDAsIGhhbmRsZV9mb3JtXzEuc2hvd1VwZGF0ZUZvcm0pKGNhcik7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJlZGl0SXRlbVwiLCBKU09OLnN0cmluZ2lmeShjYXIpKTtcbn1cbmV4cG9ydHMuc3RhcnRVcGRhdGUgPSBzdGFydFVwZGF0ZTtcbi8vIENhbmNlbCB1cGRhdGVcbmZ1bmN0aW9uIGNhbmNlbFVwZGF0ZShlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICgwLCBoYW5kbGVfZm9ybV8xLmhpZGVVcGRhdGVGb3JtKShlKTtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImVkaXRJdGVtXCIsIFwiXCIpO1xufVxuZXhwb3J0cy5jYW5jZWxVcGRhdGUgPSBjYW5jZWxVcGRhdGU7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudXBkYXRlQ2FyVUkgPSB2b2lkIDA7XG4vLyBVcGRhdGUgY2FyIFVJXG5mdW5jdGlvbiB1cGRhdGVDYXJVSShpZCwgcGF0Y2gpIHtcbiAgICBjb25zdCB0cmFjayA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGB0cmFjay0tJHtpZH1gKTtcbiAgICBjb25zdCBjYXIgPSB0cmFjaz8ucXVlcnlTZWxlY3RvcihgI2Nhci0tJHtpZH0gc3ZnYCk7XG4gICAgY29uc3QgY2FyTmFtZSA9IHRyYWNrPy5xdWVyeVNlbGVjdG9yKFwiLmNhcl9fbmFtZVwiKTtcbiAgICBpZiAoIWNhciB8fCAhKGNhciBpbnN0YW5jZW9mIFNWR0VsZW1lbnQpKSB7XG4gICAgICAgIHRocm93IEVycm9yKFwiQ291bGRuJ3QgZ2V0IGNhciBTVkcgZWxlbWVudC5cIik7XG4gICAgfVxuICAgIGlmICghY2FyTmFtZSkge1xuICAgICAgICB0aHJvdyBFcnJvcihcIkNvdWxkbid0IGdldCBhIHNwYW4gd2l0aCBjYXIgbmFtZS5cIik7XG4gICAgfVxuICAgIGNhci5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBwYXRjaC5jb2xvcjtcbiAgICBjYXJOYW1lLnRleHRDb250ZW50ID0gcGF0Y2gubmFtZTtcbn1cbmV4cG9ydHMudXBkYXRlQ2FyVUkgPSB1cGRhdGVDYXJVSTtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5oYW5kbGVHYXJhZ2VQYWdlcyA9IHZvaWQgMDtcbmNvbnN0IGdldF9lbGVtZW50XzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vdXRpbHMvZ2V0LWVsZW1lbnRcIik7XG5jb25zdCBwYWdpbmF0aW9uX2hlbHBlcnNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi91dGlscy9wYWdpbmF0aW9uLWhlbHBlcnNcIik7XG5jb25zdCByZW5kZXJfZ2FyYWdlXzEgPSByZXF1aXJlKFwiLi4vcmVuZGVyLWdhcmFnZVwiKTtcbmNvbnN0IGFuaW1hdGlvbl8xID0gcmVxdWlyZShcIi4uL2hhbmRsZS1yYWNlL2FuaW1hdGlvblwiKTtcbi8vIEhhbmRsZSBwYWdpbmF0aW9uXG5hc3luYyBmdW5jdGlvbiBoYW5kbGVHYXJhZ2VQYWdlcyhlKSB7XG4gICAgY29uc3QgdGFyZ2V0ID0gKDAsIGdldF9lbGVtZW50XzEuZ2V0VGFyZ2V0KShlKTtcbiAgICBjb25zdCBpc05leHRCdXR0b24gPSB0YXJnZXQuaWQgPT09IFwiLmJ1dHRvbl9fbmV4dFwiIC8qIFNlbGVjdG9yLkJ1dHRvbk5leHQgKi8uc2xpY2UoMSk7XG4gICAgY29uc3QgaXNQcmV2QnV0dG9uID0gdGFyZ2V0LmlkID09PSBcIi5idXR0b25fX3ByZXZcIiAvKiBTZWxlY3Rvci5CdXR0b25QcmV2ICovLnNsaWNlKDEpO1xuICAgIGlmIChpc05leHRCdXR0b24gJiYgKDAsIHBhZ2luYXRpb25faGVscGVyc18xLmlzTGFzdFBhZ2UpKCkpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJMYXN0IHBhZ2VcIik7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGlzUHJldkJ1dHRvbiAmJiAoMCwgcGFnaW5hdGlvbl9oZWxwZXJzXzEuaXNGaXJzdFBhZ2UpKCkpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJGaXJzdCBwYWdlXCIpO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IGN1cnJlbnRQYWdlID0gKDAsIHBhZ2luYXRpb25faGVscGVyc18xLmdldEN1cnJlbnRQYWdlKSgpO1xuICAgIGNvbnN0IG5ld1BhZ2UgPSBpc05leHRCdXR0b24gPyBjdXJyZW50UGFnZSArIDEgOiBjdXJyZW50UGFnZSAtIDE7XG4gICAgYXdhaXQgKDAsIHJlbmRlcl9nYXJhZ2VfMS51cGRhdGVHYXJhZ2UpKG5ld1BhZ2UpO1xuICAgIGNvbnNvbGUubG9nKFwiSXMgcmFjZTpcIiwgYW5pbWF0aW9uXzEucmFjZSk7XG59XG5leHBvcnRzLmhhbmRsZUdhcmFnZVBhZ2VzID0gaGFuZGxlR2FyYWdlUGFnZXM7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuc2V0UGFnaW5hdGlvbiA9IGV4cG9ydHMudG9nZ2xlUGFnZUJ1dHRvbnMgPSBleHBvcnRzLnNldEN1cnJlbnRQYWdlID0gZXhwb3J0cy5zZXRUb3RhbFBhZ2VzID0gZXhwb3J0cy5nZXRUb3RhbFBhZ2VzID0gdm9pZCAwO1xuY29uc3QgY29uc3RhbnRzXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vYXBpL2NvbnN0YW50c1wiKTtcbmNvbnN0IGdldF9lbGVtZW50XzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vdXRpbHMvZ2V0LWVsZW1lbnRcIik7XG5jb25zdCBwYWdpbmF0aW9uX2hlbHBlcnNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi91dGlscy9wYWdpbmF0aW9uLWhlbHBlcnNcIik7XG5jb25zdCBoZWxwZXJzXzEgPSByZXF1aXJlKFwiLi4vaGFuZGxlLXJhY2UvaGVscGVyc1wiKTtcbmNvbnN0IGhlbHBlcnNfMiA9IHJlcXVpcmUoXCIuLi8uLi8uLi91dGlscy9oZWxwZXJzXCIpO1xuLy8gR2V0IHRvdGFsIHBhZ2VzXG5mdW5jdGlvbiBnZXRUb3RhbFBhZ2VzKCkge1xuICAgIGNvbnN0IHZpZXcgPSAoMCwgaGVscGVyc18yLmdldEN1cnJlbnRWaWV3KSgpO1xuICAgIGNvbnN0IHRvdGFsSXRlbXMgPSBOdW1iZXIobG9jYWxTdG9yYWdlLmdldEl0ZW0oYHRvdGFsLS0ke3ZpZXd9YCkpO1xuICAgIGNvbnN0IHRvdGFsUGFnZXMgPSB2aWV3ID09PSBcImdhcmFnZVwiIC8qIFZpZXcuR2FyYWdlICovID8gTWF0aC5jZWlsKHRvdGFsSXRlbXMgLyBjb25zdGFudHNfMS5HQVJBR0VfTElNSVQpIDogTWF0aC5jZWlsKHRvdGFsSXRlbXMgLyBjb25zdGFudHNfMS5XSU5ORVJTX0xJTUlUKTtcbiAgICByZXR1cm4gdG90YWxQYWdlcztcbn1cbmV4cG9ydHMuZ2V0VG90YWxQYWdlcyA9IGdldFRvdGFsUGFnZXM7XG4vLyBTZXQgdG90YWwgcGFnZXNcbmZ1bmN0aW9uIHNldFRvdGFsUGFnZXMoKSB7XG4gICAgY29uc3QgdmlldyA9ICgwLCBoZWxwZXJzXzIuZ2V0Q3VycmVudFZpZXcpKCk7XG4gICAgY29uc3QgdG90YWxQYWdlc0VsZW1lbnQgPSAoMCwgZ2V0X2VsZW1lbnRfMS5nZXRFbGVtZW50KShcIi5wYWdlLS10b3RhbFwiIC8qIFNlbGVjdG9yLlRvdGFsUGFnZXMgKi8pO1xuICAgIGNvbnN0IHRvdGFsUGFnZXMgPSBTdHJpbmcoZ2V0VG90YWxQYWdlcygpKTtcbiAgICB0b3RhbFBhZ2VzRWxlbWVudC50ZXh0Q29udGVudCA9IHRvdGFsUGFnZXM7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oYCR7dmlld30tdG90YWxQYWdlc2AsIHRvdGFsUGFnZXMpO1xufVxuZXhwb3J0cy5zZXRUb3RhbFBhZ2VzID0gc2V0VG90YWxQYWdlcztcbi8vIFNhdmUgcGFnZVxuZnVuY3Rpb24gc2V0Q3VycmVudFBhZ2UocGFnZSkge1xuICAgIGNvbnN0IHZpZXcgPSAoMCwgaGVscGVyc18yLmdldEN1cnJlbnRWaWV3KSgpO1xuICAgIGNvbnN0IHBhZ2VFbGVtZW50ID0gKDAsIGdldF9lbGVtZW50XzEuZ2V0RWxlbWVudCkoXCIucGFnZS0tY3VycmVudFwiIC8qIFNlbGVjdG9yLkN1cnJlbnRQYWdlICovKTtcbiAgICBjb25zdCBuZXdQYWdlID0gcGFnZSB8fCAxO1xuICAgIHBhZ2VFbGVtZW50LnRleHRDb250ZW50ID0gU3RyaW5nKG5ld1BhZ2UpO1xuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGAke3ZpZXd9LXBhZ2VgLCBTdHJpbmcobmV3UGFnZSkpO1xufVxuZXhwb3J0cy5zZXRDdXJyZW50UGFnZSA9IHNldEN1cnJlbnRQYWdlO1xuLy8gVG9nZ2xlIHBhZ2UgYnV0dG9uc1xuZnVuY3Rpb24gdG9nZ2xlUGFnZUJ1dHRvbnMoKSB7XG4gICAgKDAsIGhlbHBlcnNfMS5kaXNhYmxlQnV0dG9uKShcInBhZ2VcIiAvKiBCdXR0b24uUGFnZSAqLywgZmFsc2UpO1xuICAgIGlmICgoMCwgcGFnaW5hdGlvbl9oZWxwZXJzXzEuZ2V0Q3VycmVudFBhZ2UpKCkgPT09IDEpIHtcbiAgICAgICAgKDAsIGhlbHBlcnNfMS5kaXNhYmxlQnV0dG9uKShcInByZXZcIiAvKiBCdXR0b24uUHJldiAqLywgdHJ1ZSk7XG4gICAgfVxuICAgIGlmICgoMCwgcGFnaW5hdGlvbl9oZWxwZXJzXzEuaXNMYXN0UGFnZSkoKSkge1xuICAgICAgICAoMCwgaGVscGVyc18xLmRpc2FibGVCdXR0b24pKFwibmV4dFwiIC8qIEJ1dHRvbi5OZXh0ICovLCB0cnVlKTtcbiAgICB9XG59XG5leHBvcnRzLnRvZ2dsZVBhZ2VCdXR0b25zID0gdG9nZ2xlUGFnZUJ1dHRvbnM7XG4vLyBVcGRhdGUgcGFnaW5hdGlvblxuZnVuY3Rpb24gc2V0UGFnaW5hdGlvbihwYWdlKSB7XG4gICAgc2V0Q3VycmVudFBhZ2UocGFnZSk7XG4gICAgc2V0VG90YWxQYWdlcygpO1xuICAgIHRvZ2dsZVBhZ2VCdXR0b25zKCk7XG59XG5leHBvcnRzLnNldFBhZ2luYXRpb24gPSBzZXRQYWdpbmF0aW9uO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNob3dQb3B1cCA9IGV4cG9ydHMuaGlkZVBvcHVwID0gdm9pZCAwO1xuY29uc3QgZ2V0X2VsZW1lbnRfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi91dGlscy9nZXQtZWxlbWVudFwiKTtcbi8vIEhpZGUgcG9wdXBcbmZ1bmN0aW9uIGhpZGVQb3B1cChwb3B1cCkge1xuICAgIGNvbnN0IG9wZW5lZFBvcHVwID0gcG9wdXAgfHwgKDAsIGdldF9lbGVtZW50XzEuZ2V0RWxlbWVudCkoXCIucG9wdXBcIiAvKiBTZWxlY3Rvci5Qb3B1cCAqLyk7XG4gICAgb3BlbmVkUG9wdXAuY2xhc3NMaXN0LnJlbW92ZShcIi5wb3B1cC0tb3BlblwiIC8qIFNlbGVjdG9yLlBvcHVwT3BlbiAqLy5zbGljZSgxKSk7XG59XG5leHBvcnRzLmhpZGVQb3B1cCA9IGhpZGVQb3B1cDtcbi8vIFNob3cgcG9wdXBcbmZ1bmN0aW9uIHNob3dQb3B1cCh3aW5uZXIpIHtcbiAgICBjb25zdCBwb3B1cCA9ICgwLCBnZXRfZWxlbWVudF8xLmdldEVsZW1lbnQpKFwiLnBvcHVwXCIgLyogU2VsZWN0b3IuUG9wdXAgKi8pO1xuICAgIGNvbnN0IHdpbm5lckVsZW1lbnQgPSAoMCwgZ2V0X2VsZW1lbnRfMS5nZXRFbGVtZW50KShcIi5wb3B1cF9fd2lubmVyXCIgLyogU2VsZWN0b3IuUG9wdXBXaW5uZXIgKi8pO1xuICAgIGNvbnN0IHRpbWVFbGVtZW50ID0gKDAsIGdldF9lbGVtZW50XzEuZ2V0RWxlbWVudCkoXCIucG9wdXBfX3RpbWVcIiAvKiBTZWxlY3Rvci5Qb3B1cFRpbWUgKi8pO1xuICAgIGNvbnN0IG5hbWUgPSAoMCwgZ2V0X2VsZW1lbnRfMS5nZXRFbGVtZW50KShgI2Nhcl9fbmFtZS0tJHt3aW5uZXIuaWR9YCkudGV4dENvbnRlbnQ7XG4gICAgY29uc3QgdGltZSA9IE51bWJlcih3aW5uZXIudGltZSAvIDEwMDApLnRvRml4ZWQoMik7XG4gICAgd2lubmVyRWxlbWVudC50ZXh0Q29udGVudCA9IG5hbWU7XG4gICAgdGltZUVsZW1lbnQudGV4dENvbnRlbnQgPSBgJHt0aW1lfSBzZWNgO1xuICAgIHBvcHVwLmNsYXNzTGlzdC5hZGQoXCIucG9wdXAtLW9wZW5cIiAvKiBTZWxlY3Rvci5Qb3B1cE9wZW4gKi8uc2xpY2UoMSkpO1xufVxuZXhwb3J0cy5zaG93UG9wdXAgPSBzaG93UG9wdXA7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucmVuZGVyR2FyYWdlVmlldyA9IGV4cG9ydHMudXBkYXRlR2FyYWdlID0gdm9pZCAwO1xuY29uc3QgZ2V0X2NhcnNfMSA9IHJlcXVpcmUoXCIuLi8uLi9hcGkvZ2V0LWNhcnNcIik7XG5jb25zdCB0b2dnbGVfZWxlbWVudHNfMSA9IHJlcXVpcmUoXCIuLi90b2dnbGUvdG9nZ2xlLWVsZW1lbnRzXCIpO1xuY29uc3QgcGFnaW5hdGlvbl9oZWxwZXJzXzEgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHMvcGFnaW5hdGlvbi1oZWxwZXJzXCIpO1xuY29uc3QgcGFnZV91dGlsc18xID0gcmVxdWlyZShcIi4vcGFnZXMvcGFnZS11dGlsc1wiKTtcbmNvbnN0IGhlbHBlcnNfMSA9IHJlcXVpcmUoXCIuLi8uLi91dGlscy9oZWxwZXJzXCIpO1xuY29uc3Qgc2V0X3RvdGFsXzEgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHMvc2V0LXRvdGFsXCIpO1xuY29uc3QgYXBwZW5kX3RyYWNrc18xID0gcmVxdWlyZShcIi4vdHJhY2tzL2FwcGVuZC10cmFja3NcIik7XG5jb25zdCBsaXN0ZW5lcnNfMSA9IHJlcXVpcmUoXCIuLi8uLi9saXN0ZW5lcnNcIik7XG4vLyBVcGRhdGUgR2FyYWdlXG5hc3luYyBmdW5jdGlvbiB1cGRhdGVHYXJhZ2UocGFnZSkge1xuICAgIGNvbnN0IGNhcnMgPSBhd2FpdCAoMCwgZ2V0X2NhcnNfMS5nZXRDYXJzQVBJKShwYWdlKTtcbiAgICAoMCwgYXBwZW5kX3RyYWNrc18xLmFwcGVuZFRyYWNrcykoY2Fycyk7XG4gICAgKDAsIHNldF90b3RhbF8xLnNldFRvdGFsQ291bnQpKGNhcnMuY291bnQpO1xuICAgICgwLCBwYWdlX3V0aWxzXzEuc2V0UGFnaW5hdGlvbikocGFnZSk7XG59XG5leHBvcnRzLnVwZGF0ZUdhcmFnZSA9IHVwZGF0ZUdhcmFnZTtcbi8vIFJlbmRlciBHYXJhZ2Ugdmlld1xuYXN5bmMgZnVuY3Rpb24gcmVuZGVyR2FyYWdlVmlldyhlKSB7XG4gICAgaWYgKGUgJiYgKDAsIGhlbHBlcnNfMS5nZXRDdXJyZW50VmlldykoKSA9PT0gXCJnYXJhZ2VcIiAvKiBWaWV3LkdhcmFnZSAqLylcbiAgICAgICAgcmV0dXJuO1xuICAgICgwLCBoZWxwZXJzXzEuc2F2ZUN1cnJlbnRWaWV3KShcImdhcmFnZVwiIC8qIFZpZXcuR2FyYWdlICovKTtcbiAgICAoMCwgdG9nZ2xlX2VsZW1lbnRzXzEudG9nZ2xlVUlFbGVtZW50cykoXCJnYXJhZ2VcIiAvKiBWaWV3LkdhcmFnZSAqLyk7XG4gICAgKDAsIGxpc3RlbmVyc18xLmluaXRQYWdpbmF0aW9uKShcImdhcmFnZVwiIC8qIFZpZXcuR2FyYWdlICovKTtcbiAgICBjb25zdCBwYWdlID0gKDAsIHBhZ2luYXRpb25faGVscGVyc18xLmdldEN1cnJlbnRQYWdlKSgpO1xuICAgIGF3YWl0IHVwZGF0ZUdhcmFnZShwYWdlKTtcbiAgICBjb25zb2xlLmxvZyhcIvCfmYIgR2FyYWdlIFZpZXdcIik7XG59XG5leHBvcnRzLnJlbmRlckdhcmFnZVZpZXcgPSByZW5kZXJHYXJhZ2VWaWV3O1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZVRyYWNrQnV0dG9ucyA9IGV4cG9ydHMuaGFuZGxlRGVsZXRlID0gdm9pZCAwO1xuY29uc3QgY3JlYXRlX2VsZW1lbnRfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi91dGlscy9jcmVhdGUtZWxlbWVudFwiKTtcbmNvbnN0IGNyZWF0ZV9jYXJfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi9hcGkvY3JlYXRlLWNhclwiKTtcbmNvbnN0IHJlbmRlcl9nYXJhZ2VfMSA9IHJlcXVpcmUoXCIuLi9yZW5kZXItZ2FyYWdlXCIpO1xuY29uc3QgaGVscGVyc18xID0gcmVxdWlyZShcIi4uLy4uLy4uL3V0aWxzL2hlbHBlcnNcIik7XG5jb25zdCBzdGFydF91cGRhdGVfMSA9IHJlcXVpcmUoXCIuLi9oYW5kbGUtdXBkYXRlL3N0YXJ0LXVwZGF0ZVwiKTtcbmNvbnN0IHBhZ2luYXRpb25faGVscGVyc18xID0gcmVxdWlyZShcIi4uLy4uLy4uL3V0aWxzL3BhZ2luYXRpb24taGVscGVyc1wiKTtcbmNvbnN0IGhhbmRsZV9yYWNlXzEgPSByZXF1aXJlKFwiLi4vaGFuZGxlLXJhY2UvaGFuZGxlLXJhY2VcIik7XG5jb25zdCBoYW5kbGVfZm9ybV8xID0gcmVxdWlyZShcIi4uL2hhbmRsZS11cGRhdGUvaGFuZGxlLWZvcm1cIik7XG5jb25zdCBjcmVhdGVfd2lubmVyc18xID0gcmVxdWlyZShcIi4uLy4uLy4uL2FwaS9jcmVhdGUtd2lubmVyc1wiKTtcbi8vIERlbGV0ZVxuYXN5bmMgZnVuY3Rpb24gaGFuZGxlRGVsZXRlKGUpIHtcbiAgICBpZiAoKDAsIHBhZ2luYXRpb25faGVscGVyc18xLmdldEN1cnJlbnRQYWdlKSgpID09PSAxICYmICgwLCBwYWdpbmF0aW9uX2hlbHBlcnNfMS5pc0xhc3RUcmFjaykoKSlcbiAgICAgICAgcmV0dXJuO1xuICAgIGNvbnN0IGlkID0gKDAsIGhlbHBlcnNfMS5nZXRUYXJnZXRJRCkoZSk7XG4gICAgYXdhaXQgKDAsIGNyZWF0ZV9jYXJfMS5kZWxldGVDYXJBUEkpKGlkKTtcbiAgICBhd2FpdCAoMCwgY3JlYXRlX3dpbm5lcnNfMS5kZWxldGVXaW5uZXJBUEkpKGlkKTtcbiAgICBjb25zdCBjdXJyZW50UGFnZSA9ICgwLCBwYWdpbmF0aW9uX2hlbHBlcnNfMS5nZXRDdXJyZW50UGFnZSkoKTtcbiAgICBjb25zdCBwYWdlID0gKDAsIHBhZ2luYXRpb25faGVscGVyc18xLmlzTGFzdFRyYWNrKSgpID8gY3VycmVudFBhZ2UgLSAxIDogY3VycmVudFBhZ2U7XG4gICAgYXdhaXQgKDAsIHJlbmRlcl9nYXJhZ2VfMS51cGRhdGVHYXJhZ2UpKHBhZ2UpO1xuICAgICgwLCBoYW5kbGVfZm9ybV8xLmhpZGVVcGRhdGVGb3JtKShlKTtcbiAgICBjb25zb2xlLmxvZyhcIkRlbGV0ZTpcIiwgbG9jYWxTdG9yYWdlKTtcbn1cbmV4cG9ydHMuaGFuZGxlRGVsZXRlID0gaGFuZGxlRGVsZXRlO1xuLy8gQnV0dG9uc1xuZnVuY3Rpb24gY3JlYXRlVHJhY2tCdXR0b25zKCkge1xuICAgIGNvbnN0IHRyYWNrQnV0dG9ucyA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmNyZWF0ZUVsZW1lbnQpKFwiZGl2XCIsIFtcIi50cmFja19fYnV0dG9uc1wiIC8qIFNlbGVjdG9yLlRyYWNrQnV0dG9ucyAqL10pO1xuICAgIGNvbnN0IHN0YXJ0QnRuID0gKDAsIGNyZWF0ZV9lbGVtZW50XzEuY3JlYXRlQnV0dG9uKShcInN0YXJ0XCIgLyogQnV0dG9uLlN0YXJ0ICovLCBbXCIuYnV0dG9uX190cmFja1wiIC8qIFNlbGVjdG9yLkJ1dHRvblRyYWNrICovLCBcIi5idXR0b25fX3N0YXJ0XCIgLyogU2VsZWN0b3IuQnV0dG9uU3RhcnQgKi9dKTtcbiAgICBjb25zdCBzdG9wQnRuID0gKDAsIGNyZWF0ZV9lbGVtZW50XzEuY3JlYXRlQnV0dG9uKShcInN0b3BcIiAvKiBCdXR0b24uU3RvcCAqLywgW1wiLmJ1dHRvbl9fdHJhY2tcIiAvKiBTZWxlY3Rvci5CdXR0b25UcmFjayAqLywgXCIuYnV0dG9uX19zdG9wXCIgLyogU2VsZWN0b3IuQnV0dG9uU3RvcCAqL10pO1xuICAgIGNvbnN0IGVkaXRCdG4gPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVCdXR0b24pKFwiZWRpdFwiIC8qIEJ1dHRvbi5FZGl0ICovLCBbXCIuYnV0dG9uX190cmFja1wiIC8qIFNlbGVjdG9yLkJ1dHRvblRyYWNrICovLCBcIi5idXR0b25fX2VkaXRcIiAvKiBTZWxlY3Rvci5CdXR0b25FZGl0ICovXSk7XG4gICAgY29uc3QgZGVsZXRlQnRuID0gKDAsIGNyZWF0ZV9lbGVtZW50XzEuY3JlYXRlQnV0dG9uKShcImRlbGV0ZVwiIC8qIEJ1dHRvbi5EZWxldGUgKi8sIFtcIi5idXR0b25fX3RyYWNrXCIgLyogU2VsZWN0b3IuQnV0dG9uVHJhY2sgKi8sIFwiLmJ1dHRvbl9fZGVsZXRlXCIgLyogU2VsZWN0b3IuQnV0dG9uRGVsZXRlICovXSk7XG4gICAgZWRpdEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgc3RhcnRfdXBkYXRlXzEuc3RhcnRVcGRhdGUpO1xuICAgIGRlbGV0ZUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgaGFuZGxlRGVsZXRlKTtcbiAgICBzdGFydEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgaGFuZGxlX3JhY2VfMS5oYW5kbGVTdGFydCk7XG4gICAgc3RvcEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgaGFuZGxlX3JhY2VfMS5oYW5kbGVTdG9wKTtcbiAgICBzdG9wQnRuLmRpc2FibGVkID0gdHJ1ZTtcbiAgICB0cmFja0J1dHRvbnMuYXBwZW5kKHN0YXJ0QnRuLCBzdG9wQnRuLCBlZGl0QnRuLCBkZWxldGVCdG4pO1xuICAgIHJldHVybiB0cmFja0J1dHRvbnM7XG59XG5leHBvcnRzLmNyZWF0ZVRyYWNrQnV0dG9ucyA9IGNyZWF0ZVRyYWNrQnV0dG9ucztcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5hcHBlbmRUcmFja3MgPSBleHBvcnRzLmFwcGVuZFRyYWNrID0gdm9pZCAwO1xuY29uc3QgZ2V0X2VsZW1lbnRfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi91dGlscy9nZXQtZWxlbWVudFwiKTtcbmNvbnN0IGhlbHBlcnNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi91dGlscy9oZWxwZXJzXCIpO1xuY29uc3QgY3JlYXRlX3RyYWNrXzEgPSByZXF1aXJlKFwiLi9jcmVhdGUtdHJhY2tcIik7XG4vLyBBcHBlbmQgdHJhY2tcbmZ1bmN0aW9uIGFwcGVuZFRyYWNrKGNhcikge1xuICAgIGNvbnN0IHZpZXdCb2R5ID0gKDAsIGdldF9lbGVtZW50XzEuZ2V0RWxlbWVudCkoXCIudmlld19fYm9keVwiIC8qIFNlbGVjdG9yLlZpZXdCb2R5ICovKTtcbiAgICBjb25zdCBuZXdUcmFjayA9ICgwLCBjcmVhdGVfdHJhY2tfMS5jcmVhdGVUcmFjaykoY2FyKTtcbiAgICB2aWV3Qm9keS5hcHBlbmQobmV3VHJhY2spO1xufVxuZXhwb3J0cy5hcHBlbmRUcmFjayA9IGFwcGVuZFRyYWNrO1xuLy8gUmVuZGVyIHRyYWNrc1xuZnVuY3Rpb24gYXBwZW5kVHJhY2tzKGNhcnMpIHtcbiAgICBjb25zdCB2aWV3Qm9keSA9ICgwLCBnZXRfZWxlbWVudF8xLmdldEVsZW1lbnQpKFwiLnZpZXdfX2JvZHlcIiAvKiBTZWxlY3Rvci5WaWV3Qm9keSAqLyk7XG4gICAgKDAsIGhlbHBlcnNfMS5jbGVhbkNvbnRlbnQpKHZpZXdCb2R5KTtcbiAgICBjb25zdCBjYXJzQXJyID0gWy4uLmNhcnMuaXRlbXNdO1xuICAgIGNhcnNBcnIuZm9yRWFjaCgoY2FyKSA9PiB7XG4gICAgICAgIGNvbnN0IHRyYWNrID0gKDAsIGNyZWF0ZV90cmFja18xLmNyZWF0ZVRyYWNrKShjYXIpO1xuICAgICAgICB2aWV3Qm9keS5hcHBlbmQodHJhY2spO1xuICAgIH0pO1xuICAgIHJldHVybiB2aWV3Qm9keTtcbn1cbmV4cG9ydHMuYXBwZW5kVHJhY2tzID0gYXBwZW5kVHJhY2tzO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZVRyYWNrID0gZXhwb3J0cy5jcmVhdGVUcmFja0JvZHkgPSBleHBvcnRzLmNyZWF0ZVRyYWNrSGVhZGVyID0gdm9pZCAwO1xuY29uc3QgY3JlYXRlX2VsZW1lbnRfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi91dGlscy9jcmVhdGUtZWxlbWVudFwiKTtcbmNvbnN0IHRyYWNrX2J1dHRvbnNfMSA9IHJlcXVpcmUoXCIuLi90cmFjay1idXR0b25zL3RyYWNrLWJ1dHRvbnNcIik7XG5jb25zdCBOUyA9IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtcbmNvbnN0IENBUl9TSVpFID0gXCI0MHB4XCI7XG4vLyBUcmFjayBoZWFkZXJcbmZ1bmN0aW9uIGNyZWF0ZVRyYWNrSGVhZGVyKGNhcikge1xuICAgIGNvbnN0IHRyYWNrSGVhZGVyID0gKDAsIGNyZWF0ZV9lbGVtZW50XzEuY3JlYXRlRWxlbWVudCkoXCJkaXZcIiwgW1wiLnRyYWNrX19oZWFkZXJcIiAvKiBTZWxlY3Rvci5UcmFja0hlYWRlciAqL10pO1xuICAgIGNvbnN0IGJ1dHRvbnMgPSAoMCwgdHJhY2tfYnV0dG9uc18xLmNyZWF0ZVRyYWNrQnV0dG9ucykoKTtcbiAgICBjb25zdCBjYXJOYW1lID0gKDAsIGNyZWF0ZV9lbGVtZW50XzEuY3JlYXRlRWxlbWVudCkoXCJzcGFuXCIsIFtcIi5jYXJfX25hbWVcIiAvKiBTZWxlY3Rvci5DYXJOYW1lICovXSwgY2FyLm5hbWUpO1xuICAgIGNhck5hbWUuaWQgPSBgJHtcIi5jYXJfX25hbWVcIiAvKiBTZWxlY3Rvci5DYXJOYW1lICovLnNsaWNlKDEpfS0tJHtjYXIuaWR9YDtcbiAgICB0cmFja0hlYWRlci5hcHBlbmQoYnV0dG9ucywgY2FyTmFtZSk7XG4gICAgcmV0dXJuIHRyYWNrSGVhZGVyO1xufVxuZXhwb3J0cy5jcmVhdGVUcmFja0hlYWRlciA9IGNyZWF0ZVRyYWNrSGVhZGVyO1xuLy8gVHJhY2sgYm9keVxuZnVuY3Rpb24gY3JlYXRlVHJhY2tCb2R5KGNhcikge1xuICAgIGNvbnN0IHRyYWNrQm9keSA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmNyZWF0ZUVsZW1lbnQpKFwiZGl2XCIsIFtcIi50cmFja19fYm9keVwiIC8qIFNlbGVjdG9yLlRyYWNrQm9keSAqL10pO1xuICAgIGNvbnN0IGNhclByb3BzID0ge1xuICAgICAgICBkaXZDbGFzczogXCIuY2FyXCIgLyogU2VsZWN0b3IuQ2FyICovLFxuICAgICAgICBuczogTlMsXG4gICAgICAgIHdpZHRoOiBDQVJfU0laRSxcbiAgICAgICAgaGVpZ2h0OiBDQVJfU0laRSxcbiAgICAgICAgY29sb3I6IGNhci5jb2xvcixcbiAgICB9O1xuICAgIGNvbnN0IGNhckVsZW1lbnQgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVTVkcpKGNhclByb3BzKTtcbiAgICBjYXJFbGVtZW50LmlkID0gYGNhci0tJHtjYXIuaWR9YDtcbiAgICBjb25zdCBmaW5pc2hFbGVtZW50ID0gKDAsIGNyZWF0ZV9lbGVtZW50XzEuY3JlYXRlRWxlbWVudCkoXCJkaXZcIiwgW1wiLmZsYWdcIiAvKiBTZWxlY3Rvci5GbGFnICovXSk7XG4gICAgdHJhY2tCb2R5LmFwcGVuZChjYXJFbGVtZW50LCBmaW5pc2hFbGVtZW50KTtcbiAgICByZXR1cm4gdHJhY2tCb2R5O1xufVxuZXhwb3J0cy5jcmVhdGVUcmFja0JvZHkgPSBjcmVhdGVUcmFja0JvZHk7XG4vLyBDcmVhdGUgdHJhY2tcbmZ1bmN0aW9uIGNyZWF0ZVRyYWNrKGNhcikge1xuICAgIGNvbnN0IHRyYWNrID0gKDAsIGNyZWF0ZV9lbGVtZW50XzEuY3JlYXRlRWxlbWVudCkoXCJkaXZcIiwgW1wiLnRyYWNrXCIgLyogU2VsZWN0b3IuVHJhY2sgKi9dKTtcbiAgICB0cmFjay5pZCA9IGB0cmFjay0tJHtjYXIuaWR9YDtcbiAgICBjb25zdCB0cmFja0NvbnRhaW5lciA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmNyZWF0ZUVsZW1lbnQpKFwiZGl2XCIsIFtcIi50cmFja19fY29udGFpbmVyXCIgLyogU2VsZWN0b3IuVHJhY2tDb250YWluZXIgKi9dKTtcbiAgICBjb25zdCB0cmFja0hlYWRlciA9IGNyZWF0ZVRyYWNrSGVhZGVyKGNhcik7XG4gICAgY29uc3QgdHJhY2tCb2R5ID0gY3JlYXRlVHJhY2tCb2R5KGNhcik7XG4gICAgdHJhY2tDb250YWluZXIuYXBwZW5kKHRyYWNrSGVhZGVyLCB0cmFja0JvZHkpO1xuICAgIHRyYWNrLmFwcGVuZCh0cmFja0NvbnRhaW5lcik7XG4gICAgcmV0dXJuIHRyYWNrO1xufVxuZXhwb3J0cy5jcmVhdGVUcmFjayA9IGNyZWF0ZVRyYWNrO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmhhbmRsZVdpbm5lciA9IGV4cG9ydHMuY2xlYW5XaW5uZXIgPSB2b2lkIDA7XG5jb25zdCBhbmltYXRpb25fMSA9IHJlcXVpcmUoXCIuLi92aWV3LWdhcmFnZS9oYW5kbGUtcmFjZS9hbmltYXRpb25cIik7XG5jb25zdCBzaG93X3BvcHVwXzEgPSByZXF1aXJlKFwiLi4vdmlldy1nYXJhZ2UvcG9wdXAvc2hvdy1wb3B1cFwiKTtcbmNvbnN0IGNyZWF0ZV93aW5uZXJzXzEgPSByZXF1aXJlKFwiLi4vLi4vYXBpL2NyZWF0ZS13aW5uZXJzXCIpO1xuY29uc3QgZ2V0X3dpbm5lcnNfMSA9IHJlcXVpcmUoXCIuLi8uLi9hcGkvZ2V0LXdpbm5lcnNcIik7XG4vLyBDbGVhbiB3aW5uZXJcbmZ1bmN0aW9uIGNsZWFuV2lubmVyKCkge1xuICAgIGFuaW1hdGlvbl8xLnJhY2Uud2lubmVyLmlkID0gXCJcIjtcbiAgICBhbmltYXRpb25fMS5yYWNlLndpbm5lci50aW1lID0gMDtcbiAgICBhbmltYXRpb25fMS5yYWNlLmlzUmFjZSA9IGZhbHNlO1xufVxuZXhwb3J0cy5jbGVhbldpbm5lciA9IGNsZWFuV2lubmVyO1xuLy8gSGFuZGxlIHdpbm5lclxuYXN5bmMgZnVuY3Rpb24gaGFuZGxlV2lubmVyKGlkLCB0aW1lKSB7XG4gICAgaWYgKGFuaW1hdGlvbl8xLnJhY2Uud2lubmVyLmlkKVxuICAgICAgICByZXR1cm47XG4gICAgY29uc3QgcHJvcHMgPSB7XG4gICAgICAgIGlkOiBOdW1iZXIoaWQpLFxuICAgICAgICB3aW46IDEsXG4gICAgICAgIHRpbWU6IE51bWJlcih0aW1lKSxcbiAgICB9O1xuICAgIGNvbnN0IHdpbm5lckluV2lubmVycyA9IGF3YWl0ICgwLCBnZXRfd2lubmVyc18xLmdldFdpbm5lckFQSSkoaWQpO1xuICAgIGlmICh3aW5uZXJJbldpbm5lcnMuaWQpIHtcbiAgICAgICAgYXdhaXQgKDAsIGNyZWF0ZV93aW5uZXJzXzEudXBkYXRlV2lubmVyQVBJKShpZCwgeyB3aW46IDEsIHRpbWUgfSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBhd2FpdCAoMCwgY3JlYXRlX3dpbm5lcnNfMS5zYXZlV2lubmVyQVBJKShwcm9wcyk7XG4gICAgfVxuICAgIGFuaW1hdGlvbl8xLnJhY2Uud2lubmVyLmlkID0gaWQ7XG4gICAgYW5pbWF0aW9uXzEucmFjZS53aW5uZXIudGltZSA9IHRpbWU7XG4gICAgKDAsIHNob3dfcG9wdXBfMS5zaG93UG9wdXApKGFuaW1hdGlvbl8xLnJhY2Uud2lubmVyKTtcbn1cbmV4cG9ydHMuaGFuZGxlV2lubmVyID0gaGFuZGxlV2lubmVyO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmhhbmRsZVdpbm5lcnNQYWdlcyA9IHZvaWQgMDtcbmNvbnN0IGdldF9lbGVtZW50XzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vdXRpbHMvZ2V0LWVsZW1lbnRcIik7XG5jb25zdCBwYWdpbmF0aW9uX2hlbHBlcnNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi91dGlscy9wYWdpbmF0aW9uLWhlbHBlcnNcIik7XG5jb25zdCBzb3J0X3BhcmFtc18xID0gcmVxdWlyZShcIi4uL3NvcnQtcGFyYW1zXCIpO1xuY29uc3QgcmVuZGVyX3dpbm5lcnNfMSA9IHJlcXVpcmUoXCIuLi9yZW5kZXItd2lubmVyc1wiKTtcbi8vIFdpbm5lcnMgcGFnaW5hdGlvblxuYXN5bmMgZnVuY3Rpb24gaGFuZGxlV2lubmVyc1BhZ2VzKGUpIHtcbiAgICBjb25zdCB0YXJnZXQgPSAoMCwgZ2V0X2VsZW1lbnRfMS5nZXRUYXJnZXQpKGUpO1xuICAgIGNvbnN0IGlzTmV4dEJ1dHRvbiA9IHRhcmdldC5pZCA9PT0gXCIuYnV0dG9uX19uZXh0XCIgLyogU2VsZWN0b3IuQnV0dG9uTmV4dCAqLy5zbGljZSgxKTtcbiAgICBjb25zdCBpc1ByZXZCdXR0b24gPSB0YXJnZXQuaWQgPT09IFwiLmJ1dHRvbl9fcHJldlwiIC8qIFNlbGVjdG9yLkJ1dHRvblByZXYgKi8uc2xpY2UoMSk7XG4gICAgaWYgKChpc05leHRCdXR0b24gJiYgKDAsIHBhZ2luYXRpb25faGVscGVyc18xLmlzTGFzdFBhZ2UpKCkpIHx8IChpc1ByZXZCdXR0b24gJiYgKDAsIHBhZ2luYXRpb25faGVscGVyc18xLmlzRmlyc3RQYWdlKSgpKSlcbiAgICAgICAgcmV0dXJuO1xuICAgIGNvbnN0IGN1cnJlbnRQYWdlID0gKDAsIHBhZ2luYXRpb25faGVscGVyc18xLmdldEN1cnJlbnRQYWdlKSgpO1xuICAgIGNvbnN0IG5ld1BhZ2UgPSBpc05leHRCdXR0b24gPyBjdXJyZW50UGFnZSArIDEgOiBjdXJyZW50UGFnZSAtIDE7XG4gICAgY29uc3QgY3VycmVudFNvcnQgPSAoMCwgc29ydF9wYXJhbXNfMS5nZXRDdXJyZW50U29ydCkoKTtcbiAgICBjb25zdCB7IHNvcnQsIG9yZGVyIH0gPSAoMCwgc29ydF9wYXJhbXNfMS5nZXRTb3J0T3JkZXIpKGN1cnJlbnRTb3J0KTtcbiAgICBhd2FpdCAoMCwgcmVuZGVyX3dpbm5lcnNfMS51cGRhdGVXaW5uZXJzKSh7IHBhZ2U6IG5ld1BhZ2UsIHNvcnQsIG9yZGVyIH0pO1xufVxuZXhwb3J0cy5oYW5kbGVXaW5uZXJzUGFnZXMgPSBoYW5kbGVXaW5uZXJzUGFnZXM7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucmVuZGVyV2lubmVyc1RhYmxlID0gZXhwb3J0cy5hcHBlbmRSb3dzID0gdm9pZCAwO1xuY29uc3QgZ2V0X2NhcnNfMSA9IHJlcXVpcmUoXCIuLi8uLi9hcGkvZ2V0LWNhcnNcIik7XG5jb25zdCBjcmVhdGVfZWxlbWVudF8xID0gcmVxdWlyZShcIi4uLy4uL3V0aWxzL2NyZWF0ZS1lbGVtZW50XCIpO1xuY29uc3QgZ2V0X2VsZW1lbnRfMSA9IHJlcXVpcmUoXCIuLi8uLi91dGlscy9nZXQtZWxlbWVudFwiKTtcbmNvbnN0IGhlbHBlcnNfMSA9IHJlcXVpcmUoXCIuLi8uLi91dGlscy9oZWxwZXJzXCIpO1xuY29uc3QgdGFibGVfaGVhZGVyXzEgPSByZXF1aXJlKFwiLi90YWJsZS90YWJsZS1oZWFkZXJcIik7XG5jb25zdCB0YWJsZV9yb3dfMSA9IHJlcXVpcmUoXCIuL3RhYmxlL3RhYmxlLXJvd1wiKTtcbi8vIFJvd3NcbmFzeW5jIGZ1bmN0aW9uIGFwcGVuZFJvd3Mod2lubmVycykge1xuICAgIGNvbnN0IHJvd3NDb250YWluZXIgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVFbGVtZW50KShcImRpdlwiLCBbXCIucm93c19fY29udGFpbmVyXCIgLyogU2VsZWN0b3IuUm93c0NvbnRhaW5lciAqL10pO1xuICAgIHdpbm5lcnMuZm9yRWFjaChhc3luYyAod2lubmVyLCBpZHgpID0+IHtcbiAgICAgICAgY29uc3QgY2FyID0gYXdhaXQgKDAsIGdldF9jYXJzXzEuZ2V0Q2FyQVBJKShTdHJpbmcod2lubmVyLmlkKSk7XG4gICAgICAgIGlmICghY2FyLmlkKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCBwcm9wcyA9IHtcbiAgICAgICAgICAgIGNvbG9yOiBjYXIuY29sb3IsXG4gICAgICAgICAgICBuYW1lOiBjYXIubmFtZSxcbiAgICAgICAgICAgIGlkOiBjYXIuaWQsXG4gICAgICAgICAgICB3aW46IHdpbm5lci53aW4sXG4gICAgICAgICAgICB0aW1lOiBOdW1iZXIoKHdpbm5lci50aW1lIC8gMTAwMCkudG9GaXhlZCgyKSksXG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHJvdyA9ICgwLCB0YWJsZV9yb3dfMS5jcmVhdGVSb3cpKHByb3BzLCBpZHgpO1xuICAgICAgICByb3dzQ29udGFpbmVyLmFwcGVuZChyb3cpO1xuICAgIH0pO1xuICAgIHJldHVybiByb3dzQ29udGFpbmVyO1xufVxuZXhwb3J0cy5hcHBlbmRSb3dzID0gYXBwZW5kUm93cztcbi8vIFJlbmRlciB0cmFja3NcbmFzeW5jIGZ1bmN0aW9uIHJlbmRlcldpbm5lcnNUYWJsZSh3aW5uZXJzKSB7XG4gICAgY29uc3Qgdmlld0JvZHkgPSAoMCwgZ2V0X2VsZW1lbnRfMS5nZXRFbGVtZW50KShcIi52aWV3X19ib2R5XCIgLyogU2VsZWN0b3IuVmlld0JvZHkgKi8pO1xuICAgICgwLCBoZWxwZXJzXzEuY2xlYW5Db250ZW50KSh2aWV3Qm9keSk7XG4gICAgY29uc3QgdGFibGUgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVFbGVtZW50KShcImRpdlwiLCBbXCIudGFibGVcIiAvKiBTZWxlY3Rvci5UYWJsZSAqL10pO1xuICAgIGNvbnN0IHRhYmxlSGVhZGVyID0gKDAsIHRhYmxlX2hlYWRlcl8xLmNyZWF0ZVRhYmxlSGVhZGVyKSgpO1xuICAgIGNvbnN0IHJvd3MgPSBhd2FpdCBhcHBlbmRSb3dzKHdpbm5lcnMpO1xuICAgIHRhYmxlLmFwcGVuZCh0YWJsZUhlYWRlciwgcm93cyk7XG4gICAgdmlld0JvZHkuYXBwZW5kKHRhYmxlKTtcbiAgICByZXR1cm4gdmlld0JvZHk7XG59XG5leHBvcnRzLnJlbmRlcldpbm5lcnNUYWJsZSA9IHJlbmRlcldpbm5lcnNUYWJsZTtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5yZW5kZXJXaW5uZXJzVmlldyA9IGV4cG9ydHMudXBkYXRlV2lubmVycyA9IHZvaWQgMDtcbmNvbnN0IGhlbHBlcnNfMSA9IHJlcXVpcmUoXCIuLi8uLi91dGlscy9oZWxwZXJzXCIpO1xuY29uc3QgdG9nZ2xlX2VsZW1lbnRzXzEgPSByZXF1aXJlKFwiLi4vdG9nZ2xlL3RvZ2dsZS1lbGVtZW50c1wiKTtcbmNvbnN0IHBhZ2luYXRpb25faGVscGVyc18xID0gcmVxdWlyZShcIi4uLy4uL3V0aWxzL3BhZ2luYXRpb24taGVscGVyc1wiKTtcbmNvbnN0IGdldF93aW5uZXJzXzEgPSByZXF1aXJlKFwiLi4vLi4vYXBpL2dldC13aW5uZXJzXCIpO1xuY29uc3QgcmVuZGVyX3RhYmxlXzEgPSByZXF1aXJlKFwiLi9yZW5kZXItdGFibGVcIik7XG5jb25zdCBzZXRfdG90YWxfMSA9IHJlcXVpcmUoXCIuLi8uLi91dGlscy9zZXQtdG90YWxcIik7XG5jb25zdCBsaXN0ZW5lcnNfMSA9IHJlcXVpcmUoXCIuLi8uLi9saXN0ZW5lcnNcIik7XG5jb25zdCBzb3J0X3BhcmFtc18xID0gcmVxdWlyZShcIi4vc29ydC1wYXJhbXNcIik7XG5jb25zdCBwYWdlX3V0aWxzXzEgPSByZXF1aXJlKFwiLi4vdmlldy1nYXJhZ2UvcGFnZXMvcGFnZS11dGlsc1wiKTtcbi8vXG4vLyBVcGRhdGUgd2lubmVyc1xuLy9cbmFzeW5jIGZ1bmN0aW9uIHVwZGF0ZVdpbm5lcnMoc29ydFBhcmFtcykge1xuICAgIGNvbnN0IHsgY2Fyczogd2lubmVycywgY291bnQgfSA9IGF3YWl0ICgwLCBnZXRfd2lubmVyc18xLmdldFdpbm5lcnNBUEkpKHNvcnRQYXJhbXMpO1xuICAgIGF3YWl0ICgwLCByZW5kZXJfdGFibGVfMS5yZW5kZXJXaW5uZXJzVGFibGUpKHdpbm5lcnMpO1xuICAgICgwLCBzZXRfdG90YWxfMS5zZXRUb3RhbENvdW50KShjb3VudCk7XG4gICAgY29uc3QgcGFnZSA9IE51bWJlcihzb3J0UGFyYW1zLnBhZ2UpO1xuICAgICgwLCBwYWdlX3V0aWxzXzEuc2V0UGFnaW5hdGlvbikocGFnZSk7XG59XG5leHBvcnRzLnVwZGF0ZVdpbm5lcnMgPSB1cGRhdGVXaW5uZXJzO1xuLy9cbi8vIFJlbmRlclxuLy9cbmFzeW5jIGZ1bmN0aW9uIHJlbmRlcldpbm5lcnNWaWV3KGUpIHtcbiAgICBpZiAoZSAmJiAoMCwgaGVscGVyc18xLmdldEN1cnJlbnRWaWV3KSgpID09PSBcIndpbm5lcnNcIiAvKiBWaWV3Lldpbm5lcnMgKi8pXG4gICAgICAgIHJldHVybjtcbiAgICAoMCwgaGVscGVyc18xLnNhdmVDdXJyZW50VmlldykoXCJ3aW5uZXJzXCIgLyogVmlldy5XaW5uZXJzICovKTtcbiAgICAoMCwgdG9nZ2xlX2VsZW1lbnRzXzEudG9nZ2xlVUlFbGVtZW50cykoXCJ3aW5uZXJzXCIgLyogVmlldy5XaW5uZXJzICovKTtcbiAgICAoMCwgbGlzdGVuZXJzXzEuaW5pdFBhZ2luYXRpb24pKFwid2lubmVyc1wiIC8qIFZpZXcuV2lubmVycyAqLyk7XG4gICAgY29uc3QgcGFnZSA9ICgwLCBwYWdpbmF0aW9uX2hlbHBlcnNfMS5nZXRDdXJyZW50UGFnZSkoKTtcbiAgICBjb25zdCBjdXJyZW50U29ydCA9ICgwLCBzb3J0X3BhcmFtc18xLmdldEN1cnJlbnRTb3J0KSgpO1xuICAgIGNvbnN0IHsgc29ydCwgb3JkZXIgfSA9ICgwLCBzb3J0X3BhcmFtc18xLmdldFNvcnRPcmRlcikoY3VycmVudFNvcnQpO1xuICAgIGF3YWl0IHVwZGF0ZVdpbm5lcnMoeyBwYWdlLCBzb3J0LCBvcmRlciB9KTtcbiAgICBjb25zb2xlLmxvZyhcIvCfmYIgV2lubmVyIFZpZXdcIik7XG59XG5leHBvcnRzLnJlbmRlcldpbm5lcnNWaWV3ID0gcmVuZGVyV2lubmVyc1ZpZXc7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0Q3VycmVudFNvcnQgPSBleHBvcnRzLnNhdmVTb3J0T3B0aW9uID0gZXhwb3J0cy5nZXRTb3J0T3JkZXIgPSB2b2lkIDA7XG4vLyBHZXQgc29ydCBvcmRlclxuZnVuY3Rpb24gZ2V0U29ydE9yZGVyKHNvcnRPcHRpb24pIHtcbiAgICBjb25zdCBvcmRlciA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKGBzb3J0LS0ke3NvcnRPcHRpb259YCkgfHwgXCJERVNDXCI7XG4gICAgcmV0dXJuIHsgc29ydDogc29ydE9wdGlvbiwgb3JkZXIgfTtcbn1cbmV4cG9ydHMuZ2V0U29ydE9yZGVyID0gZ2V0U29ydE9yZGVyO1xuLy8gU2F2ZSBzb3J0IG9wdGlvbnNcbmZ1bmN0aW9uIHNhdmVTb3J0T3B0aW9uKHNvcnRPcHRpb24sIHNvcnRPcmRlcikge1xuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGBzb3J0LS0ke3NvcnRPcHRpb259YCwgc29ydE9yZGVyKTtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImN1cnJlbnRTb3J0XCIsIHNvcnRPcHRpb24pO1xufVxuZXhwb3J0cy5zYXZlU29ydE9wdGlvbiA9IHNhdmVTb3J0T3B0aW9uO1xuLy8gR2V0IGN1cnJlbnQgc29ydFxuZnVuY3Rpb24gZ2V0Q3VycmVudFNvcnQoKSB7XG4gICAgY29uc3Qgc29ydCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiY3VycmVudFNvcnRcIikgfHwgXCJpZFwiO1xuICAgIHJldHVybiBzb3J0O1xufVxuZXhwb3J0cy5nZXRDdXJyZW50U29ydCA9IGdldEN1cnJlbnRTb3J0O1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZVRhYmxlSGVhZGVyID0gZXhwb3J0cy5zb3J0V2lubmVycyA9IHZvaWQgMDtcbmNvbnN0IGNyZWF0ZV9lbGVtZW50XzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vdXRpbHMvY3JlYXRlLWVsZW1lbnRcIik7XG5jb25zdCBzb3J0X3BhcmFtc18xID0gcmVxdWlyZShcIi4uL3NvcnQtcGFyYW1zXCIpO1xuY29uc3QgcGFnaW5hdGlvbl9oZWxwZXJzXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vdXRpbHMvcGFnaW5hdGlvbi1oZWxwZXJzXCIpO1xuY29uc3QgcmVuZGVyX3dpbm5lcnNfMSA9IHJlcXVpcmUoXCIuLi9yZW5kZXItd2lubmVyc1wiKTtcbi8vIFNvcnQgd2lubmVyc1xuYXN5bmMgZnVuY3Rpb24gc29ydFdpbm5lcnMoc29ydE9wdCkge1xuICAgIGNvbnN0IHsgc29ydCwgb3JkZXIgfSA9ICgwLCBzb3J0X3BhcmFtc18xLmdldFNvcnRPcmRlcikoc29ydE9wdCk7XG4gICAgY29uc3QgbmV3T3JkZXIgPSBvcmRlciA9PT0gXCJERVNDXCIgPyBcIkFTQ1wiIDogXCJERVNDXCI7XG4gICAgY29uc3QgcGFnZSA9ICgwLCBwYWdpbmF0aW9uX2hlbHBlcnNfMS5nZXRDdXJyZW50UGFnZSkoKTtcbiAgICAoMCwgc29ydF9wYXJhbXNfMS5zYXZlU29ydE9wdGlvbikoc29ydCwgbmV3T3JkZXIpO1xuICAgIGF3YWl0ICgwLCByZW5kZXJfd2lubmVyc18xLnVwZGF0ZVdpbm5lcnMpKHsgcGFnZSwgc29ydCwgb3JkZXI6IG5ld09yZGVyIH0pO1xufVxuZXhwb3J0cy5zb3J0V2lubmVycyA9IHNvcnRXaW5uZXJzO1xuLy8gVGFibGUgaGVhZGVyXG5mdW5jdGlvbiBjcmVhdGVUYWJsZUhlYWRlcigpIHtcbiAgICBjb25zdCBoZWFkZXIgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVFbGVtZW50KShcImRpdlwiLCBbXCIudGFibGVfX2hlYWRlclwiIC8qIFNlbGVjdG9yLlRhYmxlSGVhZGVyICovXSk7XG4gICAgY29uc3QgbnVtID0gKDAsIGNyZWF0ZV9lbGVtZW50XzEuY3JlYXRlRWxlbWVudCkoXCJzcGFuXCIsIFtcIi5yb3dfX251bWJlclwiIC8qIFNlbGVjdG9yLlJvd051bWJlciAqL10sIFwiI1wiKTtcbiAgICBjb25zdCBjb2xvciA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmNyZWF0ZUVsZW1lbnQpKFwic3BhblwiLCBbXCIucm93X19jb2xvclwiIC8qIFNlbGVjdG9yLlJvd0NvbG9yICovXSwgXCJDb2xvclwiKTtcbiAgICBjb25zdCBuYW1lQ29udGFpbmVyID0gKDAsIGNyZWF0ZV9lbGVtZW50XzEuY3JlYXRlRWxlbWVudCkoXCJkaXZcIiwgW1wiLnJvd19fY2FyXCIgLyogU2VsZWN0b3IuUm93Q2FyICovXSk7XG4gICAgY29uc3QgbmFtZVNwYW4gPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVFbGVtZW50KShcInNwYW5cIiwgW10sIFwiQ2FyXCIpO1xuICAgIGNvbnN0IGJ1dHRvblNvcnRJZHMgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVCdXR0b24pKFwic29ydC0taWRzXCIgLyogQnV0dG9uLlNvcnRJZHMgKi8sIFtcIi5idXR0b25fX3NvcnQtLWlkc1wiIC8qIFNlbGVjdG9yLkJ1dHRvblNvcnRJZHMgKi9dKTtcbiAgICBidXR0b25Tb3J0SWRzLnRleHRDb250ZW50ID0gXCJcIjtcbiAgICBjb25zdCB3aW5zQ29udGFpbmVyID0gKDAsIGNyZWF0ZV9lbGVtZW50XzEuY3JlYXRlRWxlbWVudCkoXCJkaXZcIiwgW1wiLnJvd19fd2luc1wiIC8qIFNlbGVjdG9yLlJvd1dpbnMgKi9dKTtcbiAgICBjb25zdCB3aW5zU3BhbiA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmNyZWF0ZUVsZW1lbnQpKFwic3BhblwiLCBbXSwgXCJXaW5zXCIpO1xuICAgIGNvbnN0IGJ1dHRvblNvcnRXaW5zID0gKDAsIGNyZWF0ZV9lbGVtZW50XzEuY3JlYXRlQnV0dG9uKShcInNvcnQtLXdpbnNcIiAvKiBCdXR0b24uU29ydFdpbiAqLywgW1wiLmJ1dHRvbl9fc29ydC0td2luc1wiIC8qIFNlbGVjdG9yLkJ1dHRvblNvcnRXaW5zICovXSk7XG4gICAgYnV0dG9uU29ydFdpbnMudGV4dENvbnRlbnQgPSBcIlwiO1xuICAgIGNvbnN0IHRpbWVDb250YWluZXIgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVFbGVtZW50KShcImRpdlwiLCBbXCIucm93X190aW1lXCIgLyogU2VsZWN0b3IuUm93VGltZSAqL10pO1xuICAgIGNvbnN0IHRpbWVTcGFuID0gKDAsIGNyZWF0ZV9lbGVtZW50XzEuY3JlYXRlRWxlbWVudCkoXCJzcGFuXCIsIFtdLCBcIlRpbWVcIik7XG4gICAgY29uc3QgYnV0dG9uU29ydFRpbWUgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVCdXR0b24pKFwic29ydC0tdGltZVwiIC8qIEJ1dHRvbi5Tb3J0VGltZSAqLywgW1wiLmJ1dHRvbl9fc29ydC0tdGltZVwiIC8qIFNlbGVjdG9yLkJ1dHRvblNvcnRUaW1lICovXSk7XG4gICAgYnV0dG9uU29ydFRpbWUudGV4dENvbnRlbnQgPSBcIlwiO1xuICAgIGJ1dHRvblNvcnRUaW1lLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiBzb3J0V2lubmVycyhcInRpbWVcIikpO1xuICAgIGJ1dHRvblNvcnRXaW5zLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiBzb3J0V2lubmVycyhcIndpbnNcIikpO1xuICAgIGJ1dHRvblNvcnRJZHMuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHNvcnRXaW5uZXJzKFwiaWRcIikpO1xuICAgIG5hbWVDb250YWluZXIuYXBwZW5kKG5hbWVTcGFuLCBidXR0b25Tb3J0SWRzKTtcbiAgICB3aW5zQ29udGFpbmVyLmFwcGVuZCh3aW5zU3BhbiwgYnV0dG9uU29ydFdpbnMpO1xuICAgIHRpbWVDb250YWluZXIuYXBwZW5kKHRpbWVTcGFuLCBidXR0b25Tb3J0VGltZSk7XG4gICAgaGVhZGVyLmFwcGVuZChudW0sIGNvbG9yLCBuYW1lQ29udGFpbmVyLCB3aW5zQ29udGFpbmVyLCB0aW1lQ29udGFpbmVyKTtcbiAgICByZXR1cm4gaGVhZGVyO1xufVxuZXhwb3J0cy5jcmVhdGVUYWJsZUhlYWRlciA9IGNyZWF0ZVRhYmxlSGVhZGVyO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZVJvdyA9IHZvaWQgMDtcbmNvbnN0IGNyZWF0ZV9lbGVtZW50XzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vdXRpbHMvY3JlYXRlLWVsZW1lbnRcIik7XG4vLyBDcmVhdGUgcm93XG5mdW5jdGlvbiBjcmVhdGVSb3cod2lubmVyLCBpZHgpIHtcbiAgICBjb25zdCByb3cgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVFbGVtZW50KShcImRpdlwiLCBbXCIudGFibGVfX3Jvd1wiIC8qIFNlbGVjdG9yLlRhYmxlUm93ICovXSk7XG4gICAgcm93LmlkID0gYHRyYWNrLS0ke3dpbm5lci5pZH1gO1xuICAgIGNvbnN0IG51bSA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmNyZWF0ZUVsZW1lbnQpKFwic3BhblwiLCBbXCIucm93X19udW1iZXJcIiAvKiBTZWxlY3Rvci5Sb3dOdW1iZXIgKi9dLCBgJHtpZHggKyAxfWApO1xuICAgIGNvbnN0IGNvbG9yQ29udGFpbmVyID0gKDAsIGNyZWF0ZV9lbGVtZW50XzEuY3JlYXRlRWxlbWVudCkoXCJkaXZcIiwgW1wiLmNvbG9yX19jb250YWluZXJcIl0pO1xuICAgIGNvbnN0IGNvbG9yID0gKDAsIGNyZWF0ZV9lbGVtZW50XzEuY3JlYXRlRWxlbWVudCkoXCJzcGFuXCIsIFtcIi5yb3dfX2NvbG9yXCIgLyogU2VsZWN0b3IuUm93Q29sb3IgKi9dKTtcbiAgICBjb2xvckNvbnRhaW5lci5hcHBlbmQoY29sb3IpO1xuICAgIGNvbnN0IG5hbWUgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVFbGVtZW50KShcInNwYW5cIiwgW1wiLnJvd19fY2FyXCIgLyogU2VsZWN0b3IuUm93Q2FyICovXSwgd2lubmVyLm5hbWUpO1xuICAgIGNvbnN0IHdpbnMgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVFbGVtZW50KShcInNwYW5cIiwgW1wiLnJvd19fd2luc1wiIC8qIFNlbGVjdG9yLlJvd1dpbnMgKi9dLCBTdHJpbmcod2lubmVyLndpbikpO1xuICAgIGNvbnN0IHRpbWUgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5jcmVhdGVFbGVtZW50KShcInNwYW5cIiwgW1wiLnJvd19fdGltZVwiIC8qIFNlbGVjdG9yLlJvd1RpbWUgKi9dLCBTdHJpbmcod2lubmVyLnRpbWUpKTtcbiAgICBjb2xvci5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSB3aW5uZXIuY29sb3I7XG4gICAgcm93LmFwcGVuZChudW0sIGNvbG9yQ29udGFpbmVyLCBuYW1lLCB3aW5zLCB0aW1lKTtcbiAgICByZXR1cm4gcm93O1xufVxuZXhwb3J0cy5jcmVhdGVSb3cgPSBjcmVhdGVSb3c7XG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCIvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSAoZXhwb3J0cykgPT4ge1xuXHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblx0fVxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xufTsiLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmM7XG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkge1xuXHRcdFx0dmFyIGkgPSBzY3JpcHRzLmxlbmd0aCAtIDE7XG5cdFx0XHR3aGlsZSAoaSA+IC0xICYmICFzY3JpcHRVcmwpIHNjcmlwdFVybCA9IHNjcmlwdHNbaS0tXS5zcmM7XG5cdFx0fVxuXHR9XG59XG4vLyBXaGVuIHN1cHBvcnRpbmcgYnJvd3NlcnMgd2hlcmUgYW4gYXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCB5b3UgbXVzdCBzcGVjaWZ5IGFuIG91dHB1dC5wdWJsaWNQYXRoIG1hbnVhbGx5IHZpYSBjb25maWd1cmF0aW9uXG4vLyBvciBwYXNzIGFuIGVtcHR5IHN0cmluZyAoXCJcIikgYW5kIHNldCB0aGUgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gdmFyaWFibGUgZnJvbSB5b3VyIGNvZGUgdG8gdXNlIHlvdXIgb3duIGxvZ2ljLlxuaWYgKCFzY3JpcHRVcmwpIHRocm93IG5ldyBFcnJvcihcIkF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyXCIpO1xuc2NyaXB0VXJsID0gc2NyaXB0VXJsLnJlcGxhY2UoLyMuKiQvLCBcIlwiKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiL1wiKTtcbl9fd2VicGFja19yZXF1aXJlX18ucCA9IHNjcmlwdFVybDsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xucmVxdWlyZShcIi4vc3R5bGVzL2luZGV4LmNzc1wiKTtcbmNvbnN0IGFwcF8xID0gcmVxdWlyZShcIi4vc2NyaXB0cy9jb21wb25lbnRzL2FwcFwiKTtcbmNvbnN0IGxpc3RlbmVyc18xID0gcmVxdWlyZShcIi4vc2NyaXB0cy9saXN0ZW5lcnNcIik7XG5jb25zdCByZW5kZXJfZ2FyYWdlXzEgPSByZXF1aXJlKFwiLi9zY3JpcHRzL3ZpZXcvdmlldy1nYXJhZ2UvcmVuZGVyLWdhcmFnZVwiKTtcbi8vIGltcG9ydCB7IHJlbmRlcldpbm5lcnNWaWV3IH0gZnJvbSBcIi4vc2NyaXB0cy92aWV3L3ZpZXctd2lubmVycy9yZW5kZXItd2lubmVyc1wiO1xuKDAsIGFwcF8xLnJlbmRlckFwcCkoKTtcbigwLCByZW5kZXJfZ2FyYWdlXzEucmVuZGVyR2FyYWdlVmlldykoKTtcbi8vIHJlbmRlcldpbm5lcnNWaWV3KCk7XG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKFwi4pyFIERPTSBMb2FkZWRcIik7XG4gICAgKDAsIGxpc3RlbmVyc18xLmluaXRMaXN0ZW5lcnMpKCk7XG59KTtcbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiaSIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwiY29uY2F0Iiwiam9pbiIsIm1vZHVsZXMiLCJtZWRpYVF1ZXJ5IiwiZGVkdXBlIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImxlbmd0aCIsIl9pIiwiX2FycmF5TGlrZVRvQXJyYXkiLCJhcnIiLCJsZW4iLCJhcnIyIiwiQXJyYXkiLCJfaXRlbSIsImlzQXJyYXkiLCJfYXJyYXlXaXRoSG9sZXMiLCJTeW1ib2wiLCJpdGVyYXRvciIsIl9zIiwiX2UiLCJfYXJyIiwiX24iLCJfZCIsImNhbGwiLCJuZXh0IiwiZG9uZSIsInZhbHVlIiwiZXJyIiwiX2l0ZXJhYmxlVG9BcnJheUxpbWl0IiwibyIsIm1pbkxlbiIsIm4iLCJPYmplY3QiLCJwcm90b3R5cGUiLCJzbGljZSIsImNvbnN0cnVjdG9yIiwibmFtZSIsImZyb20iLCJ0ZXN0IiwiX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IiwiVHlwZUVycm9yIiwiX25vbkl0ZXJhYmxlUmVzdCIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJ1cmwiLCJvcHRpb25zIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJoYXNoIiwibmVlZFF1b3RlcyIsInJlcGxhY2UiLCJsb2NhbHMiLCJtZW1vIiwiZ2V0VGFyZ2V0IiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwic3R5bGVzSW5Eb20iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleCIsIm9iaiIsImNzcyIsIm1lZGlhIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRTdHlsZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlIiwiY3JlYXRlRWxlbWVudCIsImF0dHJpYnV0ZXMiLCJub25jZSIsImtleXMiLCJmb3JFYWNoIiwia2V5Iiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsInRleHRTdG9yZSIsInJlcGxhY2VUZXh0IiwicmVwbGFjZW1lbnQiLCJmaWx0ZXIiLCJCb29sZWFuIiwiYXBwbHlUb1NpbmdsZXRvblRhZyIsInJlbW92ZSIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiY3NzTm9kZSIsImNyZWF0ZVRleHROb2RlIiwiY2hpbGROb2RlcyIsInJlbW92ZUNoaWxkIiwiaW5zZXJ0QmVmb3JlIiwiYXBwbHlUb1RhZyIsInJlbW92ZUF0dHJpYnV0ZSIsImZpcnN0Q2hpbGQiLCJzaW5nbGV0b24iLCJzaW5nbGV0b25Db3VudGVyIiwidXBkYXRlIiwic3R5bGVJbmRleCIsImJpbmQiLCJwYXJlbnROb2RlIiwicmVtb3ZlU3R5bGVFbGVtZW50IiwibmV3T2JqIiwiYWxsIiwiYXRvYiIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaW5kZXgiLCJzcGxpY2UiLCJkZWZpbmVQcm9wZXJ0eSIsIldJTk5FUlNfTElNSVQiLCJHQVJBR0VfTElNSVQiLCJFTkdJTkVfVVJMIiwiV0lOTkVSU19VUkwiLCJHQVJBR0VfVVJMIiwiVVJMIiwiZGVsZXRlQ2FyQVBJIiwidXBkYXRlQ2FyQVBJIiwiY3JlYXRlQ2FyQVBJIiwiY29uc3RhbnRzXzEiLCJhc3luYyIsImJvZHkiLCJyZXMiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJqc29uIiwiZGVsZXRlV2lubmVyQVBJIiwidXBkYXRlV2lubmVyQVBJIiwic2F2ZVdpbm5lckFQSSIsImRyaXZlQ2FyQVBJIiwic3RvcENhckFQSSIsInN0YXJ0Q2FyQVBJIiwiY2F0Y2giLCJzdGF0dXMiLCJzdWNjZXNzIiwiZ2V0Q2FyQVBJIiwiZ2V0Q2Fyc0FQSSIsInBhZ2UiLCJ0b3RhbENvdW50IiwiZ2V0IiwiaXRlbXMiLCJnZXRXaW5uZXJBUEkiLCJnZXRXaW5uZXJzQVBJIiwic29ydCIsIm9yZGVyIiwid2lubmVycyIsImNhcnMiLCJyZW5kZXJBcHAiLCJoZWFkZXJfMSIsImZvb3Rlcl8xIiwibWFpbl8xIiwicG9wdXBfMSIsImhlYWRlciIsImNyZWF0ZUhlYWRlciIsIm1haW4iLCJjcmVhdGVNYWluIiwiZm9vdGVyIiwiY3JlYXRlRm9vdGVyIiwicG9wdXAiLCJjcmVhdGVXaW5Qb3B1cCIsImFwcGVuZCIsImNyZWF0ZV9lbGVtZW50XzEiLCJmb290ZXJDb250YWluZXIiLCJwcm9qZWN0SW5mbyIsImdpdGh1YkluZm8iLCJwcm9qZWN0TmFtZSIsInNjaG9vbExpbmsiLCJjcmVhdGVMaW5rIiwiZ2l0aHViTGluayIsImNyZWF0ZUJhc2ljRm9ybSIsImJ1dHRvbk5hbWUiLCJmb3JtQ29udGFpbmVyIiwidGV4dElucHV0IiwiY3JlYXRlSW5wdXQiLCJwbGFjZWhvbGRlciIsImNvbG9ySW5wdXQiLCJidXR0b25DcmVhdGUiLCJjcmVhdGVCdXR0b24iLCJjcmVhdGVIZWFkZXJGb3JtcyIsImNyZWF0ZVVwZGF0ZUZvcm0iLCJjcmVhdGVDcmVhdGVGb3JtIiwiZm9ybV9iYXNpY18xIiwiZm9ybUNyZWF0ZSIsImZvcm1FbGVtZW50cyIsImdlbmVyYXRlQnV0dG9uIiwidGV4dENvbnRlbnQiLCJkb3RzIiwiZm9ybVVwZGF0ZSIsImJ1dHRvbkNhbmNlbCIsInRpdGxlIiwiY29udGFpbmVyIiwidmlld19idXR0b25zXzEiLCJmb3Jtc18xIiwiaGVhZGVyQ29udGFpbmVyIiwiaGVhZGVyQnV0dG9ucyIsImNyZWF0ZUhlYWRlckJ1dHRvbnMiLCJoZWFkZXJGb3JtcyIsImJ1YmJsZUVsZW1lbnQiLCJnYXJhZ2VCdXR0b24iLCJ3aW5uZXJzQnV0dG9uIiwidmlld19oZWFkZXJfMSIsInBhZ2luYXRpb25fMSIsIm1haW5Db250YWluZXIiLCJ2aWV3SGVhZGVyIiwiY3JlYXRlVmlld0hlYWRlciIsInZpZXdCb2R5IiwicGFnaW5hdGlvbiIsImNyZWF0ZVBhZ2luYXRpb24iLCJjcmVhdGVDb3VudEVsZW1lbnQiLCJjb3VudENvbnRhaW5lciIsIm9wZW5CciIsImNsb3NlQnIiLCJTdHJpbmciLCJjcmVhdGVHYXJhZ2VCdXR0b25zIiwiYnV0dG9uUmFjZSIsImJ1dHRvblJlc2V0IiwiY291bnRfZWxlbWVudF8xIiwiZ2FyYWdlX2J1dHRvbnNfMSIsInRpdGxlVGV4dCIsImNvdW50RWxlbWVudCIsImJ1dHRvbnMiLCJwYWdlQ29udGFpbmVyIiwicGFnZU51bSIsInNwYW4iLCJ0b3RhbFBhZ2VzIiwiYnV0dG9uc0NvbnRhaW5lciIsImJ1dHRvblByZXYiLCJidXR0b25OZXh0IiwicG9wdXBDb250YWluZXIiLCJjYXIiLCJtZXNzYWdlIiwidGltZSIsImluaXRQYWdpbmF0aW9uIiwiaW5pdExpc3RlbmVycyIsImdldF9lbGVtZW50XzEiLCJyZW5kZXJfZ2FyYWdlXzEiLCJyZW5kZXJfd2lubmVyc18xIiwiaGFuZGxlX2NyZWF0ZV8xIiwic3RhcnRfdXBkYXRlXzEiLCJoYW5kbGVfdXBkYXRlXzEiLCJoYW5kbGVfZ2VuZXJhdGVfMSIsImhhbmRsZV9wYWdpbmF0aW9uXzEiLCJoYW5kbGVfcmFjZV8xIiwid2lubmVyc19wYWdlc18xIiwiYnV0dG9uR2FyYWdlIiwiZ2V0RWxlbWVudCIsImJ1dHRvbldpbm5lcnMiLCJidXR0b25DYW5jZWxFZGl0IiwiYnV0dG9uVXBkYXRlIiwiYnV0dG9uR2VuZXJhdGUiLCJhZGRFdmVudExpc3RlbmVyIiwicmVuZGVyR2FyYWdlVmlldyIsInJlbmRlcldpbm5lcnNWaWV3IiwiaGFuZGxlQ3JlYXRlQ2FyIiwiY2FuY2VsVXBkYXRlIiwiaGFuZGxlVXBkYXRlIiwiaGFuZGxlR2VuZXJhdGUiLCJoYW5kbGVSZXNldCIsImhhbmRsZVJhY2UiLCJ2aWV3IiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImhhbmRsZVdpbm5lcnNQYWdlcyIsImhhbmRsZUdhcmFnZVBhZ2VzIiwidGFnIiwiY2xhc3NOYW1lcyIsInRleHQiLCJlbGVtZW50IiwiSFRNTEVsZW1lbnQiLCJjbGFzc0xpc3QiLCJlbCIsImFkZCIsImNyZWF0ZVNWRyIsImJ1dHRvbiIsIkhUTUxCdXR0b25FbGVtZW50IiwiaW5jbHVkZXMiLCJidXR0b25JRCIsInRvTG93ZXJDYXNlIiwidHlwZSIsImFjdGlvbiIsImlucHV0IiwiSFRNTElucHV0RWxlbWVudCIsImF1dG9jb21wbGV0ZSIsImxpbmsiLCJIVE1MQW5jaG9yRWxlbWVudCIsImhyZWYiLCJwYXJhbXMiLCJkaXYiLCJkaXZDbGFzcyIsInN2ZyIsImNyZWF0ZUVsZW1lbnROUyIsIm5zIiwid2lkdGgiLCJoZWlnaHQiLCJjb2xvciIsIlNWR0VsZW1lbnQiLCJiYWNrZ3JvdW5kQ29sb3IiLCJzZWxlY3RvciIsImdldEZvcm1JbnB1dHMiLCJnZXRFbGVtZW50c0FycmF5IiwiZ2V0Q2xvc2VzdCIsInRhcmdldEVsZW1lbnQiLCJjbG9zZXN0IiwiZWxlbWVudHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9ybSIsImlucHV0VGV4dCIsImlucHV0Q29sb3IiLCJnZXRDdXJyZW50VmlldyIsInNhdmVDdXJyZW50VmlldyIsImdldFRhcmdldElEIiwidG9nZ2xlRGlzYWJsZSIsImdldFJhbmRvbUluZGV4IiwiY2xlYW5Db250ZW50IiwiY2hpbGRyZW4iLCJjaGlsZCIsImFycmF5IiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiYnV0dG9uRWxlbWVudCIsImRpc2FibGVkIiwic3BsaXQiLCJhdCIsImN1cnJlbnRWaWV3IiwiY2xhc3NOYW1lIiwibG9jYWxTdG9yYWdlIiwic2V0SXRlbSIsImdldEl0ZW0iLCJpc0Vub3VnaFNwYWNlIiwiaXNMYXN0UGFnZSIsImlzRmlyc3RQYWdlIiwiZ2V0Q3VycmVudFBhZ2UiLCJpc0xhc3RUcmFjayIsImhlbHBlcnNfMSIsIk51bWJlciIsInVwZGF0ZVRvdGFsQ2FycyIsInNldFRvdGFsQ291bnQiLCJudW1iZXIiLCJuZXdDb3VudCIsInRvZ2dsZVZpZXdCdXR0b24iLCJidWJibGUiLCJidG4iLCJmaW5kIiwidG9nZ2xlVUlFbGVtZW50cyIsInRvZ2dsZVBhZ2VUaXRsZSIsInRvZ2dsZUZvcm1zRGlzcGxheSIsInRvZ2dsZV9idXR0b25zXzEiLCJ0b1VwcGVyQ2FzZSIsImdhcmFnZUJ1dHRvbnMiLCJjcmVhdGVfY2FyXzEiLCJwYWdlX3V0aWxzXzEiLCJzZXRfdG90YWxfMSIsImFwcGVuZF90cmFja3NfMSIsInBhZ2luYXRpb25faGVscGVyc18xIiwicHJldmVudERlZmF1bHQiLCJmb2N1cyIsIm5ld0NhciIsImFwcGVuZFRyYWNrIiwic2V0VG90YWxQYWdlcyIsInRvZ2dsZVBhZ2VCdXR0b25zIiwiY29uc29sZSIsImxvZyIsImNhck1ha2VzIiwibWFrZSIsIm1vZGVscyIsImdlbmVyYXRlQ2FycyIsInJhbmRvbV9jb2xvcl8xIiwicmFuZG9tX21ha2VfMSIsImdldFJhbmRvbU1ha2UiLCJnZXRSYW5kb21Db2xvciIsInVwZGF0ZUdhcmFnZSIsImdldENvbG9yVmFsdWUiLCJjZWlsIiwicGFkU3RhcnQiLCJjYXJfbWFrZXNfMSIsImNhcklkeCIsInN0YXJ0QW5pbWF0aW9uIiwiY29udHJvbERyaXZlIiwicmFjZSIsImFuaW1hdGlvbiIsImRyaXZlX2Nhcl8xIiwiaGFuZGxlX3dpbl8xIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJ3aW5uZXIiLCJpc1JhY2UiLCJyZXNldCIsImdldERyaXZlVGltZSIsImRpc3QiLCJnZXREaXN0YW5jZSIsImZyYW1lQ291bnQiLCJzdGFydFgiLCJvZmZzZXRMZWZ0Iiwic3RlcCIsImFuaW1hdGUiLCJ0cmFuc2Zvcm0iLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJoYW5kbGVXaW5uZXIiLCJoYW5kbGVTdG9wIiwic3RvcENhciIsImhhbmRsZVN0YXJ0Iiwic29tZUNhciIsImhlbHBlcnNfMiIsImFuaW1hdGlvbl8xIiwic2hvd19wb3B1cF8xIiwiaXNNb3ZpbmciLCJjb250YWlucyIsInRvZ2dsZUNvbnRyb2xzIiwiY2xlYW5XaW5uZXIiLCJtb3ZlVG9TdGFydCIsImRpc2FibGVCdXR0b25zIiwiYWxsUmFjZUNhcnMiLCJnZXRDYXJzSWRzIiwiUHJvbWlzZSIsImhpZGVQb3B1cCIsImRpc2FibGVCdXR0b24iLCJnZXRTaWJsaW5nQnV0dG9uIiwic2libGluZyIsInByZXZpb3VzRWxlbWVudFNpYmxpbmciLCJuZXh0RWxlbWVudFNpYmxpbmciLCJzdGF0ZSIsImNhckVsIiwic3RhcnREYXRhIiwiZGlzdGFuY2UiLCJ2ZWxvY2l0eSIsIndpbmRvd1dpZHRoIiwiY2xpZW50V2lkdGgiLCJ0YXJnZXRCdXR0b24iLCJzaWJsaW5nQnV0dG9uIiwiaWRzIiwidHJhY2siLCJnZXRTZWxlY3RlZENhciIsInNhdmVkSXRlbSIsInBhcnNlIiwiaGlkZVVwZGF0ZUZvcm0iLCJzaG93VXBkYXRlRm9ybSIsInNldFVwZGF0ZUlucHV0cyIsImRhdGFzZXQiLCJlZGl0SWQiLCJ0YWdOYW1lIiwiaGFuZGxlX2Zvcm1fMSIsInVwZGF0ZV9jYXJfdWlfMSIsImdldF9zZWxlY3RlZF9jYXJfMSIsInNlbGVjdGVkQ2FyIiwidHJpbSIsInBhdGNoIiwidXBkYXRlQ2FyVUkiLCJzdGFydFVwZGF0ZSIsImdldF9jYXJzXzEiLCJnZXRFbGVtZW50QnlJZCIsImNhck5hbWUiLCJpc05leHRCdXR0b24iLCJpc1ByZXZCdXR0b24iLCJjdXJyZW50UGFnZSIsIm5ld1BhZ2UiLCJzZXRQYWdpbmF0aW9uIiwic2V0Q3VycmVudFBhZ2UiLCJnZXRUb3RhbFBhZ2VzIiwidG90YWxJdGVtcyIsInRvdGFsUGFnZXNFbGVtZW50Iiwic2hvd1BvcHVwIiwid2lubmVyRWxlbWVudCIsInRpbWVFbGVtZW50IiwidG9GaXhlZCIsInRvZ2dsZV9lbGVtZW50c18xIiwibGlzdGVuZXJzXzEiLCJhcHBlbmRUcmFja3MiLCJjcmVhdGVUcmFja0J1dHRvbnMiLCJoYW5kbGVEZWxldGUiLCJjcmVhdGVfd2lubmVyc18xIiwidHJhY2tCdXR0b25zIiwic3RhcnRCdG4iLCJzdG9wQnRuIiwiZWRpdEJ0biIsImRlbGV0ZUJ0biIsImNyZWF0ZV90cmFja18xIiwibmV3VHJhY2siLCJjcmVhdGVUcmFjayIsImNyZWF0ZVRyYWNrQm9keSIsImNyZWF0ZVRyYWNrSGVhZGVyIiwidHJhY2tfYnV0dG9uc18xIiwiQ0FSX1NJWkUiLCJ0cmFja0hlYWRlciIsInRyYWNrQm9keSIsImNhclByb3BzIiwiY2FyRWxlbWVudCIsImZpbmlzaEVsZW1lbnQiLCJ0cmFja0NvbnRhaW5lciIsImdldF93aW5uZXJzXzEiLCJwcm9wcyIsIndpbiIsInNvcnRfcGFyYW1zXzEiLCJjdXJyZW50U29ydCIsImdldEN1cnJlbnRTb3J0IiwiZ2V0U29ydE9yZGVyIiwidXBkYXRlV2lubmVycyIsInJlbmRlcldpbm5lcnNUYWJsZSIsImFwcGVuZFJvd3MiLCJ0YWJsZV9oZWFkZXJfMSIsInRhYmxlX3Jvd18xIiwicm93c0NvbnRhaW5lciIsImlkeCIsInJvdyIsImNyZWF0ZVJvdyIsInRhYmxlIiwidGFibGVIZWFkZXIiLCJjcmVhdGVUYWJsZUhlYWRlciIsInJvd3MiLCJyZW5kZXJfdGFibGVfMSIsInNvcnRQYXJhbXMiLCJzYXZlU29ydE9wdGlvbiIsInNvcnRPcHRpb24iLCJzb3J0T3JkZXIiLCJzb3J0V2lubmVycyIsInNvcnRPcHQiLCJuZXdPcmRlciIsIm51bSIsIm5hbWVDb250YWluZXIiLCJuYW1lU3BhbiIsImJ1dHRvblNvcnRJZHMiLCJ3aW5zQ29udGFpbmVyIiwid2luc1NwYW4iLCJidXR0b25Tb3J0V2lucyIsInRpbWVDb250YWluZXIiLCJ0aW1lU3BhbiIsImJ1dHRvblNvcnRUaW1lIiwiY29sb3JDb250YWluZXIiLCJ3aW5zIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwidW5kZWZpbmVkIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsImdldHRlciIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImVudW1lcmFibGUiLCJnIiwiZ2xvYmFsVGhpcyIsIkZ1bmN0aW9uIiwicHJvcCIsImhhc093blByb3BlcnR5IiwiciIsInRvU3RyaW5nVGFnIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInAiLCJuYyIsImFwcF8xIl0sInNvdXJjZVJvb3QiOiIifQ==