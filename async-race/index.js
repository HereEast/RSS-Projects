(()=>{"use strict";var n={127:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(15),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,"button {\n  border: 0;\n  outline: 0;\n  font-family: var(--font);\n  font-size: var(--button-font-size);\n  color: var(--black);\n  height: 30px;\n  padding: 0 15px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n\n  background-color: var(--white);\n  border-radius: 30px;\n  text-transform: uppercase;\n\n  position: relative;\n  z-index: 100;\n  user-select: none;\n  cursor: pointer;\n\n  transition: all 0.2s ease-in;\n}\n\nbutton:not(.button__view):hover {\n  opacity: 1;\n  background-color: var(--button-hover-white);\n}\n\n.button__view {\n  width: 120px;\n  height: 60px;\n  background-color: transparent;\n  color: var(--white);\n  font-size: 18px;\n  text-transform: capitalize;\n\n  transition: color 0.2s ease-in;\n}\n\n.button__view.active {\n  color: var(--black);\n  cursor: default;\n}\n\nform button {\n  padding: 0 15px;\n  text-transform: uppercase;\n  font-size: 12px;\n}\n\n.button__cancel,\n.button__reset {\n  background-color: transparent;\n  border: 1px solid var(--white);\n  color: var(--white);\n}\n\n.button__cancel:hover,\n.button__reset:hover {\n  background-color: var(--white);\n  color: var(--black);\n}\n\n.button__race {\n  background-color: var(--green);\n}\n\nbutton.button__race:hover {\n  background-color: var(--button-hover-primary);\n}\n\n/* Track */\n.button__track {\n  font-size: 14px;\n  text-transform: capitalize;\n  background-color: transparent;\n  color: var(--track-button-color);\n\n  padding: 0 5px;\n  height: 20px;\n}\n\nbutton.button__track:hover {\n  color: var(--white);\n  background-color: var(--black-light);\n}\n\n/**/\n\n@media all and (max-width: 720px) {\n  .button__view {\n    width: 50%;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/components/buttons.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,wBAAwB;EACxB,kCAAkC;EAClC,mBAAmB;EACnB,YAAY;EACZ,eAAe;;EAEf,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,cAAc;;EAEd,8BAA8B;EAC9B,mBAAmB;EACnB,yBAAyB;;EAEzB,kBAAkB;EAClB,YAAY;EACZ,iBAAiB;EACjB,eAAe;;EAEf,4BAA4B;AAC9B;;AAEA;EACE,UAAU;EACV,2CAA2C;AAC7C;;AAEA;EACE,YAAY;EACZ,YAAY;EACZ,6BAA6B;EAC7B,mBAAmB;EACnB,eAAe;EACf,0BAA0B;;EAE1B,8BAA8B;AAChC;;AAEA;EACE,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,eAAe;EACf,yBAAyB;EACzB,eAAe;AACjB;;AAEA;;EAEE,6BAA6B;EAC7B,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;;EAEE,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,6CAA6C;AAC/C;;AAEA,UAAU;AACV;EACE,eAAe;EACf,0BAA0B;EAC1B,6BAA6B;EAC7B,gCAAgC;;EAEhC,cAAc;EACd,YAAY;AACd;;AAEA;EACE,mBAAmB;EACnB,oCAAoC;AACtC;;AAEA,GAAG;;AAEH;EACE;IACE,UAAU;EACZ;AACF",sourcesContent:["button {\n  border: 0;\n  outline: 0;\n  font-family: var(--font);\n  font-size: var(--button-font-size);\n  color: var(--black);\n  height: 30px;\n  padding: 0 15px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n\n  background-color: var(--white);\n  border-radius: 30px;\n  text-transform: uppercase;\n\n  position: relative;\n  z-index: 100;\n  user-select: none;\n  cursor: pointer;\n\n  transition: all 0.2s ease-in;\n}\n\nbutton:not(.button__view):hover {\n  opacity: 1;\n  background-color: var(--button-hover-white);\n}\n\n.button__view {\n  width: 120px;\n  height: 60px;\n  background-color: transparent;\n  color: var(--white);\n  font-size: 18px;\n  text-transform: capitalize;\n\n  transition: color 0.2s ease-in;\n}\n\n.button__view.active {\n  color: var(--black);\n  cursor: default;\n}\n\nform button {\n  padding: 0 15px;\n  text-transform: uppercase;\n  font-size: 12px;\n}\n\n.button__cancel,\n.button__reset {\n  background-color: transparent;\n  border: 1px solid var(--white);\n  color: var(--white);\n}\n\n.button__cancel:hover,\n.button__reset:hover {\n  background-color: var(--white);\n  color: var(--black);\n}\n\n.button__race {\n  background-color: var(--green);\n}\n\nbutton.button__race:hover {\n  background-color: var(--button-hover-primary);\n}\n\n/* Track */\n.button__track {\n  font-size: 14px;\n  text-transform: capitalize;\n  background-color: transparent;\n  color: var(--track-button-color);\n\n  padding: 0 5px;\n  height: 20px;\n}\n\nbutton.button__track:hover {\n  color: var(--white);\n  background-color: var(--black-light);\n}\n\n/**/\n\n@media all and (max-width: 720px) {\n  .button__view {\n    width: 50%;\n  }\n}\n"],sourceRoot:""}]);const A=i},76:(n,e,t)=>{t.d(e,{Z:()=>u});var o=t(15),r=t.n(o),a=t(645),i=t.n(a),A=t(667),c=t.n(A),s=t(140),l=i()(r()),d=c()(s);l.push([n.id,".forms__container {\n  max-width: 530px;\n  width: 100%;\n  position: relative;\n  display: flex;\n}\n\n.forms__container.forms--hidden {\n  visibility: hidden;\n  opacity: 0;\n}\n\n.forms__container form {\n  width: 100%;\n  background-color: var(--black-light);\n  border-radius: 30px;\n}\n\nform {\n  display: flex;\n  justify-content: space-between;\n}\n\nform .input__container {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  gap: 5px;\n}\n\n.form__create {\n  padding: 15px;\n}\n\n.form__create span {\n  width: 3px;\n  height: 30px;\n  background-image: url("+d+");\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  opacity: 0.2;\n\n  margin: 0 15px;\n  display: flex;\n  flex-shrink: 0;\n}\n\n.form__update {\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  position: absolute;\n  left: 0;\n  top: 0;\n  z-index: 100;\n\n  transform: translateY(-200%);\n}\n\n.form__update h2 {\n  font-size: 24px;\n  font-weight: 400;\n  margin-bottom: 10px;\n}\n\n/**/\n\n@media all and (max-width: 720px) {\n  .forms__container {\n    max-width: 720px;\n    width: 100%;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/components/forms.css"],names:[],mappings:"AAAA;EACE,gBAAgB;EAChB,WAAW;EACX,kBAAkB;EAClB,aAAa;AACf;;AAEA;EACE,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,WAAW;EACX,oCAAoC;EACpC,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,WAAW;EACX,aAAa;EACb,8BAA8B;EAC9B,QAAQ;AACV;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,UAAU;EACV,YAAY;EACZ,yDAAsD;EACtD,wBAAwB;EACxB,2BAA2B;EAC3B,4BAA4B;EAC5B,YAAY;;EAEZ,cAAc;EACd,aAAa;EACb,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,aAAa;EACb,sBAAsB;EACtB,2BAA2B;EAC3B,kBAAkB;EAClB,OAAO;EACP,MAAM;EACN,YAAY;;EAEZ,4BAA4B;AAC9B;;AAEA;EACE,eAAe;EACf,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA,GAAG;;AAEH;EACE;IACE,gBAAgB;IAChB,WAAW;EACb;AACF",sourcesContent:['.forms__container {\n  max-width: 530px;\n  width: 100%;\n  position: relative;\n  display: flex;\n}\n\n.forms__container.forms--hidden {\n  visibility: hidden;\n  opacity: 0;\n}\n\n.forms__container form {\n  width: 100%;\n  background-color: var(--black-light);\n  border-radius: 30px;\n}\n\nform {\n  display: flex;\n  justify-content: space-between;\n}\n\nform .input__container {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  gap: 5px;\n}\n\n.form__create {\n  padding: 15px;\n}\n\n.form__create span {\n  width: 3px;\n  height: 30px;\n  background-image: url("../../assets/dots-dividor.svg");\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  opacity: 0.2;\n\n  margin: 0 15px;\n  display: flex;\n  flex-shrink: 0;\n}\n\n.form__update {\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  position: absolute;\n  left: 0;\n  top: 0;\n  z-index: 100;\n\n  transform: translateY(-200%);\n}\n\n.form__update h2 {\n  font-size: 24px;\n  font-weight: 400;\n  margin-bottom: 10px;\n}\n\n/**/\n\n@media all and (max-width: 720px) {\n  .forms__container {\n    max-width: 720px;\n    width: 100%;\n  }\n}\n'],sourceRoot:""}]);const u=l},684:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(15),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,"input {\n  outline: none;\n  border: none;\n  height: 30px;\n\n  transition: all 0.1s ease-in;\n}\n\n.input-text {\n  max-width: 500px;\n  width: 100%;\n  padding: 0 15px;\n\n  border-radius: 30px;\n  border: 1px solid var(--input-border);\n  background-color: transparent;\n}\n\n.input-text:focus {\n  color: var(--white);\n  border: 1px solid var(--white);\n}\n\n.input-color {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  background-color: transparent;\n  width: 34px;\n  height: 30px;\n  border: none;\n  cursor: pointer;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n\n  margin-top: -4px;\n}\n\n.input-color::-webkit-color-swatch {\n  display: block;\n  width: 30px;\n  height: 28px;\n  border-radius: 30px;\n  border: 1px solid var(--white);\n}\n\n.input-color::-moz-color-swatch {\n  border-radius: 30px;\n  border: 1px solid var(--white);\n}\n\n","",{version:3,sources:["webpack://./src/styles/components/input.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,YAAY;EACZ,YAAY;;EAEZ,4BAA4B;AAC9B;;AAEA;EACE,gBAAgB;EAChB,WAAW;EACX,eAAe;;EAEf,mBAAmB;EACnB,qCAAqC;EACrC,6BAA6B;AAC/B;;AAEA;EACE,mBAAmB;EACnB,8BAA8B;AAChC;;AAEA;EACE,wBAAwB;EACxB,qBAAqB;EACrB,gBAAgB;EAChB,6BAA6B;EAC7B,WAAW;EACX,YAAY;EACZ,YAAY;EACZ,eAAe;;EAEf,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,cAAc;;EAEd,gBAAgB;AAClB;;AAEA;EACE,cAAc;EACd,WAAW;EACX,YAAY;EACZ,mBAAmB;EACnB,8BAA8B;AAChC;;AAEA;EACE,mBAAmB;EACnB,8BAA8B;AAChC",sourcesContent:["input {\n  outline: none;\n  border: none;\n  height: 30px;\n\n  transition: all 0.1s ease-in;\n}\n\n.input-text {\n  max-width: 500px;\n  width: 100%;\n  padding: 0 15px;\n\n  border-radius: 30px;\n  border: 1px solid var(--input-border);\n  background-color: transparent;\n}\n\n.input-text:focus {\n  color: var(--white);\n  border: 1px solid var(--white);\n}\n\n.input-color {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  background-color: transparent;\n  width: 34px;\n  height: 30px;\n  border: none;\n  cursor: pointer;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n\n  margin-top: -4px;\n}\n\n.input-color::-webkit-color-swatch {\n  display: block;\n  width: 30px;\n  height: 28px;\n  border-radius: 30px;\n  border: 1px solid var(--white);\n}\n\n.input-color::-moz-color-swatch {\n  border-radius: 30px;\n  border: 1px solid var(--white);\n}\n\n"],sourceRoot:""}]);const A=i},939:(n,e,t)=>{t.d(e,{Z:()=>E});var o=t(15),r=t.n(o),a=t(645),i=t.n(a),A=t(667),c=t.n(A),s=t(191),l=t(233),d=i()(r()),u=c()(s),p=c()(l);d.push([n.id,'.track {\n  position: relative;\n  border-top: 1px solid var(--white);\n}\n\n.track:last-child {\n  border-bottom: 1px solid var(--white);\n}\n\n.track__container {\n  padding: 10px 0;\n  position: relative;\n}\n\n.track__header {\n  display: flex;\n  gap: 7px;\n  align-items: center;\n\n  position: absolute;\n  margin-top: -4px;\n}\n\n.track__buttons {\n  display: flex;\n  gap: 4px;\n}\n\n.car__name {\n  position: relative;\n  padding-left: 16px;\n}\n\n.car__name::before {\n  content: "";\n  position: absolute;\n  width: 8px;\n  height: 8px;\n  background-image: url('+u+");\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n  left: 0;\n  top: 5px;\n}\n\n/* BODY */\n\n.track__body {\n  width: 100%;\n  position: relative;\n  height: 65px;\n  display: flex;\n  align-items: flex-end;\n}\n\n.car {\n  width: 40px;\n  height: 40px;\n  position: absolute;\n}\n\n.car svg {\n  border-radius: 50%;\n}\n\n.flag {\n  width: 30px;\n  height: 65px;\n  background-image: url("+p+");\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n\n  position: absolute;\n  right: 40px;\n  bottom: 0;\n}","",{version:3,sources:["webpack://./src/styles/components/track.css"],names:[],mappings:"AAAA;EACE,kBAAkB;EAClB,kCAAkC;AACpC;;AAEA;EACE,qCAAqC;AACvC;;AAEA;EACE,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,QAAQ;EACR,mBAAmB;;EAEnB,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,QAAQ;AACV;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,UAAU;EACV,WAAW;EACX,yDAAqD;EACrD,2BAA2B;EAC3B,wBAAwB;EACxB,4BAA4B;EAC5B,OAAO;EACP,QAAQ;AACV;;AAEA,SAAS;;AAET;EACE,WAAW;EACX,kBAAkB;EAClB,YAAY;EACZ,aAAa;EACb,qBAAqB;AACvB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,yDAAgD;EAChD,wBAAwB;EACxB,2BAA2B;EAC3B,4BAA4B;;EAE5B,kBAAkB;EAClB,WAAW;EACX,SAAS;AACX",sourcesContent:['.track {\n  position: relative;\n  border-top: 1px solid var(--white);\n}\n\n.track:last-child {\n  border-bottom: 1px solid var(--white);\n}\n\n.track__container {\n  padding: 10px 0;\n  position: relative;\n}\n\n.track__header {\n  display: flex;\n  gap: 7px;\n  align-items: center;\n\n  position: absolute;\n  margin-top: -4px;\n}\n\n.track__buttons {\n  display: flex;\n  gap: 4px;\n}\n\n.car__name {\n  position: relative;\n  padding-left: 16px;\n}\n\n.car__name::before {\n  content: "";\n  position: absolute;\n  width: 8px;\n  height: 8px;\n  background-image: url("../../assets/arrow-right.svg");\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n  left: 0;\n  top: 5px;\n}\n\n/* BODY */\n\n.track__body {\n  width: 100%;\n  position: relative;\n  height: 65px;\n  display: flex;\n  align-items: flex-end;\n}\n\n.car {\n  width: 40px;\n  height: 40px;\n  position: absolute;\n}\n\n.car svg {\n  border-radius: 50%;\n}\n\n.flag {\n  width: 30px;\n  height: 65px;\n  background-image: url("../../assets/finish.svg");\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n\n  position: absolute;\n  right: 40px;\n  bottom: 0;\n}'],sourceRoot:""}]);const E=d},348:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(15),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,".footer {\n  width: 100%;\n  padding: var(--page-padding);\n}\n\n.footer__container {\n  width: 100%;\n  height: 30px;\n  padding: 0 15px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  background-color: var(--black-light);\n  border-radius: 30px;\n}\n\n.footer__container .footer__info {\n  display: flex;\n  gap: 5px;\n}\n","",{version:3,sources:["webpack://./src/styles/footer.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,4BAA4B;AAC9B;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,eAAe;EACf,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;;EAEnB,oCAAoC;EACpC,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,QAAQ;AACV",sourcesContent:[".footer {\n  width: 100%;\n  padding: var(--page-padding);\n}\n\n.footer__container {\n  width: 100%;\n  height: 30px;\n  padding: 0 15px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  background-color: var(--black-light);\n  border-radius: 30px;\n}\n\n.footer__container .footer__info {\n  display: flex;\n  gap: 5px;\n}\n"],sourceRoot:""}]);const A=i},497:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(15),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,".header {\n  width: 100%;\n}\n\n.header__container {\n  width: 100%;\n  padding: var(--page-padding);\n  display: flex;\n  justify-content: space-between;\n  gap: 10px;\n}\n\n.header__buttons {\n  display: flex;\n  position: relative;\n  border-radius: 60px;\n\n  cursor: pointer;\n  transition: all 0.2s ease-in;\n}\n\n.header__buttons:hover {\n  background-color: var(--black-light);\n}\n\n.bubble {\n  display: block;\n  width: 50%;\n  height: 60px;\n  border-radius: 60px;\n  background-color: var(--white);\n\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  transition: all 0.2s ease-in-out;\n}\n\n.bubble.winners {\n  left: 50%;\n}\n\n/**/\n\n@media all and (max-width: 720px) {\n  .header__container {\n    flex-direction: column;\n    gap: 20px;\n  }\n\n  .header__buttons {\n    width: 100%;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/header.css"],names:[],mappings:"AAAA;EACE,WAAW;AACb;;AAEA;EACE,WAAW;EACX,4BAA4B;EAC5B,aAAa;EACb,8BAA8B;EAC9B,SAAS;AACX;;AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,mBAAmB;;EAEnB,eAAe;EACf,4BAA4B;AAC9B;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,cAAc;EACd,UAAU;EACV,YAAY;EACZ,mBAAmB;EACnB,8BAA8B;;EAE9B,kBAAkB;EAClB,MAAM;EACN,OAAO;;EAEP,gCAAgC;AAClC;;AAEA;EACE,SAAS;AACX;;AAEA,GAAG;;AAEH;EACE;IACE,sBAAsB;IACtB,SAAS;EACX;;EAEA;IACE,WAAW;EACb;AACF",sourcesContent:[".header {\n  width: 100%;\n}\n\n.header__container {\n  width: 100%;\n  padding: var(--page-padding);\n  display: flex;\n  justify-content: space-between;\n  gap: 10px;\n}\n\n.header__buttons {\n  display: flex;\n  position: relative;\n  border-radius: 60px;\n\n  cursor: pointer;\n  transition: all 0.2s ease-in;\n}\n\n.header__buttons:hover {\n  background-color: var(--black-light);\n}\n\n.bubble {\n  display: block;\n  width: 50%;\n  height: 60px;\n  border-radius: 60px;\n  background-color: var(--white);\n\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  transition: all 0.2s ease-in-out;\n}\n\n.bubble.winners {\n  left: 50%;\n}\n\n/**/\n\n@media all and (max-width: 720px) {\n  .header__container {\n    flex-direction: column;\n    gap: 20px;\n  }\n\n  .header__buttons {\n    width: 100%;\n  }\n}\n"],sourceRoot:""}]);const A=i},771:(n,e,t)=>{t.d(e,{Z:()=>C});var o=t(15),r=t.n(o),a=t(645),i=t.n(a),A=t(772),c=t(179),s=t(127),l=t(76),d=t(684),u=t(939),p=t(497),E=t(756),f=t(348),h=i()(r());h.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=JetBrains+Mono:wght@300;400;500;600;700&display=swap);"]),h.i(A.Z),h.i(c.Z),h.i(s.Z),h.i(l.Z),h.i(d.Z),h.i(u.Z),h.i(p.Z),h.i(E.Z),h.i(f.Z),h.push([n.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]);const C=h},756:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(15),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,".main,\n.main__container {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-self: flex-start;\n  flex-grow: 1;\n}\n\n.main__container {\n  padding: 40px var(--page-padding);\n}\n\n/* HEADER */\n\n.view__header {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  margin-bottom: 30px;\n}\n\n.view__title {\n  display: flex;\n  gap: 5px;\n}\n\n.view__title h2,\n.view__title span {\n  font-size: 40px;\n  font-weight: 400;\n}\n\n.view__buttons {\n  display: flex;\n  gap: 5px;\n  margin-top: 5px;\n}\n\n.view__buttons.hidden {\n  visibility: hidden;\n  opacity: 0;\n}","",{version:3,sources:["webpack://./src/styles/main.css"],names:[],mappings:"AAAA;;EAEE,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,sBAAsB;EACtB,YAAY;AACd;;AAEA;EACE,iCAAiC;AACnC;;AAEA,WAAW;;AAEX;EACE,aAAa;EACb,mBAAmB;EACnB,SAAS;EACT,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,QAAQ;AACV;;AAEA;;EAEE,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,QAAQ;EACR,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,UAAU;AACZ",sourcesContent:[".main,\n.main__container {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-self: flex-start;\n  flex-grow: 1;\n}\n\n.main__container {\n  padding: 40px var(--page-padding);\n}\n\n/* HEADER */\n\n.view__header {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  margin-bottom: 30px;\n}\n\n.view__title {\n  display: flex;\n  gap: 5px;\n}\n\n.view__title h2,\n.view__title span {\n  font-size: 40px;\n  font-weight: 400;\n}\n\n.view__buttons {\n  display: flex;\n  gap: 5px;\n  margin-top: 5px;\n}\n\n.view__buttons.hidden {\n  visibility: hidden;\n  opacity: 0;\n}"],sourceRoot:""}]);const A=i},772:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(15),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,'* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  font-size: 14px;\n  color: var(--white);\n}\n\nbody {\n  width: 100%;\n  min-height: 100vh;\n  height: 100%;\n  background: var(--black);\n  font-family: "Inter", "Arial", sans-serif;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  overflow-x: hidden;\n}\n\n.content-width {\n  width: 100%;\n}\n\na {\n  text-decoration: none;\n  color: var(--white);\n  opacity: 0.6;\n\n  transition: all 0.2s ease-in;\n}\n\na:hover {\n  opacity: 1;\n}\n\n/**/\n\n@media all and (max-width: 980px) {\n}\n\n\n',"",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAAA;EACE,UAAU;EACV,SAAS;EACT,sBAAsB;EACtB,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,iBAAiB;EACjB,YAAY;EACZ,wBAAwB;EACxB,yCAAyC;;EAEzC,aAAa;EACb,sBAAsB;EACtB,8BAA8B;EAC9B,mBAAmB;;EAEnB,kBAAkB;AACpB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,qBAAqB;EACrB,mBAAmB;EACnB,YAAY;;EAEZ,4BAA4B;AAC9B;;AAEA;EACE,UAAU;AACZ;;AAEA,GAAG;;AAEH;AACA",sourcesContent:['* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  font-size: 14px;\n  color: var(--white);\n}\n\nbody {\n  width: 100%;\n  min-height: 100vh;\n  height: 100%;\n  background: var(--black);\n  font-family: "Inter", "Arial", sans-serif;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  overflow-x: hidden;\n}\n\n.content-width {\n  width: 100%;\n}\n\na {\n  text-decoration: none;\n  color: var(--white);\n  opacity: 0.6;\n\n  transition: all 0.2s ease-in;\n}\n\na:hover {\n  opacity: 1;\n}\n\n/**/\n\n@media all and (max-width: 980px) {\n}\n\n\n'],sourceRoot:""}]);const A=i},179:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(15),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,':root {\n  --black: #1C1C1C;\n  --white: whitesmoke;\n  \n  --red: #ff4500;\n  --green: #6BD856;\n  --yellow: #ffd208;\n  --border: #5d5d5d;\n\n  --page-padding: 20px;\n  --font: "Inter", "Arial", sans-serif;\n\n  /* BUTTONS */\n  --button-font-size: 12px;\n  --black-light: #303030;\n  --button-hover-white: #dbdbdb;\n  --button-hover-primary: #4aaa37;\n  --track-button-color: #858585;\n\n  /*INPUTS*/\n  --input-border: #919191;\n}',"",{version:3,sources:["webpack://./src/styles/variables.css"],names:[],mappings:"AAAA;EACE,gBAAgB;EAChB,mBAAmB;;EAEnB,cAAc;EACd,gBAAgB;EAChB,iBAAiB;EACjB,iBAAiB;;EAEjB,oBAAoB;EACpB,oCAAoC;;EAEpC,YAAY;EACZ,wBAAwB;EACxB,sBAAsB;EACtB,6BAA6B;EAC7B,+BAA+B;EAC/B,6BAA6B;;EAE7B,SAAS;EACT,uBAAuB;AACzB",sourcesContent:[':root {\n  --black: #1C1C1C;\n  --white: whitesmoke;\n  \n  --red: #ff4500;\n  --green: #6BD856;\n  --yellow: #ffd208;\n  --border: #5d5d5d;\n\n  --page-padding: 20px;\n  --font: "Inter", "Arial", sans-serif;\n\n  /* BUTTONS */\n  --button-font-size: 12px;\n  --black-light: #303030;\n  --button-hover-white: #dbdbdb;\n  --button-hover-primary: #4aaa37;\n  --track-button-color: #858585;\n\n  /*INPUTS*/\n  --input-border: #919191;\n}'],sourceRoot:""}]);const A=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t=n(e);return e[2]?"@media ".concat(e[2]," {").concat(t,"}"):t})).join("")},e.i=function(n,t,o){"string"==typeof n&&(n=[[null,n,""]]);var r={};if(o)for(var a=0;a<this.length;a++){var i=this[a][0];null!=i&&(r[i]=!0)}for(var A=0;A<n.length;A++){var c=[].concat(n[A]);o&&r[c[0]]||(t&&(c[2]?c[2]="".concat(t," and ").concat(c[2]):c[2]=t),e.push(c))}},e}},15:n=>{function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,o=new Array(e);t<e;t++)o[t]=n[t];return o}n.exports=function(n){var t,o,r=(o=4,function(n){if(Array.isArray(n))return n}(t=n)||function(n,e){var t=n&&("undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"]);if(null!=t){var o,r,a=[],i=!0,A=!1;try{for(t=t.call(n);!(i=(o=t.next()).done)&&(a.push(o.value),!e||a.length!==e);i=!0);}catch(n){A=!0,r=n}finally{try{i||null==t.return||t.return()}finally{if(A)throw r}}return a}}(t,o)||function(n,t){if(n){if("string"==typeof n)return e(n,t);var o=Object.prototype.toString.call(n).slice(8,-1);return"Object"===o&&n.constructor&&(o=n.constructor.name),"Map"===o||"Set"===o?Array.from(n):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?e(n,t):void 0}}(t,o)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=r[1],i=r[3];if(!i)return a;if("function"==typeof btoa){var A=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(A),s="/*# ".concat(c," */"),l=i.sources.map((function(n){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(n," */")}));return[a].concat(l).concat([s]).join("\n")}return[a].join("\n")}},667:n=>{n.exports=function(n,e){return e||(e={}),"string"!=typeof(n=n&&n.__esModule?n.default:n)?n:(/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n)}},643:(n,e,t)=>{t.r(e),t.d(e,{default:()=>i});var o=t(379),r=t.n(o),a=t(771);r()(a.Z,{insert:"head",singleton:!1});const i=a.Z.locals||{}},379:(n,e,t)=>{var o,r=function(){var n={};return function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}n[e]=t}return n[e]}}(),a=[];function i(n){for(var e=-1,t=0;t<a.length;t++)if(a[t].identifier===n){e=t;break}return e}function A(n,e){for(var t={},o=[],r=0;r<n.length;r++){var A=n[r],c=e.base?A[0]+e.base:A[0],s=t[c]||0,l="".concat(c," ").concat(s);t[c]=s+1;var d=i(l),u={css:A[1],media:A[2],sourceMap:A[3]};-1!==d?(a[d].references++,a[d].updater(u)):a.push({identifier:l,updater:f(u,e),references:1}),o.push(l)}return o}function c(n){var e=document.createElement("style"),o=n.attributes||{};if(void 0===o.nonce){var a=t.nc;a&&(o.nonce=a)}if(Object.keys(o).forEach((function(n){e.setAttribute(n,o[n])})),"function"==typeof n.insert)n.insert(e);else{var i=r(n.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(e)}return e}var s,l=(s=[],function(n,e){return s[n]=e,s.filter(Boolean).join("\n")});function d(n,e,t,o){var r=t?"":o.media?"@media ".concat(o.media," {").concat(o.css,"}"):o.css;if(n.styleSheet)n.styleSheet.cssText=l(e,r);else{var a=document.createTextNode(r),i=n.childNodes;i[e]&&n.removeChild(i[e]),i.length?n.insertBefore(a,i[e]):n.appendChild(a)}}function u(n,e,t){var o=t.css,r=t.media,a=t.sourceMap;if(r?n.setAttribute("media",r):n.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleSheet)n.styleSheet.cssText=o;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(o))}}var p=null,E=0;function f(n,e){var t,o,r;if(e.singleton){var a=E++;t=p||(p=c(e)),o=d.bind(null,t,a,!1),r=d.bind(null,t,a,!0)}else t=c(e),o=u.bind(null,t,e),r=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)};return o(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;o(n=e)}else r()}}n.exports=function(n,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===o&&(o=Boolean(window&&document&&document.all&&!window.atob)),o));var t=A(n=n||[],e);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var o=0;o<t.length;o++){var r=i(t[o]);a[r].references--}for(var c=A(n,e),s=0;s<t.length;s++){var l=i(t[s]);0===a[l].references&&(a[l].updater(),a.splice(l,1))}t=c}}}},840:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.WINNERS_LIMIT=e.GARAGE_LIMIT=e.ENGINE_URL=e.WINNERS_URL=e.GARAGE_URL=e.URL=void 0,e.URL="http://127.0.0.1:3000",e.GARAGE_URL=`${e.URL}/garage`,e.WINNERS_URL=`${e.URL}/winners`,e.ENGINE_URL=`${e.URL}/engine`,e.GARAGE_LIMIT=7,e.WINNERS_LIMIT=10},737:function(n,e,t){var o=this&&this.__awaiter||function(n,e,t,o){return new(t||(t=Promise))((function(r,a){function i(n){try{c(o.next(n))}catch(n){a(n)}}function A(n){try{c(o.throw(n))}catch(n){a(n)}}function c(n){var e;n.done?r(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(i,A)}c((o=o.apply(n,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0}),e.createCarAPI=void 0;const r=t(840);e.createCarAPI=function(n){return o(this,void 0,void 0,(function*(){const e=yield fetch(`${r.GARAGE_URL}`,{method:"POST",body:JSON.stringify(n),headers:{"Content-Type":"application/json"}});return yield e.json()}))}},893:function(n,e,t){var o=this&&this.__awaiter||function(n,e,t,o){return new(t||(t=Promise))((function(r,a){function i(n){try{c(o.next(n))}catch(n){a(n)}}function A(n){try{c(o.throw(n))}catch(n){a(n)}}function c(n){var e;n.done?r(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(i,A)}c((o=o.apply(n,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0}),e.deleteCarAPI=void 0;const r=t(840);e.deleteCarAPI=function(n){return o(this,void 0,void 0,(function*(){yield fetch(`${r.GARAGE_URL}/${n}`,{method:"DELETE"}).then((n=>n.json()))}))}},815:function(n,e,t){var o=this&&this.__awaiter||function(n,e,t,o){return new(t||(t=Promise))((function(r,a){function i(n){try{c(o.next(n))}catch(n){a(n)}}function A(n){try{c(o.throw(n))}catch(n){a(n)}}function c(n){var e;n.done?r(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(i,A)}c((o=o.apply(n,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0}),e.getCarsAPI=void 0;const r=t(840);e.getCarsAPI=function(n=1){return o(this,void 0,void 0,(function*(){const e=yield fetch(`${r.GARAGE_URL}?_page=${n}&_limit=${r.GARAGE_LIMIT}`),t=yield e.json(),o=e.headers.get("X-Total-Count");if(!o)throw Error("Couldn't get data from X-Total-Count header.");return{items:t,count:o}}))}},769:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.renderApp=void 0;const o=t(8),r=t(447),a=t(311),i=t(751);e.renderApp=function(){const n=(0,o.createHeader)(),e=(0,a.createMain)(),t=(0,r.createFooter)();document.body.append(n,e,t),(0,i.renderGarageView)()}},447:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createFooter=void 0;const o=t(479);e.createFooter=function(){const n=(0,o.createElement)("footer",[".footer"]),e=(0,o.createElement)("footer",[".footer__container"]),t=(0,o.createElement)("div",[".footer__info"]),r=(0,o.createElement)("div",[".footer__info"]),a=(0,o.createElement)("span",[],"Async Race,"),i=(0,o.createLink)("RS School (2023)","https://rs.school/"),A=(0,o.createLink)("Here East","https://github.com/HereEast");return t.append(a,i),r.append(A),e.append(t,r),n.append(e),n}},877:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createInputForm=void 0;const o=t(479);e.createInputForm=function(n,e){const t=(0,o.createElement)("div",[".input__container"]),r=(0,o.createElement)("input",[".input-text"]);r instanceof HTMLInputElement&&(r.type="text",r.placeholder=e||"");const a=(0,o.createElement)("input",[".input-color"]);a instanceof HTMLInputElement&&(a.type="color",a.value="#f6b73c");const i=(0,o.createElement)("button",[".button__create"]);return i.textContent=n,t.append(r,a,i),t}},657:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createHeaderButtons=void 0;const o=t(479);e.createHeaderButtons=function(){const n=(0,o.createElement)("div",[".header__buttons"]),e=(0,o.createElement)("span",[".bubble"]),t=(0,o.createElement)("button",[".button__view"],"Garage"),r=(0,o.createElement)("button",[".button__view"],"Winners");return t.id="#button--garage".slice(1),r.id="#button--winners".slice(1),n.append(e,t,r),n}},151:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createHeaderForms=void 0;const o=t(479),r=t(877),a="Car name...";e.createHeaderForms=function(){const n=(0,o.createElement)("div",[".forms__container"]),e=(0,o.createElement)("form",[".form__create"]),t=(0,r.createInputForm)("Create",a),i=(0,o.createElement)("button",[".button__generate"],"Generate Cars"),A=(0,o.createElement)("span",[]),c=(0,o.createElement)("form",[".form__update"]),s=(0,r.createInputForm)("Update",a),l=(0,o.createElement)("button",[".button__cancel"],"Cancel"),d=(0,o.createElement)("h2",[],"Edit car ⚙️");return s.append(l),e.append(t,A,i),c.append(d,s),n.append(e,c),n}},8:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createHeader=void 0;const o=t(479),r=t(657),a=t(151);e.createHeader=function(){const n=(0,o.createElement)("header",[".header"]),e=(0,o.createElement)("div",[".header__container"]),t=(0,r.createHeaderButtons)(),i=(0,a.createHeaderForms)();return e.append(t,i),n.append(e),n}},311:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createMain=void 0;const o=t(479),r=t(873);e.createMain=function(){const n=(0,o.createElement)("main",[".main"]),e=(0,o.createElement)("div",[".main__container"]),t=(0,r.createViewHeader)(),a=(0,o.createElement)("div",[".view__body"]);return e.append(t,a),n.append(e),n}},926:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createGarageHeaderButtons=void 0;const o=t(479);e.createGarageHeaderButtons=function(){const n=(0,o.createElement)("div",[".view__buttons"]),e=(0,o.createElement)("button",[".button__race"],"Race"),t=(0,o.createElement)("button",[".button__reset"],"Reset");return n.append(e,t),n}},924:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createCountElement=void 0;const o=t(479);e.createCountElement=function(n=119){const e=(0,o.createElement)("div",[".view__count"]),t=(0,o.createElement)("span",[],"("),r=(0,o.createElement)("span",[],")"),a=(0,o.createElement)("span",[".count"],String(n));return e.append(t,a,r),e}},873:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createViewHeader=void 0;const o=t(479),r=t(924),a=t(926);e.createViewHeader=function(){const n=(0,o.createElement)("div",[".view__header"]),e=(0,o.createElement)("div",[".view__title"]),t=(0,o.createElement)("h2",[".title"],"Garage"),i=(0,r.createCountElement)(),A=(0,a.createGarageHeaderButtons)();return e.append(t,i),n.append(e,A),n}},652:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.initListeners=void 0;const o=t(834),r=t(751),a=t(802),i=t(234);e.initListeners=function(){const n=(0,o.getElement)("#button--garage"),e=(0,o.getElement)("#button--winners"),t=(0,o.getElement)(".button__create");n.addEventListener("click",r.renderGarageView),e.addEventListener("click",a.renderWinnersView),t.addEventListener("click",i.handleCreateCar)}},479:(n,e)=>{function t(n,e,t){const o=document.createElement(n);if(null==e?void 0:e.length){const n=e.map((n=>n.slice(1)));o.classList.add(...n)}return t&&(o.textContent=t),o}Object.defineProperty(e,"__esModule",{value:!0}),e.createSVG=e.createLink=e.createElement=void 0,e.createElement=t,e.createLink=function(n,e,o){const r=t("a",o,n);if(!(r instanceof HTMLAnchorElement))throw Error("Failed to create a <a> element...");return r.href=e,r},e.createSVG=function(n){const e=t("div",[n.divClass]),o=document.createElementNS(n.ns,"svg");return o.setAttribute("width",n.width),o.setAttribute("height",n.height),n.color&&o instanceof SVGElement&&(o.style.backgroundColor=n.color),e.append(o),e}},834:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getElementsArray=e.getElement=e.getClosest=e.getTarget=void 0,e.getTarget=function(n){const e=n.target;if(!e)throw Error("Target element is not found...");if(!(e instanceof HTMLElement))throw Error("Target is not an HTMLElement...");return e},e.getClosest=function(n,e){const t=n.closest(e);if(!(t&&t instanceof HTMLElement))throw Error(`${e} element is not found...`);return t},e.getElement=function(n){const e=document.querySelector(n);if(!(e&&e instanceof HTMLElement))throw Error(`${n} is not found...`);return e},e.getElementsArray=function(n){const e=Array.from(document.querySelectorAll(n));if(!e)throw Error(`${n} elements are not found...`);return e.forEach((n=>{if(!(n instanceof HTMLElement))throw Error("Elements are not an array of HTMLElement...")})),e}},73:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.cleanContent=e.cleanElement=e.getCurrentView=e.saveView=e.updateTotalCount=e.setTotalCount=e.isEnoughSpace=e.isLastPage=void 0;const o=t(834),r=t(840);e.isLastPage=function(){const n=Number((0,o.getElement)(".count").textContent);return 1===Math.ceil(n/r.GARAGE_LIMIT)},e.isEnoughSpace=function(){return(0,o.getElementsArray)(".track").length<r.GARAGE_LIMIT},e.setTotalCount=function(n){(0,o.getElement)(".count").textContent=n.count,localStorage.setItem("totalCars",n.count)},e.updateTotalCount=function(n){const e=(0,o.getElement)(".count"),t=Number(e.textContent);e.textContent=`${t+n}`},e.saveView=function(n="garage"){document.body.dataset.view=n,window.localStorage.setItem("view",n)},e.getCurrentView=function(){var n;return null!==(n=window.localStorage.getItem("view"))&&void 0!==n?n:""},e.cleanElement=function(n){for(;n.firstChild;)n.firstChild.remove()},e.cleanContent=function(){const n=(0,o.getElement)(".view__body");for(;n.firstChild;)n.firstChild.remove()}},48:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.toggleUIElements=e.togglePageTittle=e.toggleFormsDisplay=e.toggleViewButton=void 0;const o=t(834);function r(n){var e;const t=(0,o.getElement)(".bubble"),r=(0,o.getElementsArray)(".button__view");r.forEach((n=>n.classList.remove("active")));const a=r.find((e=>e.id===`button--${n}`));if(!a)throw Error("Couldn't find a View Button.");a.classList.add("active"),(null===(e=a.textContent)||void 0===e?void 0:e.includes("Garage"))?t.classList.remove("winners"):t.classList.add("winners")}function a(n){const e=(0,o.getElement)(".forms__container");"garage"===n?e.classList.remove(".forms--hidden".slice(1)):e.classList.add(".forms--hidden".slice(1))}function i(n,e=0){(0,o.getElement)(".title").textContent=`${n[0].toUpperCase()}${n.slice(1)}`,(0,o.getElement)(".count").textContent=String(e);const t=(0,o.getElement)(".view__buttons");"winners"===n?t.classList.add("hidden"):t.classList.remove("hidden")}e.toggleViewButton=r,e.toggleFormsDisplay=a,e.togglePageTittle=i,e.toggleUIElements=function(n){r(n),a(n),i(n)}},234:function(n,e,t){var o=this&&this.__awaiter||function(n,e,t,o){return new(t||(t=Promise))((function(r,a){function i(n){try{c(o.next(n))}catch(n){a(n)}}function A(n){try{c(o.throw(n))}catch(n){a(n)}}function c(n){var e;n.done?r(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(i,A)}c((o=o.apply(n,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0}),e.handleCreateCar=void 0;const r=t(834),a=t(737),i=t(73),A=t(389);e.handleCreateCar=function(n){return o(this,void 0,void 0,(function*(){n.preventDefault();const e=(0,r.getElement)(".form__create .input-text"),t=(0,r.getElement)(".form__create .input-color");if(!(e instanceof HTMLInputElement))throw Error("Text input isn't found.");if(!(t instanceof HTMLInputElement))throw Error("Color input isn't found.");const o=e.value,c=t.value;if(!o)return void e.focus();const s=yield(0,a.createCarAPI)({name:o,color:c});(0,i.isLastPage)()&&(0,i.isEnoughSpace)()&&(0,A.appendTrack)(s),(0,i.updateTotalCount)(1),e.value=""}))}},321:function(n,e,t){var o=this&&this.__awaiter||function(n,e,t,o){return new(t||(t=Promise))((function(r,a){function i(n){try{c(o.next(n))}catch(n){a(n)}}function A(n){try{c(o.throw(n))}catch(n){a(n)}}function c(n){var e;n.done?r(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(i,A)}c((o=o.apply(n,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0}),e.handleDelete=void 0;const r=t(893),a=t(834);e.handleDelete=function(n){return o(this,void 0,void 0,(function*(){const e=(0,a.getTarget)(n),t=(0,a.getClosest)(e,".track").id.split("--").at(-1);if(!t)throw Error("Couldn't get car's ID...");yield(0,r.deleteCarAPI)(t);const o=new Event("delete");e.dispatchEvent(o),e.addEventListener("delete",(()=>console.log("Delete")))}))}},751:function(n,e,t){var o=this&&this.__awaiter||function(n,e,t,o){return new(t||(t=Promise))((function(r,a){function i(n){try{c(o.next(n))}catch(n){a(n)}}function A(n){try{c(o.throw(n))}catch(n){a(n)}}function c(n){var e;n.done?r(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(i,A)}c((o=o.apply(n,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0}),e.renderGarageView=void 0;const r=t(48),a=t(815),i=t(73),A=t(535);e.renderGarageView=function(n){return o(this,void 0,void 0,(function*(){if(n&&"garage"===(0,i.getCurrentView)())return;(0,i.cleanContent)(),(0,i.saveView)("garage"),(0,r.toggleUIElements)("garage");const e=yield(0,a.getCarsAPI)(1);(0,i.setTotalCount)(e),(0,A.renderTracks)(e),console.log(localStorage.getItem("totalCars")),console.log("🙂 Garage View")}))}},389:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.appendTrack=void 0;const o=t(834),r=t(517);e.appendTrack=function(n){const e=(0,o.getElement)(".view__body"),t=(0,r.createTrack)(n);e.append(t)}},517:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createTrack=e.createTrackBody=e.createTrackHeader=void 0;const o=t(479),r=t(957);function a(n){const e=(0,o.createElement)("div",[".track__header"]),t=(0,r.createTrackButtons)(),a=(0,o.createElement)("span",[".car__name"],n.name);return e.append(t,a),e}function i(n){const e=(0,o.createElement)("div",[".track__body"]),t={divClass:".car",ns:"http://www.w3.org/2000/svg",width:"40px",height:"40px",color:n.color},r=(0,o.createSVG)(t);r.id=`car--${n.id}`;const a=(0,o.createElement)("div",[".flag"]);return e.append(r,a),e}e.createTrackHeader=a,e.createTrackBody=i,e.createTrack=function(n){const e=(0,o.createElement)("div",[".track"]);e.id=`track--${n.id}`;const t=(0,o.createElement)("div",[".track__container"]),r=a(n),A=i(n);return t.append(r,A),e.append(t),e}},535:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.renderTracks=void 0;const o=t(834),r=t(73),a=t(517);e.renderTracks=function(n){const e=(0,o.getElement)(".view__body");(0,r.cleanElement)(e);const t=[...n.items];return t.forEach((n=>{const t=(0,a.createTrack)(n);e.append(t)})),console.log(t),e}},957:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createTrackButtons=e.createButton=void 0;const o=t(479),r=t(321);function a(n,e){const t=(0,o.createElement)("button",[".button__track"],n),r=`button__${n.toLowerCase()}`;return t.classList.add(r),t.id=r,t.addEventListener("click",e),t}e.createButton=a,e.createTrackButtons=function(){const n=(0,o.createElement)("div",[".track__buttons"]),e=a("Start",(n=>console.log(n.target))),t=a("Stop",(n=>console.log(n.target))),i=a("Edit",(n=>console.log(n.target))),A=a("Delete",r.handleDelete);return n.append(e,t,i,A),n}},802:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.renderWinnersView=void 0;const o=t(73),r=t(48);e.renderWinnersView=function(n){n&&"winners"===(0,o.getCurrentView)()||((0,o.cleanContent)(),(0,r.toggleUIElements)("winners"),(0,o.saveView)("winners"),console.log("🙂 Winner View"))}},191:(n,e,t)=>{n.exports=t.p+"f184225b7b3184f4baf5.svg"},140:(n,e,t)=>{n.exports=t.p+"fe22c9f7a75c10f13ff7.svg"},233:(n,e,t)=>{n.exports=t.p+"69984fd172bcf5b02d1e.svg"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o].call(a.exports,a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&!n;)n=o[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{t(643);const n=t(769),e=t(652);(0,n.renderApp)(),window.addEventListener("DOMContentLoaded",(()=>{console.log("✅ DOM Loaded"),(0,e.initListeners)()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,