(()=>{"use strict";var n={4127:(n,e,t)=>{t.d(e,{Z:()=>g});var o=t(4015),a=t.n(o),r=t(3645),i=t.n(r),A=t(1667),s=t.n(A),c=t(5197),d=t(5960),l=i()(a()),p=s()(c),u=s()(d);l.push([n.id,"button {\n  border: 0;\n  outline: 0;\n  font-family: var(--font);\n  font-size: var(--button-font-size);\n  color: var(--black);\n  height: 30px;\n  padding: 0 15px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n\n  background-color: var(--white);\n  border-radius: 30px;\n  text-transform: uppercase;\n\n  position: relative;\n  z-index: 100;\n  user-select: none;\n  cursor: pointer;\n\n  transition: all 0.2s ease-in;\n}\n\nbutton:not(.button__view):hover {\n  opacity: 1;\n  background-color: var(--button-hover-white);\n}\n\n.button__view {\n  width: 120px;\n  height: 60px;\n  background-color: transparent;\n  color: var(--white);\n  font-size: 18px;\n  text-transform: capitalize;\n\n  transition: color 0.2s ease-in;\n}\n\n.button__view.active {\n  color: var(--black);\n  cursor: default;\n}\n\nform button {\n  padding: 0 15px;\n  text-transform: uppercase;\n  font-size: 12px;\n}\n\n.button__cancel,\n.button__reset,\n.button__page {\n  background-color: transparent;\n  border: 1px solid var(--white);\n  color: var(--white);\n}\n\n.button__cancel:hover,\n.button__reset:hover,\n.button__page:hover {\n  background-color: var(--white);\n  color: var(--black);\n}\n\n.button__race {\n  background-color: var(--green);\n}\n\nbutton.button__race:hover {\n  background-color: var(--button-hover-primary);\n}\n\n.button__race:disabled,\nbutton.button__race:disabled:hover {\n  background-color: var(--green);\n  opacity: 0.6;\n  cursor: default;\n}\n\n.button__page {\n  height: 20px;\n  padding: 0 10px;\n}\n\n.button__page:disabled {\n  cursor: default;\n  opacity: 0.5;\n}\n\nbutton.button__page:disabled:hover {\n  cursor: default;\n  opacity: 0.5;\n  background-color: transparent;\n  color: var(--white);\n}\n\n/* Track */\n.button__track {\n  font-size: 14px;\n  text-transform: capitalize;\n  background-color: transparent;\n  color: var(--track-button-color);\n\n  padding: 0 5px;\n  height: 20px;\n}\n\nbutton.button__track:hover {\n  color: var(--white);\n  background-color: var(--black-light);\n}\n\nbutton.button__track:disabled,\nbutton.button__track:disabled {\n  cursor: default;\n  background-color: transparent;\n  color: var(--track-button-color);\n}\n\n.button__create:disabled,\n.button__create:disabled:hover,\n.button__generate:disabled,\n.button__generate:disabled:hover {\n  background-color: var(--white);\n  opacity: 0.5;\n  cursor: default;\n}\n\n/* Sort */\n\nbutton.button__sort--wins,\nbutton.button__sort--time,\nbutton.button__sort--ids {\n  padding: 0 2px 0 1px;\n  width: 15px;\n  height: 24px;\n  border-radius: 10px;\n\n  background-color: var(--black-light);\n  background-image: url("+p+");\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: 50%;\n}\n\nbutton.button__sort--wins:hover,\nbutton.button__sort--time:hover,\nbutton.button__sort--ids:hover {\n  background-image: url("+u+");\n}\n\n/**/\n\n@media all and (max-width: 720px) {\n  .button__view {\n    width: 50%;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/components/buttons.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,wBAAwB;EACxB,kCAAkC;EAClC,mBAAmB;EACnB,YAAY;EACZ,eAAe;;EAEf,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,cAAc;;EAEd,8BAA8B;EAC9B,mBAAmB;EACnB,yBAAyB;;EAEzB,kBAAkB;EAClB,YAAY;EACZ,iBAAiB;EACjB,eAAe;;EAEf,4BAA4B;AAC9B;;AAEA;EACE,UAAU;EACV,2CAA2C;AAC7C;;AAEA;EACE,YAAY;EACZ,YAAY;EACZ,6BAA6B;EAC7B,mBAAmB;EACnB,eAAe;EACf,0BAA0B;;EAE1B,8BAA8B;AAChC;;AAEA;EACE,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,eAAe;EACf,yBAAyB;EACzB,eAAe;AACjB;;AAEA;;;EAGE,6BAA6B;EAC7B,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;;;EAGE,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,6CAA6C;AAC/C;;AAEA;;EAEE,8BAA8B;EAC9B,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,eAAe;EACf,YAAY;AACd;;AAEA;EACE,eAAe;EACf,YAAY;EACZ,6BAA6B;EAC7B,mBAAmB;AACrB;;AAEA,UAAU;AACV;EACE,eAAe;EACf,0BAA0B;EAC1B,6BAA6B;EAC7B,gCAAgC;;EAEhC,cAAc;EACd,YAAY;AACd;;AAEA;EACE,mBAAmB;EACnB,oCAAoC;AACtC;;AAEA;;EAEE,eAAe;EACf,6BAA6B;EAC7B,gCAAgC;AAClC;;AAEA;;;;EAIE,8BAA8B;EAC9B,YAAY;EACZ,eAAe;AACjB;;AAEA,SAAS;;AAET;;;EAGE,oBAAoB;EACpB,WAAW;EACX,YAAY;EACZ,mBAAmB;;EAEnB,oCAAoC;EACpC,yDAA8C;EAC9C,2BAA2B;EAC3B,4BAA4B;EAC5B,oBAAoB;AACtB;;AAEA;;;EAGE,yDAAoD;AACtD;;AAEA,GAAG;;AAEH;EACE;IACE,UAAU;EACZ;AACF",sourcesContent:['button {\n  border: 0;\n  outline: 0;\n  font-family: var(--font);\n  font-size: var(--button-font-size);\n  color: var(--black);\n  height: 30px;\n  padding: 0 15px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n\n  background-color: var(--white);\n  border-radius: 30px;\n  text-transform: uppercase;\n\n  position: relative;\n  z-index: 100;\n  user-select: none;\n  cursor: pointer;\n\n  transition: all 0.2s ease-in;\n}\n\nbutton:not(.button__view):hover {\n  opacity: 1;\n  background-color: var(--button-hover-white);\n}\n\n.button__view {\n  width: 120px;\n  height: 60px;\n  background-color: transparent;\n  color: var(--white);\n  font-size: 18px;\n  text-transform: capitalize;\n\n  transition: color 0.2s ease-in;\n}\n\n.button__view.active {\n  color: var(--black);\n  cursor: default;\n}\n\nform button {\n  padding: 0 15px;\n  text-transform: uppercase;\n  font-size: 12px;\n}\n\n.button__cancel,\n.button__reset,\n.button__page {\n  background-color: transparent;\n  border: 1px solid var(--white);\n  color: var(--white);\n}\n\n.button__cancel:hover,\n.button__reset:hover,\n.button__page:hover {\n  background-color: var(--white);\n  color: var(--black);\n}\n\n.button__race {\n  background-color: var(--green);\n}\n\nbutton.button__race:hover {\n  background-color: var(--button-hover-primary);\n}\n\n.button__race:disabled,\nbutton.button__race:disabled:hover {\n  background-color: var(--green);\n  opacity: 0.6;\n  cursor: default;\n}\n\n.button__page {\n  height: 20px;\n  padding: 0 10px;\n}\n\n.button__page:disabled {\n  cursor: default;\n  opacity: 0.5;\n}\n\nbutton.button__page:disabled:hover {\n  cursor: default;\n  opacity: 0.5;\n  background-color: transparent;\n  color: var(--white);\n}\n\n/* Track */\n.button__track {\n  font-size: 14px;\n  text-transform: capitalize;\n  background-color: transparent;\n  color: var(--track-button-color);\n\n  padding: 0 5px;\n  height: 20px;\n}\n\nbutton.button__track:hover {\n  color: var(--white);\n  background-color: var(--black-light);\n}\n\nbutton.button__track:disabled,\nbutton.button__track:disabled {\n  cursor: default;\n  background-color: transparent;\n  color: var(--track-button-color);\n}\n\n.button__create:disabled,\n.button__create:disabled:hover,\n.button__generate:disabled,\n.button__generate:disabled:hover {\n  background-color: var(--white);\n  opacity: 0.5;\n  cursor: default;\n}\n\n/* Sort */\n\nbutton.button__sort--wins,\nbutton.button__sort--time,\nbutton.button__sort--ids {\n  padding: 0 2px 0 1px;\n  width: 15px;\n  height: 24px;\n  border-radius: 10px;\n\n  background-color: var(--black-light);\n  background-image: url("../../assets/sort.svg");\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: 50%;\n}\n\nbutton.button__sort--wins:hover,\nbutton.button__sort--time:hover,\nbutton.button__sort--ids:hover {\n  background-image: url("../../assets/sort-black.svg");\n}\n\n/**/\n\n@media all and (max-width: 720px) {\n  .button__view {\n    width: 50%;\n  }\n}\n'],sourceRoot:""}]);const g=l},1076:(n,e,t)=>{t.d(e,{Z:()=>p});var o=t(4015),a=t.n(o),r=t(3645),i=t.n(r),A=t(1667),s=t.n(A),c=t(6140),d=i()(a()),l=s()(c);d.push([n.id,".forms__container {\n  max-width: 530px;\n  width: 100%;\n  position: relative;\n  display: flex;\n}\n\n.forms__container.forms--hidden {\n  visibility: hidden;\n  opacity: 0;\n}\n\n.forms__container form {\n  width: 100%;\n  background-color: var(--black-light);\n  border-radius: 30px;\n}\n\nform {\n  display: flex;\n  justify-content: space-between;\n}\n\nform .form__container {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  gap: 5px;\n}\n\n.form__create {\n  padding: 15px;\n}\n\n.form__create span {\n  width: 3px;\n  height: 30px;\n  background-image: url("+l+");\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  opacity: 0.2;\n\n  margin: 0 15px;\n  display: flex;\n  flex-shrink: 0;\n}\n\n.form__update {\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  position: absolute;\n  left: 0;\n  top: 0;\n  z-index: 100;\n\n  box-shadow: 10px 10px 10px var(--shadow);\n\n  transform: translateY(-200%);\n  transition: all 0.3s ease-in-out;\n}\n\n.form__update--open {\n  transform: translateY(0);\n}\n\n.form__update h2 {\n  font-size: 24px;\n  font-weight: 400;\n  margin-bottom: 10px;\n}\n\n/**/\n\n@media all and (max-width: 720px) {\n  .forms__container {\n    max-width: 720px;\n    width: 100%;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/components/forms.css"],names:[],mappings:"AAAA;EACE,gBAAgB;EAChB,WAAW;EACX,kBAAkB;EAClB,aAAa;AACf;;AAEA;EACE,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,WAAW;EACX,oCAAoC;EACpC,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,WAAW;EACX,aAAa;EACb,8BAA8B;EAC9B,QAAQ;AACV;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,UAAU;EACV,YAAY;EACZ,yDAAsD;EACtD,wBAAwB;EACxB,2BAA2B;EAC3B,4BAA4B;EAC5B,YAAY;;EAEZ,cAAc;EACd,aAAa;EACb,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,aAAa;EACb,sBAAsB;EACtB,2BAA2B;EAC3B,kBAAkB;EAClB,OAAO;EACP,MAAM;EACN,YAAY;;EAEZ,wCAAwC;;EAExC,4BAA4B;EAC5B,gCAAgC;AAClC;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,eAAe;EACf,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA,GAAG;;AAEH;EACE;IACE,gBAAgB;IAChB,WAAW;EACb;AACF",sourcesContent:['.forms__container {\n  max-width: 530px;\n  width: 100%;\n  position: relative;\n  display: flex;\n}\n\n.forms__container.forms--hidden {\n  visibility: hidden;\n  opacity: 0;\n}\n\n.forms__container form {\n  width: 100%;\n  background-color: var(--black-light);\n  border-radius: 30px;\n}\n\nform {\n  display: flex;\n  justify-content: space-between;\n}\n\nform .form__container {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  gap: 5px;\n}\n\n.form__create {\n  padding: 15px;\n}\n\n.form__create span {\n  width: 3px;\n  height: 30px;\n  background-image: url("../../assets/dots-dividor.svg");\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  opacity: 0.2;\n\n  margin: 0 15px;\n  display: flex;\n  flex-shrink: 0;\n}\n\n.form__update {\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  position: absolute;\n  left: 0;\n  top: 0;\n  z-index: 100;\n\n  box-shadow: 10px 10px 10px var(--shadow);\n\n  transform: translateY(-200%);\n  transition: all 0.3s ease-in-out;\n}\n\n.form__update--open {\n  transform: translateY(0);\n}\n\n.form__update h2 {\n  font-size: 24px;\n  font-weight: 400;\n  margin-bottom: 10px;\n}\n\n/**/\n\n@media all and (max-width: 720px) {\n  .forms__container {\n    max-width: 720px;\n    width: 100%;\n  }\n}\n'],sourceRoot:""}]);const p=d},1645:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(4015),a=t.n(o),r=t(3645),i=t.n(r)()(a());i.push([n.id,"input {\n  outline: none;\n  border: none;\n  height: 30px;\n\n  transition: all 0.1s ease-in;\n}\n\n.input-text {\n  max-width: 500px;\n  width: 100%;\n  padding: 0 15px;\n\n  border-radius: 30px;\n  border: 1px solid var(--input-border);\n  background-color: transparent;\n}\n\n.input-text:focus {\n  color: var(--white);\n  border: 1px solid var(--white);\n}\n\n.input-color {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  background-color: transparent;\n  width: 34px;\n  height: 30px;\n  border: none;\n  cursor: pointer;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n\n  margin-top: -4px;\n}\n\n.input-color::-webkit-color-swatch {\n  display: block;\n  width: 30px;\n  height: 28px;\n  border-radius: 30px;\n  border: 1px solid var(--white);\n}\n\n.input-color::-moz-color-swatch {\n  border-radius: 30px;\n  border: 1px solid var(--white);\n}\n\n","",{version:3,sources:["webpack://./src/styles/components/input.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,YAAY;EACZ,YAAY;;EAEZ,4BAA4B;AAC9B;;AAEA;EACE,gBAAgB;EAChB,WAAW;EACX,eAAe;;EAEf,mBAAmB;EACnB,qCAAqC;EACrC,6BAA6B;AAC/B;;AAEA;EACE,mBAAmB;EACnB,8BAA8B;AAChC;;AAEA;EACE,wBAAwB;EACxB,qBAAqB;EACrB,gBAAgB;EAChB,6BAA6B;EAC7B,WAAW;EACX,YAAY;EACZ,YAAY;EACZ,eAAe;;EAEf,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,cAAc;;EAEd,gBAAgB;AAClB;;AAEA;EACE,cAAc;EACd,WAAW;EACX,YAAY;EACZ,mBAAmB;EACnB,8BAA8B;AAChC;;AAEA;EACE,mBAAmB;EACnB,8BAA8B;AAChC",sourcesContent:["input {\n  outline: none;\n  border: none;\n  height: 30px;\n\n  transition: all 0.1s ease-in;\n}\n\n.input-text {\n  max-width: 500px;\n  width: 100%;\n  padding: 0 15px;\n\n  border-radius: 30px;\n  border: 1px solid var(--input-border);\n  background-color: transparent;\n}\n\n.input-text:focus {\n  color: var(--white);\n  border: 1px solid var(--white);\n}\n\n.input-color {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  background-color: transparent;\n  width: 34px;\n  height: 30px;\n  border: none;\n  cursor: pointer;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n\n  margin-top: -4px;\n}\n\n.input-color::-webkit-color-swatch {\n  display: block;\n  width: 30px;\n  height: 28px;\n  border-radius: 30px;\n  border: 1px solid var(--white);\n}\n\n.input-color::-moz-color-swatch {\n  border-radius: 30px;\n  border: 1px solid var(--white);\n}\n\n"],sourceRoot:""}]);const A=i},7394:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(4015),a=t.n(o),r=t(3645),i=t.n(r)()(a());i.push([n.id,".pagination {\n  width: 200px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  margin-top: 15px;\n}\n\n.page__container {\n  display: flex;\n  gap: 5px;\n}\n\n.page__container span {\n  font-size: 12px;\n  text-transform: uppercase;\n}\n\n.pages__buttons {\n  display: flex;\n  gap: 5px;\n}\n","",{version:3,sources:["webpack://./src/styles/components/pagination.css"],names:[],mappings:"AAAA;EACE,YAAY;EACZ,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;;EAEnB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,QAAQ;AACV;;AAEA;EACE,eAAe;EACf,yBAAyB;AAC3B;;AAEA;EACE,aAAa;EACb,QAAQ;AACV",sourcesContent:[".pagination {\n  width: 200px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  margin-top: 15px;\n}\n\n.page__container {\n  display: flex;\n  gap: 5px;\n}\n\n.page__container span {\n  font-size: 12px;\n  text-transform: uppercase;\n}\n\n.pages__buttons {\n  display: flex;\n  gap: 5px;\n}\n"],sourceRoot:""}]);const A=i},5939:(n,e,t)=>{t.d(e,{Z:()=>g});var o=t(4015),a=t.n(o),r=t(3645),i=t.n(r),A=t(1667),s=t.n(A),c=t(6191),d=t(3233),l=i()(a()),p=s()(c),u=s()(d);l.push([n.id,'.track {\n  position: relative;\n  border-top: 1px solid var(--white);\n}\n\n.track:last-child {\n  border-bottom: 1px solid var(--white);\n}\n\n.track__container {\n  padding: 10px 0;\n  position: relative;\n}\n\n.track__header {\n  display: flex;\n  gap: 7px;\n  align-items: center;\n\n  position: absolute;\n  margin-top: -5px;\n}\n\n.track__buttons {\n  display: flex;\n  gap: 4px;\n  margin-left: -2px;\n}\n\n.car__name {\n  position: relative;\n  padding-left: 16px;\n}\n\n.car__name::before {\n  content: "";\n  position: absolute;\n  width: 8px;\n  height: 8px;\n  background-image: url('+p+");\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n  left: 0;\n  top: 5px;\n}\n\n/* BODY */\n\n.track__body {\n  width: 100%;\n  position: relative;\n  height: 65px;\n  display: flex;\n  align-items: flex-end;\n}\n\n.car {\n  width: 40px;\n  height: 40px;\n  position: absolute;\n  z-index: 100;\n}\n\n.car svg {\n  border-radius: 50%;\n}\n\n.flag {\n  width: 30px;\n  height: 65px;\n  background-image: url("+u+");\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n\n  position: absolute;\n  right: 40px;\n  bottom: 0;\n}","",{version:3,sources:["webpack://./src/styles/components/track.css"],names:[],mappings:"AAAA;EACE,kBAAkB;EAClB,kCAAkC;AACpC;;AAEA;EACE,qCAAqC;AACvC;;AAEA;EACE,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,QAAQ;EACR,mBAAmB;;EAEnB,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,QAAQ;EACR,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,UAAU;EACV,WAAW;EACX,yDAAqD;EACrD,2BAA2B;EAC3B,wBAAwB;EACxB,4BAA4B;EAC5B,OAAO;EACP,QAAQ;AACV;;AAEA,SAAS;;AAET;EACE,WAAW;EACX,kBAAkB;EAClB,YAAY;EACZ,aAAa;EACb,qBAAqB;AACvB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,yDAAgD;EAChD,wBAAwB;EACxB,2BAA2B;EAC3B,4BAA4B;;EAE5B,kBAAkB;EAClB,WAAW;EACX,SAAS;AACX",sourcesContent:['.track {\n  position: relative;\n  border-top: 1px solid var(--white);\n}\n\n.track:last-child {\n  border-bottom: 1px solid var(--white);\n}\n\n.track__container {\n  padding: 10px 0;\n  position: relative;\n}\n\n.track__header {\n  display: flex;\n  gap: 7px;\n  align-items: center;\n\n  position: absolute;\n  margin-top: -5px;\n}\n\n.track__buttons {\n  display: flex;\n  gap: 4px;\n  margin-left: -2px;\n}\n\n.car__name {\n  position: relative;\n  padding-left: 16px;\n}\n\n.car__name::before {\n  content: "";\n  position: absolute;\n  width: 8px;\n  height: 8px;\n  background-image: url("../../assets/arrow-right.svg");\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n  left: 0;\n  top: 5px;\n}\n\n/* BODY */\n\n.track__body {\n  width: 100%;\n  position: relative;\n  height: 65px;\n  display: flex;\n  align-items: flex-end;\n}\n\n.car {\n  width: 40px;\n  height: 40px;\n  position: absolute;\n  z-index: 100;\n}\n\n.car svg {\n  border-radius: 50%;\n}\n\n.flag {\n  width: 30px;\n  height: 65px;\n  background-image: url("../../assets/finish.svg");\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n\n  position: absolute;\n  right: 40px;\n  bottom: 0;\n}'],sourceRoot:""}]);const g=l},7348:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(4015),a=t.n(o),r=t(3645),i=t.n(r)()(a());i.push([n.id,".footer {\n  width: 100%;\n  padding: var(--page-padding);\n}\n\n.footer__container {\n  width: 100%;\n  height: 30px;\n  padding: 0 15px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  background-color: var(--black-light);\n  border-radius: 30px;\n}\n\n.footer__container .footer__info {\n  display: flex;\n  gap: 5px;\n}\n\n/**/\n\n@media all and (max-width: 550px) {\n  .footer {\n    padding-bottom: 20px;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/footer.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,4BAA4B;AAC9B;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,eAAe;EACf,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;;EAEnB,oCAAoC;EACpC,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,QAAQ;AACV;;AAEA,GAAG;;AAEH;EACE;IACE,oBAAoB;EACtB;AACF",sourcesContent:[".footer {\n  width: 100%;\n  padding: var(--page-padding);\n}\n\n.footer__container {\n  width: 100%;\n  height: 30px;\n  padding: 0 15px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  background-color: var(--black-light);\n  border-radius: 30px;\n}\n\n.footer__container .footer__info {\n  display: flex;\n  gap: 5px;\n}\n\n/**/\n\n@media all and (max-width: 550px) {\n  .footer {\n    padding-bottom: 20px;\n  }\n}\n"],sourceRoot:""}]);const A=i},3497:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(4015),a=t.n(o),r=t(3645),i=t.n(r)()(a());i.push([n.id,".header {\n  width: 100%;\n  background-color: var(--black);\n  position: fixed;\n  left: 0;\n  top: 0;\n  z-index: 1000;\n}\n\n.header__container {\n  width: 100%;\n  padding: var(--page-padding);\n  display: flex;\n  justify-content: space-between;\n  gap: 10px;\n}\n\n.header__buttons {\n  display: flex;\n  position: relative;\n  border-radius: 60px;\n\n  background-color: var(--black-light);\n\n  cursor: pointer;\n  transition: all 0.2s ease-in;\n}\n\n.bubble {\n  display: block;\n  width: 50%;\n  height: 60px;\n  border-radius: 60px;\n  background-color: var(--white);\n\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  transition: all 0.2s ease-in-out;\n}\n\n.bubble.winners {\n  left: 50%;\n}\n\n/**/\n\n@media all and (max-width: 720px) {\n  .header__container {\n    flex-direction: column;\n    gap: 20px;\n  }\n\n  .header__buttons {\n    width: 100%;\n  }\n}\n\n@media all and (max-width: 550px) {\n  .header__container {\n    padding-top: 20px;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/header.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,8BAA8B;EAC9B,eAAe;EACf,OAAO;EACP,MAAM;EACN,aAAa;AACf;;AAEA;EACE,WAAW;EACX,4BAA4B;EAC5B,aAAa;EACb,8BAA8B;EAC9B,SAAS;AACX;;AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,mBAAmB;;EAEnB,oCAAoC;;EAEpC,eAAe;EACf,4BAA4B;AAC9B;;AAEA;EACE,cAAc;EACd,UAAU;EACV,YAAY;EACZ,mBAAmB;EACnB,8BAA8B;;EAE9B,kBAAkB;EAClB,MAAM;EACN,OAAO;;EAEP,gCAAgC;AAClC;;AAEA;EACE,SAAS;AACX;;AAEA,GAAG;;AAEH;EACE;IACE,sBAAsB;IACtB,SAAS;EACX;;EAEA;IACE,WAAW;EACb;AACF;;AAEA;EACE;IACE,iBAAiB;EACnB;AACF",sourcesContent:[".header {\n  width: 100%;\n  background-color: var(--black);\n  position: fixed;\n  left: 0;\n  top: 0;\n  z-index: 1000;\n}\n\n.header__container {\n  width: 100%;\n  padding: var(--page-padding);\n  display: flex;\n  justify-content: space-between;\n  gap: 10px;\n}\n\n.header__buttons {\n  display: flex;\n  position: relative;\n  border-radius: 60px;\n\n  background-color: var(--black-light);\n\n  cursor: pointer;\n  transition: all 0.2s ease-in;\n}\n\n.bubble {\n  display: block;\n  width: 50%;\n  height: 60px;\n  border-radius: 60px;\n  background-color: var(--white);\n\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  transition: all 0.2s ease-in-out;\n}\n\n.bubble.winners {\n  left: 50%;\n}\n\n/**/\n\n@media all and (max-width: 720px) {\n  .header__container {\n    flex-direction: column;\n    gap: 20px;\n  }\n\n  .header__buttons {\n    width: 100%;\n  }\n}\n\n@media all and (max-width: 550px) {\n  .header__container {\n    padding-top: 20px;\n  }\n}\n"],sourceRoot:""}]);const A=i},3771:(n,e,t)=>{t.d(e,{Z:()=>_});var o=t(4015),a=t.n(o),r=t(3645),i=t.n(r),A=t(8772),s=t(7179),c=t(4127),d=t(1076),l=t(1645),p=t(5939),u=t(7394),g=t(3497),E=t(8756),m=t(7348),C=t(1574),f=t(7450),b=i()(a());b.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=JetBrains+Mono:wght@300;400;500;600;700&display=swap);"]),b.i(A.Z),b.i(s.Z),b.i(c.Z),b.i(d.Z),b.i(l.Z),b.i(p.Z),b.i(u.Z),b.i(g.Z),b.i(E.Z),b.i(m.Z),b.i(C.Z),b.i(f.Z),b.push([n.id,"\n","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]);const _=b},8756:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(4015),a=t.n(o),r=t(3645),i=t.n(r)()(a());i.push([n.id,".main {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n\n  margin-top: 120px;\n}\n\n.main__container {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  padding: 40px var(--page-padding);\n}\n\n/* HEADER */\n\n.view__header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 15px;\n  margin-bottom: 20px;\n}\n\n.view__title {\n  display: flex;\n  gap: 5px;\n}\n\n.view__title span {\n  text-align: right;\n}\n\n.view__title h2,\n.view__title span {\n  font-size: 40px;\n  font-weight: 400;\n}\n\n.view__buttons {\n  display: flex;\n  gap: 5px;\n  margin-top: 5px;\n}\n\n.view__buttons.hidden {\n  visibility: hidden;\n  opacity: 0;\n}\n\n@media all and (max-width: 720px) {\n  .main {\n    margin-top: 180px;\n  }\n}","",{version:3,sources:["webpack://./src/styles/main.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,YAAY;;EAEZ,iBAAiB;AACnB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,YAAY;EACZ,iCAAiC;AACnC;;AAEA,WAAW;;AAEX;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,SAAS;EACT,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,QAAQ;AACV;;AAEA;EACE,iBAAiB;AACnB;;AAEA;;EAEE,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,QAAQ;EACR,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE;IACE,iBAAiB;EACnB;AACF",sourcesContent:[".main {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n\n  margin-top: 120px;\n}\n\n.main__container {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  padding: 40px var(--page-padding);\n}\n\n/* HEADER */\n\n.view__header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 15px;\n  margin-bottom: 20px;\n}\n\n.view__title {\n  display: flex;\n  gap: 5px;\n}\n\n.view__title span {\n  text-align: right;\n}\n\n.view__title h2,\n.view__title span {\n  font-size: 40px;\n  font-weight: 400;\n}\n\n.view__buttons {\n  display: flex;\n  gap: 5px;\n  margin-top: 5px;\n}\n\n.view__buttons.hidden {\n  visibility: hidden;\n  opacity: 0;\n}\n\n@media all and (max-width: 720px) {\n  .main {\n    margin-top: 180px;\n  }\n}"],sourceRoot:""}]);const A=i},1574:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(4015),a=t.n(o),r=t(3645),i=t.n(r)()(a());i.push([n.id,".popup {\n  position: absolute;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n\n  padding: 20px;\n  /* background-color: rgba(28, 28, 28, 0.5); */\n\n  transform: translateY(-100%);\n  transition: transform 1s ease-in;\n}\n\n.popup--open {\n  transform: translateY(0);\n}\n\n.popup__container {\n  max-width: 520px;\n  width: 100%;\n  height: 180px;\n  background-color: var(--black-light);\n  box-shadow: 10px 10px 10px var(--shadow);\n  border-radius: 40px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.popup__content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.popup__content span {\n  font-size: 24px;\n  user-select: none;\n}\n\n/**/\n\n@media all and (max-width: 550px) {\n  .popup {\n    padding: 15px;\n  }\n}","",{version:3,sources:["webpack://./src/styles/popup.css"],names:[],mappings:"AAAA;EACE,kBAAkB;EAClB,OAAO;EACP,YAAY;EACZ,aAAa;EACb,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,aAAa;;EAEb,aAAa;EACb,6CAA6C;;EAE7C,4BAA4B;EAC5B,gCAAgC;AAClC;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,gBAAgB;EAChB,WAAW;EACX,aAAa;EACb,oCAAoC;EACpC,wCAAwC;EACxC,mBAAmB;;EAEnB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,eAAe;EACf,iBAAiB;AACnB;;AAEA,GAAG;;AAEH;EACE;IACE,aAAa;EACf;AACF",sourcesContent:[".popup {\n  position: absolute;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n\n  padding: 20px;\n  /* background-color: rgba(28, 28, 28, 0.5); */\n\n  transform: translateY(-100%);\n  transition: transform 1s ease-in;\n}\n\n.popup--open {\n  transform: translateY(0);\n}\n\n.popup__container {\n  max-width: 520px;\n  width: 100%;\n  height: 180px;\n  background-color: var(--black-light);\n  box-shadow: 10px 10px 10px var(--shadow);\n  border-radius: 40px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.popup__content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.popup__content span {\n  font-size: 24px;\n  user-select: none;\n}\n\n/**/\n\n@media all and (max-width: 550px) {\n  .popup {\n    padding: 15px;\n  }\n}"],sourceRoot:""}]);const A=i},8772:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(4015),a=t.n(o),r=t(3645),i=t.n(r)()(a());i.push([n.id,'* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  font-size: 14px;\n  color: var(--white);\n}\n\nbody {\n  width: 100%;\n  min-height: 100vh;\n  height: 100%;\n  background: var(--black);\n  font-family: "Inter", "Arial", sans-serif;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  overflow-x: hidden;\n}\n\n.content-width {\n  width: 100%;\n}\n\na {\n  text-decoration: none;\n  color: var(--white);\n  opacity: 0.6;\n\n  transition: all 0.2s ease-in;\n}\n\na:hover {\n  opacity: 1;\n}\n\n/**/\n\n@media all and (max-width: 980px) {\n}\n\n\n',"",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAAA;EACE,UAAU;EACV,SAAS;EACT,sBAAsB;EACtB,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,iBAAiB;EACjB,YAAY;EACZ,wBAAwB;EACxB,yCAAyC;;EAEzC,aAAa;EACb,sBAAsB;EACtB,8BAA8B;EAC9B,mBAAmB;;EAEnB,kBAAkB;AACpB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,qBAAqB;EACrB,mBAAmB;EACnB,YAAY;;EAEZ,4BAA4B;AAC9B;;AAEA;EACE,UAAU;AACZ;;AAEA,GAAG;;AAEH;AACA",sourcesContent:['* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  font-size: 14px;\n  color: var(--white);\n}\n\nbody {\n  width: 100%;\n  min-height: 100vh;\n  height: 100%;\n  background: var(--black);\n  font-family: "Inter", "Arial", sans-serif;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  overflow-x: hidden;\n}\n\n.content-width {\n  width: 100%;\n}\n\na {\n  text-decoration: none;\n  color: var(--white);\n  opacity: 0.6;\n\n  transition: all 0.2s ease-in;\n}\n\na:hover {\n  opacity: 1;\n}\n\n/**/\n\n@media all and (max-width: 980px) {\n}\n\n\n'],sourceRoot:""}]);const A=i},7179:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(4015),a=t.n(o),r=t(3645),i=t.n(r)()(a());i.push([n.id,':root {\n  --black: #1C1C1C;\n  --white: whitesmoke;\n  --green: #6BD856;\n  --shadow: #131313;\n\n  --page-padding: 20px;\n  --font: "Inter", "Arial", sans-serif;\n\n  /* BUTTONS */\n  --button-font-size: 12px;\n  --black-light: #303030;\n  --button-hover-white: #dbdbdb;\n  --button-hover-primary: #4aaa37;\n  --track-button-color: #858585;\n\n  /*INPUTS*/\n  --input-border: #919191;\n}\n\n@media all and (max-width: 550px) {\n  :root {\n    --page-padding: 15px;\n  }\n}',"",{version:3,sources:["webpack://./src/styles/variables.css"],names:[],mappings:"AAAA;EACE,gBAAgB;EAChB,mBAAmB;EACnB,gBAAgB;EAChB,iBAAiB;;EAEjB,oBAAoB;EACpB,oCAAoC;;EAEpC,YAAY;EACZ,wBAAwB;EACxB,sBAAsB;EACtB,6BAA6B;EAC7B,+BAA+B;EAC/B,6BAA6B;;EAE7B,SAAS;EACT,uBAAuB;AACzB;;AAEA;EACE;IACE,oBAAoB;EACtB;AACF",sourcesContent:[':root {\n  --black: #1C1C1C;\n  --white: whitesmoke;\n  --green: #6BD856;\n  --shadow: #131313;\n\n  --page-padding: 20px;\n  --font: "Inter", "Arial", sans-serif;\n\n  /* BUTTONS */\n  --button-font-size: 12px;\n  --black-light: #303030;\n  --button-hover-white: #dbdbdb;\n  --button-hover-primary: #4aaa37;\n  --track-button-color: #858585;\n\n  /*INPUTS*/\n  --input-border: #919191;\n}\n\n@media all and (max-width: 550px) {\n  :root {\n    --page-padding: 15px;\n  }\n}'],sourceRoot:""}]);const A=i},7450:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(4015),a=t.n(o),r=t(3645),i=t.n(r)()(a());i.push([n.id,".row,\n.table__header {\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  /* padding: 10px 0; */\n  border-top: 1px solid var(--white);\n}\n\n.table__header span {\n  opacity: 0.5;\n}\n\n.row:last-child {\n  border-bottom: 1px solid var(--white);\n}\n\n.table span {\n  display: flex;\n  font-size: 14px;\n}\n\n.row__number {\n  width: 30px;\n}\n\n.row__car {\n  display: flex;\n  align-items: center;\n  flex-grow: 1;\n  margin-left: 20px;\n  gap: 5px;\n}\n\n.rows__header .span__color,\n.color__container {\n  width: 40px;\n  display: flex;\n  justify-content: center;\n}\n\n.rows__container .row__color {\n  width: 20px;\n  height: 20px;\n  border-radius: 20px;\n}\n\n.row__wins,\n.row__time {\n  width: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  margin-left: 20px;\n  gap: 5px;\n}\n","",{version:3,sources:["webpack://./src/styles/winners.css"],names:[],mappings:"AAAA;;EAEE,WAAW;EACX,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,qBAAqB;EACrB,kCAAkC;AACpC;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,qCAAqC;AACvC;;AAEA;EACE,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,YAAY;EACZ,iBAAiB;EACjB,QAAQ;AACV;;AAEA;;EAEE,WAAW;EACX,aAAa;EACb,uBAAuB;AACzB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,mBAAmB;AACrB;;AAEA;;EAEE,WAAW;EACX,aAAa;EACb,mBAAmB;EACnB,yBAAyB;EACzB,iBAAiB;EACjB,QAAQ;AACV",sourcesContent:[".row,\n.table__header {\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  /* padding: 10px 0; */\n  border-top: 1px solid var(--white);\n}\n\n.table__header span {\n  opacity: 0.5;\n}\n\n.row:last-child {\n  border-bottom: 1px solid var(--white);\n}\n\n.table span {\n  display: flex;\n  font-size: 14px;\n}\n\n.row__number {\n  width: 30px;\n}\n\n.row__car {\n  display: flex;\n  align-items: center;\n  flex-grow: 1;\n  margin-left: 20px;\n  gap: 5px;\n}\n\n.rows__header .span__color,\n.color__container {\n  width: 40px;\n  display: flex;\n  justify-content: center;\n}\n\n.rows__container .row__color {\n  width: 20px;\n  height: 20px;\n  border-radius: 20px;\n}\n\n.row__wins,\n.row__time {\n  width: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  margin-left: 20px;\n  gap: 5px;\n}\n"],sourceRoot:""}]);const A=i},3645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t=n(e);return e[2]?"@media ".concat(e[2]," {").concat(t,"}"):t})).join("")},e.i=function(n,t,o){"string"==typeof n&&(n=[[null,n,""]]);var a={};if(o)for(var r=0;r<this.length;r++){var i=this[r][0];null!=i&&(a[i]=!0)}for(var A=0;A<n.length;A++){var s=[].concat(n[A]);o&&a[s[0]]||(t&&(s[2]?s[2]="".concat(t," and ").concat(s[2]):s[2]=t),e.push(s))}},e}},4015:n=>{function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,o=new Array(e);t<e;t++)o[t]=n[t];return o}n.exports=function(n){var t,o,a=(o=4,function(n){if(Array.isArray(n))return n}(t=n)||function(n,e){var t=n&&("undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"]);if(null!=t){var o,a,r=[],i=!0,A=!1;try{for(t=t.call(n);!(i=(o=t.next()).done)&&(r.push(o.value),!e||r.length!==e);i=!0);}catch(n){A=!0,a=n}finally{try{i||null==t.return||t.return()}finally{if(A)throw a}}return r}}(t,o)||function(n,t){if(n){if("string"==typeof n)return e(n,t);var o=Object.prototype.toString.call(n).slice(8,-1);return"Object"===o&&n.constructor&&(o=n.constructor.name),"Map"===o||"Set"===o?Array.from(n):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?e(n,t):void 0}}(t,o)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),r=a[1],i=a[3];if(!i)return r;if("function"==typeof btoa){var A=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(A),c="/*# ".concat(s," */"),d=i.sources.map((function(n){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(n," */")}));return[r].concat(d).concat([c]).join("\n")}return[r].join("\n")}},1667:n=>{n.exports=function(n,e){return e||(e={}),"string"!=typeof(n=n&&n.__esModule?n.default:n)?n:(/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n)}},4643:(n,e,t)=>{t.r(e),t.d(e,{default:()=>i});var o=t(3379),a=t.n(o),r=t(3771);a()(r.Z,{insert:"head",singleton:!1});const i=r.Z.locals||{}},3379:(n,e,t)=>{var o,a=function(){var n={};return function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}n[e]=t}return n[e]}}(),r=[];function i(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function A(n,e){for(var t={},o=[],a=0;a<n.length;a++){var A=n[a],s=e.base?A[0]+e.base:A[0],c=t[s]||0,d="".concat(s," ").concat(c);t[s]=c+1;var l=i(d),p={css:A[1],media:A[2],sourceMap:A[3]};-1!==l?(r[l].references++,r[l].updater(p)):r.push({identifier:d,updater:E(p,e),references:1}),o.push(d)}return o}function s(n){var e=document.createElement("style"),o=n.attributes||{};if(void 0===o.nonce){var r=t.nc;r&&(o.nonce=r)}if(Object.keys(o).forEach((function(n){e.setAttribute(n,o[n])})),"function"==typeof n.insert)n.insert(e);else{var i=a(n.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(e)}return e}var c,d=(c=[],function(n,e){return c[n]=e,c.filter(Boolean).join("\n")});function l(n,e,t,o){var a=t?"":o.media?"@media ".concat(o.media," {").concat(o.css,"}"):o.css;if(n.styleSheet)n.styleSheet.cssText=d(e,a);else{var r=document.createTextNode(a),i=n.childNodes;i[e]&&n.removeChild(i[e]),i.length?n.insertBefore(r,i[e]):n.appendChild(r)}}function p(n,e,t){var o=t.css,a=t.media,r=t.sourceMap;if(a?n.setAttribute("media",a):n.removeAttribute("media"),r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleSheet)n.styleSheet.cssText=o;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(o))}}var u=null,g=0;function E(n,e){var t,o,a;if(e.singleton){var r=g++;t=u||(u=s(e)),o=l.bind(null,t,r,!1),a=l.bind(null,t,r,!0)}else t=s(e),o=p.bind(null,t,e),a=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)};return o(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;o(n=e)}else a()}}n.exports=function(n,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===o&&(o=Boolean(window&&document&&document.all&&!window.atob)),o));var t=A(n=n||[],e);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var o=0;o<t.length;o++){var a=i(t[o]);r[a].references--}for(var s=A(n,e),c=0;c<t.length;c++){var d=i(t[c]);0===r[d].references&&(r[d].updater(),r.splice(d,1))}t=s}}}},7840:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.WINNERS_LIMIT=e.GARAGE_LIMIT=e.ENGINE_URL=e.WINNERS_URL=e.GARAGE_URL=e.URL=void 0,e.URL="http://127.0.0.1:3000",e.GARAGE_URL=`${e.URL}/garage`,e.WINNERS_URL=`${e.URL}/winners`,e.ENGINE_URL=`${e.URL}/engine`,e.GARAGE_LIMIT=7,e.WINNERS_LIMIT=10},737:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.deleteCarAPI=e.updateCarAPI=e.createCarAPI=void 0;const o=t(7840);e.createCarAPI=async function(n){const e=await fetch(`${o.GARAGE_URL}`,{method:"POST",body:JSON.stringify(n),headers:{"Content-Type":"application/json"}});return await e.json()},e.updateCarAPI=async function(n,e){const t=await fetch(`${o.GARAGE_URL}/${n}`,{method:"PUT",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}});return await t.json()},e.deleteCarAPI=async function(n){return(await fetch(`${o.GARAGE_URL}/${n}`,{method:"DELETE"})).json()}},2304:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.deleteWinnerAPI=e.updateWinnerAPI=e.saveWinnerAPI=void 0;const o=t(7840);e.saveWinnerAPI=async function(n){const e=await fetch(`${o.WINNERS_URL}`,{method:"POST",body:JSON.stringify(n),headers:{"Content-Type":"application/json"}});return await e.json()},e.updateWinnerAPI=async function(n,e){const t=await fetch(`${o.WINNERS_URL}/${n}`,{method:"PUT",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}});return await t.json()},e.deleteWinnerAPI=async function(n){return(await fetch(`${o.WINNERS_URL}/${n}`,{method:"DELETE"})).json()}},7052:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.driveCarAPI=e.stopCarAPI=e.startCarAPI=void 0;const o=t(7840);e.startCarAPI=async function(n){const e=await fetch(`${o.ENGINE_URL}?id=${n}&status=started`,{method:"PATCH"});return await e.json()},e.stopCarAPI=async function(n){const e=await fetch(`${o.ENGINE_URL}?id=${n}&status=stopped`,{method:"PATCH"});return await e.json()},e.driveCarAPI=async function(n){const e=await fetch(`${o.ENGINE_URL}?id=${n}&status=drive`,{method:"PATCH"}).catch();return 200!==e.status?{success:!1}:{...await e.json()}}},7815:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getCarAPI=e.getCarsAPI=void 0;const o=t(7840);e.getCarsAPI=async function(n=1){const e=await fetch(`${o.GARAGE_URL}?_page=${n}&_limit=${o.GARAGE_LIMIT}`),t=await e.json(),a=e.headers.get("X-Total-Count");if(!a)throw Error("Couldn't get data from X-Total-Count header.");return{items:t,count:a}},e.getCarAPI=async function(n){const e=await fetch(`${o.GARAGE_URL}/${n}`);return await e.json()}},467:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getWinnerAPI=e.getWinnersAPI=void 0;const o=t(7840);e.getWinnersAPI=async function({page:n,sort:e="id",order:t="DESC"}){const a=`${o.WINNERS_URL}?_page=${n}&_limit=${o.WINNERS_LIMIT}&_sort=${e}&_order=${t}`,r=await fetch(a),i=await r.json(),A=r.headers.get("X-Total-Count");if(!A)throw Error("Couldn't get total winners.");return{cars:i,count:A}},e.getWinnerAPI=async function(n){const e=await fetch(`${o.WINNERS_URL}/${n}`);return await e.json()}},1769:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.renderApp=void 0;const o=t(3008),a=t(6447),r=t(7311),i=t(3518);e.renderApp=function(){const n=(0,o.createHeader)(),e=(0,r.createMain)(),t=(0,a.createFooter)(),A=(0,i.createWinPopup)();document.body.append(n,e,t,A)}},6447:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createFooter=void 0;const o=t(6479);e.createFooter=function(){const n=(0,o.createElement)("footer",[".footer"]),e=(0,o.createElement)("footer",[".footer__container"]),t=(0,o.createElement)("div",[".footer__info"]),a=(0,o.createElement)("div",[".footer__info"]),r=(0,o.createElement)("span",[],"Async Race,"),i=(0,o.createLink)("RS School (2023)","https://rs.school/"),A=(0,o.createLink)("Here East","https://github.com/HereEast");return t.append(r,i),a.append(A),e.append(t,a),n.append(e),n}},1706:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createBasicForm=void 0;const o=t(6479);e.createBasicForm=function(n){const e=(0,o.createElement)("div",[".form__container"]),t=(0,o.createInput)("text",n);t.placeholder="Car name...";const a=(0,o.createInput)("color",n);a.value="#f6b73c";const r=(0,o.createButton)(n,[`.button__${n}`]);return e.append(t,a,r),e}},7163:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createHeaderForms=e.createUpdateForm=e.createCreateForm=void 0;const o=t(6479),a=t(1706);function r(){const n=(0,o.createElement)("form",[".form__create"]),e=(0,a.createBasicForm)("create"),t=(0,o.createButton)("generate",[".button__generate"]);t.textContent="Generate Cars";const r=(0,o.createElement)("span");return n.append(e,r,t),n}function i(){const n=(0,o.createElement)("form",[".form__update"]),e=(0,a.createBasicForm)("update"),t=(0,o.createButton)("cancel",[".button__cancel"]),r=(0,o.createElement)("h2",[],"Edit car ⚙️");return e.append(t),n.append(r,e),n}e.createCreateForm=r,e.createUpdateForm=i,e.createHeaderForms=function(){const n=(0,o.createElement)("div",[".forms__container"]),e=r(),t=i();return n.append(e,t),n}},3008:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createHeader=void 0;const o=t(6479),a=t(8021),r=t(7163);e.createHeader=function(){const n=(0,o.createElement)("header",[".header"]),e=(0,o.createElement)("div",[".header__container"]),t=(0,a.createHeaderButtons)(),i=(0,r.createHeaderForms)();return e.append(t,i),n.append(e),n}},8021:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createHeaderButtons=void 0;const o=t(6479);e.createHeaderButtons=function(){const n=(0,o.createElement)("div",[".header__buttons"]),e=(0,o.createElement)("span",[".bubble"]),t=(0,o.createButton)("garage",[".button__view"]),a=(0,o.createButton)("winners",[".button__view"]);return n.append(e,t,a),n}},7311:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createMain=void 0;const o=t(6479),a=t(3865),r=t(471);e.createMain=function(){const n=(0,o.createElement)("main",[".main"]),e=(0,o.createElement)("div",[".main__container"]),t=(0,a.createViewHeader)(),i=(0,o.createElement)("div",[".view__body"]),A=(0,r.createPagination)();return e.append(t,i,A),n.append(e),n}},4403:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createCountElement=void 0;const o=t(6479);e.createCountElement=function(n=0){const e=(0,o.createElement)("div",[".view__count"]),t=(0,o.createElement)("span",[],"("),a=(0,o.createElement)("span",[],")"),r=(0,o.createElement)("span",[".count"],String(n));return e.append(t,r,a),e}},9751:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createGarageButtons=void 0;const o=t(6479);e.createGarageButtons=function(){const n=(0,o.createElement)("div",[".view__buttons"]),e=(0,o.createButton)("race",[".button__race"]),t=(0,o.createButton)("reset",[".button__reset"]);return n.append(e,t),n}},3865:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createViewHeader=void 0;const o=t(6479),a=t(4403),r=t(9751);e.createViewHeader=function(){const n=(0,o.createElement)("div",[".view__header"]),e=(0,o.createElement)("div",[".view__title"]),t=(0,o.createElement)("h2",[".title"],""),i=(0,a.createCountElement)(),A=(0,r.createGarageButtons)();return e.append(t,i),n.append(e,A),n}},471:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createPagination=void 0;const o=t(6479);e.createPagination=function(){const n=(0,o.createElement)("div",[".pagination"]),e=(0,o.createElement)("div",[".page__container"]),t=(0,o.createElement)("span",[],"Page"),a=(0,o.createElement)("span",[".page--current"],"1"),r=(0,o.createElement)("span",[],"of"),i=(0,o.createElement)("span",[".page--total"],""),A=(0,o.createElement)("div",[".pages__buttons"]),s=(0,o.createButton)("prev",[".button__prev",".button__page"]),c=(0,o.createButton)("next",[".button__next",".button__page"]);return A.append(s,c),e.append(t,a,r,i),n.append(e,A),n}},3518:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createWinPopup=void 0;const o=t(6479);e.createWinPopup=function(){const n=(0,o.createElement)("div",[".popup"]),e=(0,o.createElement)("div",[".popup__container"]),t=(0,o.createElement)("div",[".popup__content"]),a=(0,o.createElement)("span",[".popup__winner"],"Winner"),r=(0,o.createElement)("span",[".popup__message"],"won the race in "),i=(0,o.createElement)("span",[".popup__time"],"2.345 sec");return r.append(i),t.append(a,r),e.append(t),n.append(e),n}},4652:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.initListeners=e.initPagination=void 0;const o=t(3834),a=t(5751),r=t(9802),i=t(4763),A=t(61),s=t(8986),c=t(8063),d=t(5944),l=t(4111);function p(){const n=(0,o.getElement)(".button__prev"),e=(0,o.getElement)(".button__next");n.addEventListener("click",l.handlePagination),e.addEventListener("click",l.handlePagination)}e.initPagination=p,e.initListeners=function(){const n=(0,o.getElement)("#button__garage"),e=(0,o.getElement)("#button__winners"),t=(0,o.getElement)(".button__create"),l=(0,o.getElement)(".button__cancel"),u=(0,o.getElement)(".button__update"),g=(0,o.getElement)(".button__generate"),E=(0,o.getElement)(".button__reset"),m=(0,o.getElement)(".button__race");n.addEventListener("click",a.renderGarageView),e.addEventListener("click",r.renderWinnersView),t.addEventListener("click",i.handleCreateCar),l.addEventListener("click",A.cancelUpdate),u.addEventListener("click",s.handleUpdate),g.addEventListener("click",c.handleGenerate),E.addEventListener("click",d.handleReset),m.addEventListener("click",d.handleRace),p()}},6479:(n,e)=>{function t(n,e,t){const o=document.createElement(n);if(!(o instanceof HTMLElement))throw Error(`Couldn't create HTML element ${n}`);if(e?.length){const n=e.map((n=>n.slice(1)));o.classList.add(...n)}return t&&(o.textContent=t),o}Object.defineProperty(e,"__esModule",{value:!0}),e.createSVG=e.createLink=e.createInput=e.createButton=e.createElement=void 0,e.createElement=t,e.createButton=function(n,e){const o=t("button",e,n);if(!(o instanceof HTMLButtonElement))throw Error(`Couldn't create button ${n}`);if(e&&!e.includes(".button__track")){const e=`button__${n.toLowerCase()}`;o.id=e}return o},e.createInput=function(n,e){const o=t("input",[`.input-${n}`]);if(!(o instanceof HTMLInputElement))throw Error("Failed to create HTMLInput Element...");return o.id=`input-${n}__${e}`,o.type=n,o.autocomplete="off",o},e.createLink=function(n,e,o){const a=t("a",o,n);if(!(a instanceof HTMLAnchorElement))throw Error("Failed to create a <a> element...");return a.href=e,a},e.createSVG=function(n){const e=t("div",[n.divClass]),o=document.createElementNS(n.ns,"svg");return o.setAttribute("width",n.width),o.setAttribute("height",n.height),n.color&&o instanceof SVGElement&&(o.style.backgroundColor=n.color),e.append(o),e}},3834:(n,e)=>{function t(n){const e=document.querySelector(n);if(!(e&&e instanceof HTMLElement))throw Error(`${n} is not found...`);return e}Object.defineProperty(e,"__esModule",{value:!0}),e.getFormInputs=e.getElementsArray=e.getElement=e.getClosest=e.getTarget=void 0,e.getTarget=function(n){const e=n.target;if(!e)throw Error("Target element is not found...");if(!(e instanceof HTMLElement))throw Error("Target is not an HTMLElement...");return e},e.getClosest=function(n,e){const t=n.closest(e);if(!(t&&t instanceof HTMLElement))throw Error(`${e} element is not found...`);return t},e.getElement=t,e.getElementsArray=function(n){const e=Array.from(document.querySelectorAll(n));if(!e)throw Error(`${n} elements are not found...`);return e.forEach((n=>{if(!(n instanceof HTMLElement))throw Error("Elements are not an array of HTMLElement...")})),e},e.getFormInputs=function(n){const e=t(`${n} .input-text`),o=t(`${n} .input-color`);if(!(e instanceof HTMLInputElement))throw Error("Text input isn't found.");if(!(o instanceof HTMLInputElement))throw Error("Color input isn't found.");return{inputText:e,inputColor:o}}},7073:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getCurrentView=e.saveCurrentView=e.getTargetID=e.toggleDisable=e.getRandomIndex=e.cleanContent=void 0;const o=t(3834);e.cleanContent=function(n){[...(n||(0,o.getElement)(".view__body")).children].forEach((n=>{n.remove()}))},e.getRandomIndex=function(n){return Math.floor(Math.random()*n.length)},e.toggleDisable=function(n){const e=n;e instanceof HTMLButtonElement&&(e.disabled=!e.disabled)},e.getTargetID=function(n){const e=(0,o.getTarget)(n),t=(0,o.getClosest)(e,".track").id.split("--").at(-1);if(!t)throw Error("Couldn't get target ID...");return t},e.saveCurrentView=function(n="garage"){document.body.className="",document.body.classList.add(n),localStorage.setItem("view",n)},e.getCurrentView=function(){return window.localStorage.getItem("view")??""}},947:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.isEnoughSpace=e.isLastPage=e.isFirstPage=e.getCurrentPage=e.isLastTrack=void 0;const o=t(3834),a=t(7840),r=t(7073);function i(){const n=(0,r.getCurrentView)(),e=localStorage.getItem(`${n}-page`)||1;return Number(e)}e.isLastTrack=function(){return 1===(0,o.getElementsArray)(".track").length},e.getCurrentPage=i,e.isFirstPage=function(){return 1===i()},e.isLastPage=function(){const n=(0,r.getCurrentView)();return localStorage.getItem(`${n}-page`)===localStorage.getItem(`${n}-totalPages`)},e.isEnoughSpace=function(){return(0,o.getElementsArray)(".track").length<a.GARAGE_LIMIT}},1400:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.updateTotalCount=e.setTotalCount=void 0;const o=t(3834),a=t(7073);e.setTotalCount=function(n){const e=(0,a.getCurrentView)();(0,o.getElement)(".count").textContent=String(n),localStorage.setItem(`total--${e}`,String(n))},e.updateTotalCount=function(n){const e=(0,a.getCurrentView)(),t=(0,o.getElement)(".count"),r=`${Number(t.textContent)+n}`;t.textContent=r,localStorage.setItem(`total--${e}`,r)}},4111:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handlePagination=void 0;const o=t(3834),a=t(947),r=t(5751),i=t(7537),A=t(9802),s=t(7073);e.handlePagination=async function(n){const e=(0,o.getTarget)(n),t=e.id===".button__next".slice(1),c=e.id===".button__prev".slice(1);if(t&&(0,a.isLastPage)()||c&&(0,a.isFirstPage)())return;const d=(0,a.getCurrentPage)(),l=t?d+1:d-1;if("garage"===(0,s.getCurrentView)())await(0,r.updateGarage)(l);else{const n=(0,i.getCurrentSort)(),{sort:e,order:t}=(0,i.getSortOrder)(n);await(0,A.updateWinners)({page:l,sort:e,order:t})}}},1593:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.setPagination=e.togglePageButtons=e.setCurrentPage=e.setTotalPages=e.getTotalPages=void 0;const o=t(7840),a=t(3834),r=t(947),i=t(736),A=t(7073);function s(){const n=(0,A.getCurrentView)(),e=Number(localStorage.getItem(`total--${n}`));return"garage"===n?Math.ceil(e/o.GARAGE_LIMIT):Math.ceil(e/o.WINNERS_LIMIT)}function c(){const n=(0,A.getCurrentView)(),e=(0,a.getElement)(".page--total"),t=String(s());e.textContent=t,localStorage.setItem(`${n}-totalPages`,t)}function d(n){const e=(0,A.getCurrentView)(),t=n||1;(0,a.getElement)(".page--current").textContent=String(t),localStorage.setItem(`${e}-page`,String(t))}function l(){(0,i.disableButton)("page",!1),1===(0,r.getCurrentPage)()&&(0,i.disableButton)("prev",!0),(0,r.isLastPage)()&&(0,i.disableButton)("next",!0)}e.getTotalPages=s,e.setTotalPages=c,e.setCurrentPage=d,e.togglePageButtons=l,e.setPagination=function(n){d(n),c(),l()}},586:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.toggleViewButton=void 0;const o=t(3834);e.toggleViewButton=function(n){const e=(0,o.getElement)(".bubble"),t=(0,o.getElementsArray)(".button__view");t.forEach((n=>n.classList.remove("active")));const a=t.find((e=>e.id===`button__${n}`));if(!a)throw Error("Couldn't find a View Button.");a.classList.add("active"),a.textContent?.includes("garage")?e.classList.remove("winners"):e.classList.add("winners")}},2612:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.toggleUIElements=e.togglePageTitle=e.toggleFormsDisplay=void 0;const o=t(3834),a=t(586);function r(n){const e=(0,o.getElement)(".forms__container");"garage"===n?e.classList.remove(".forms--hidden".slice(1)):e.classList.add(".forms--hidden".slice(1))}function i(n,e=0){(0,o.getElement)(".title").textContent=`${n[0].toUpperCase()}${n.slice(1)}`,(0,o.getElement)(".count").textContent=String(e);const t=(0,o.getElement)(".view__buttons");"winners"===n?t.classList.add("hidden"):t.classList.remove("hidden")}e.toggleFormsDisplay=r,e.togglePageTitle=i,e.toggleUIElements=function(n){(0,a.toggleViewButton)(n),r(n),i(n)}},4763:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleCreateCar=void 0;const o=t(3834),a=t(737),r=t(1593),i=t(1400),A=t(5568),s=t(947);e.handleCreateCar=async function(n){n.preventDefault();const{inputText:e,inputColor:t}=(0,o.getFormInputs)(".form__create"),c=e.value,d=t.value;if(!c)return void e.focus();const l=await(0,a.createCarAPI)({name:c,color:d});(0,s.isLastPage)()&&(0,s.isEnoughSpace)()&&(0,A.appendTrack)(l),(0,i.updateTotalCount)(1),(0,r.setTotalPages)(),(0,r.togglePageButtons)(),e.value="",console.log("Create:",localStorage)}},7300:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.carMakes=void 0,e.carMakes=[{make:"BMW",models:["M3","M5","M5 CS","i4 M50 xDrive","X6 M","M8 Competition","Z4 M40i"]},{make:"Porsche",models:["Sally Special","Cayman S","Cayman Spyder RS","Carrera","Carrera 4S","Carrera GTS","911 Turbo","Taycan GTS","Panamera 4S","Cayenne Turbo GT"]},{make:"Mercedes",models:["SL 63 Roadster","GLE 53 Coupe","CLA 35 Coupe","GT 43 Coupe","AMG One","S-Class","CLS"]},{make:"Dodge",models:["Charger R/T","Challenger SRT-8","Charger Hellacious"]},{make:"Ferrari",models:["GTS","SF90 Spider","Roma"]},{make:"Lamborghini",models:["Auténtica","SC20 Roadster","Urus Performante","Huracán","Revuelto"]},{make:"Bugatti",models:["Chiron Profilée","Chiron","Mistral","Centodieci","Veyron","EB110 SS"]},{make:"McLaren",models:["X-1","MSO R","GT","600LT","750S","765LT","Artura"]},{make:"Jaguar",models:["F-Type R75","XF","I-Pace"]},{make:"Maserati",models:["Ghibli GT","MC20"]},{make:"Aston Martin",models:["Victor","Vantage GT12","V8 Vantage","DBS Volante"]},{make:"Ford",models:["F-150 Raptor","Mustang","Bronco Raptor"]}]},8063:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleGenerate=e.generateCars=void 0;const o=t(737),a=t(3340),r=t(9956),i=t(5751),A=t(947),s=t(1593),c=t(1400);async function d(n){if(n>0){const e=(0,r.getRandomMake)(),t=(0,a.getRandomColor)();await(0,o.createCarAPI)({name:e,color:t}),await d(n-1)}}e.generateCars=d,e.handleGenerate=async function(n){if(n.preventDefault(),await d(100),(0,A.isEnoughSpace)()){const n=(0,A.getCurrentPage)();await(0,i.updateGarage)(n)}else(0,c.updateTotalCount)(100),(0,s.setTotalPages)(),(0,s.togglePageButtons)();console.log("Generate:",localStorage)}},3340:(n,e)=>{function t(){return Math.ceil(255*Math.random()).toString(16).padStart(2,"0")}Object.defineProperty(e,"__esModule",{value:!0}),e.getRandomColor=e.getColorValue=void 0,e.getColorValue=t,e.getRandomColor=function(){return`#${t()}${t()}${t()}`}},9956:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getRandomMake=void 0;const o=t(7300),a=t(7073);e.getRandomMake=function(){const n=(0,a.getRandomIndex)(o.carMakes),{make:e,models:t}=o.carMakes[n];return`${e} ${t[(0,a.getRandomIndex)(t)]}`}},1272:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.startAnimation=e.controlDrive=e.race=e.animation=void 0;const o=t(7052),a=t(736),r=t(3834),i=t(7599);async function A(n){const{success:t}=await(0,o.driveCarAPI)(Number(n));return t?(console.log("Finish!",n),cancelAnimationFrame(e.animation.id)):cancelAnimationFrame(e.animation.id),t}e.animation={id:0},e.race={winner:{id:"",time:0},isRace:!1,reset:!1},e.controlDrive=A,e.startAnimation=async function(n){const t=(0,r.getElement)(`#car--${n}`),o=await(0,a.getDriveTime)(n),s=(0,a.getDistance)()-40,c=o/1e3*80;let d=t.offsetLeft;const l=(s-d)/c;!function a(){d+=l,t.style.transform=`translate(${d}px)`,d<=s&&(e.animation.id=requestAnimationFrame(a)),d>=s&&(console.log("Finish data:",e.race.winner,e.race.isRace),!e.race.winner.id&&e.race.isRace&&(0,i.handleWinner)(n,o),t.style.transform=`translate(${s}px)`)}(),await A(n)}},5944:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleRace=e.handleReset=e.handleStop=e.stopCar=e.handleStart=e.someCar=void 0;const o=t(7073),a=t(7052),r=t(3834),i=t(736),A=t(1272),s=t(947),c=t(5751),d=t(1593),l=t(7047);async function p(n){const e=(0,r.getElement)(`#car--${n}`);e.style.transform="translate(0px)",await(0,a.stopCarAPI)(n),e.classList.remove(".car--driving".slice(1))}e.someCar={isMoving:!1},e.handleStart=async function(n){const t=(0,o.getTargetID)(n),a=(0,r.getElement)(`#car--${t}`);a.classList.contains(".car--driving".slice(1))||(a.classList.add(".car--driving".slice(1)),e.someCar.isMoving=!0,(0,A.startAnimation)(t),(0,i.toggleControls)(n))},e.stopCar=p,e.handleStop=async function(n){const t=Number((0,o.getTargetID)(n));e.someCar.isMoving=!1,cancelAnimationFrame(A.animation.id),await p(t),(0,i.toggleControls)(n)},e.handleReset=async function(n){n.preventDefault(),(0,i.cleanWinner)(),(0,i.moveToStart)(),cancelAnimationFrame(A.animation.id),(0,i.disableButtons)(["race","create","generate"],!1);const e=(0,s.getCurrentPage)();await(0,c.updateGarage)(e),console.log("Reset")},e.handleRace=async function(n){n.preventDefault(),(0,i.cleanWinner)(),(0,i.moveToStart)(),cancelAnimationFrame(A.animation.id),A.race.isRace=!0;const e=["race","start","edit","delete","page","create","generate"];(0,i.disableButtons)(e,!0);const t=(0,i.getCarsIds)().map((async n=>await(0,A.startAnimation)(n)));await Promise.all(t),(0,l.hidePopup)(),(0,i.disableButtons)(e,!1),(0,d.togglePageButtons)(),A.race.isRace=!1,console.log("Race",A.race.isRace)}},736:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.disableButtons=e.disableButton=e.getCarsIds=e.toggleControls=e.getSiblingButton=e.getDistance=e.getDriveTime=e.moveToStart=e.cleanWinner=void 0;const o=t(7052),a=t(3834),r=t(7073),i=t(1272);function A(n){const e=n.classList.contains(".button__stop".slice(1))?n.previousElementSibling:n.nextElementSibling;if(!(e instanceof HTMLButtonElement))throw Error("Couldn't find a sibling button...");return e}function s(n,e){[...(0,a.getElementsArray)(`.button__${n}`)].forEach((n=>{n instanceof HTMLButtonElement&&(n.disabled=e)}))}e.cleanWinner=function(){i.race.winner.id="",i.race.winner.time=0,i.race.isRace=!1},e.moveToStart=function(){[...(0,a.getElementsArray)(".car")].forEach((n=>{n.style.transform="translate(0px)"}))},e.getDriveTime=async function(n){const e=await(0,o.startCarAPI)(Number(n));return e.distance/e.velocity},e.getDistance=function(){const n=document.body.clientWidth;return n-(n>550?40:30)},e.getSiblingButton=A,e.toggleControls=function(n){const e=(0,a.getTarget)(n),t=A(e);(0,r.toggleDisable)(e),(0,r.toggleDisable)(t)},e.getCarsIds=function(){const n=[...(0,a.getElementsArray)(".track")].map((n=>n.id.split("--").at(-1)||""));if(!n.length)throw Error("Can't get current cars' ids.");return n},e.disableButton=s,e.disableButtons=function(n,e){n.forEach((n=>{s(n,e)}))}},5689:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getSelectedCar=void 0,e.getSelectedCar=function(){const n=localStorage.getItem("editItem");if(!n)throw Error("Couldn't get 'editItem' from Local Storage.");return JSON.parse(n)}},7833:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.hideUpdateForm=e.showUpdateForm=e.setUpdateInputs=void 0;const o=t(3834);function a(n){const{inputText:e,inputColor:t}=(0,o.getFormInputs)(".form__update");e.value=n.name,t.value=n.color}e.setUpdateInputs=a,e.showUpdateForm=function(n){a(n),console.log(n);const e=(0,o.getElement)(".form__update");e.classList.add(".form__update--open".slice(1)),e.dataset.editId=String(n.id)},e.hideUpdateForm=function(n){const e=(0,o.getTarget)(n);e.classList.contains("button__edit")||"BUTTON"===e.tagName&&(0,o.getElement)(".form__update").classList.remove(".form__update--open".slice(1))}},8986:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleUpdate=void 0;const o=t(3834),a=t(7833),r=t(737),i=t(5626),A=t(5689);e.handleUpdate=async function(n){n.preventDefault();const{inputText:e,inputColor:t}=(0,o.getFormInputs)(".form__update"),s=(0,A.getSelectedCar)();if(!e.value.trim())return void e.focus();if(e.value===s.name&&t.value===s.color)return void(0,a.hideUpdateForm)(n);const c=s.id,d={name:e.value,color:t.value};await(0,r.updateCarAPI)(c,d),(0,i.updateCarUI)(c,d),(0,a.hideUpdateForm)(n)}},61:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.cancelUpdate=e.startUpdate=void 0;const o=t(7073),a=t(7815),r=t(7833);e.startUpdate=async function(n){const e=(0,o.getTargetID)(n),t=await(0,a.getCarAPI)(e);(0,r.showUpdateForm)(t),localStorage.setItem("editItem",JSON.stringify(t))},e.cancelUpdate=function(n){n.preventDefault(),(0,r.hideUpdateForm)(n),localStorage.setItem("editItem","")}},5626:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.updateCarUI=void 0,e.updateCarUI=function(n,e){const t=document.getElementById(`track--${n}`),o=t?.querySelector(`#car--${n} svg`),a=t?.querySelector(".car__name");if(!(o&&o instanceof SVGElement))throw Error("Couldn't get car SVG element.");if(!a)throw Error("Couldn't get a span with car name.");o.style.backgroundColor=e.color,a.textContent=e.name}},7047:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.showPopup=e.hidePopup=void 0;const o=t(3834);e.hidePopup=function(n){(n||(0,o.getElement)(".popup")).classList.remove(".popup--open".slice(1))},e.showPopup=function(n){const e=(0,o.getElement)(".popup"),t=(0,o.getElement)(".popup__winner"),a=(0,o.getElement)(".popup__time"),r=(0,o.getElement)(`#car__name--${n.id}`).textContent,i=Number(n.time/1e3).toFixed(2);t.textContent=r,a.textContent=`${i} sec`,e.classList.add(".popup--open".slice(1))}},5751:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.renderGarageView=e.updateGarage=void 0;const o=t(7815),a=t(2612),r=t(947),i=t(1593),A=t(7073),s=t(1400),c=t(5568);async function d(n){const e=await(0,o.getCarsAPI)(n);(0,c.appendTracks)(e),(0,s.setTotalCount)(e.count),(0,i.setPagination)(n),console.log(e)}e.updateGarage=d,e.renderGarageView=async function(n){if(n&&"garage"===(0,A.getCurrentView)())return;(0,A.saveCurrentView)("garage"),(0,a.toggleUIElements)("garage");const e=(0,r.getCurrentPage)();await d(e),console.log("🙂 Garage View")}},7744:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createTrackButtons=e.handleDelete=void 0;const o=t(6479),a=t(737),r=t(5751),i=t(7073),A=t(61),s=t(947),c=t(5944),d=t(7833),l=t(2304);async function p(n){if(1===(0,s.getCurrentPage)()&&(0,s.isLastTrack)())return;const e=(0,i.getTargetID)(n);await(0,a.deleteCarAPI)(e),await(0,l.deleteWinnerAPI)(e);const t=(0,s.getCurrentPage)(),o=(0,s.isLastTrack)()?t-1:t;await(0,r.updateGarage)(o),(0,d.hideUpdateForm)(n),console.log("Delete")}e.handleDelete=p,e.createTrackButtons=function(){const n=(0,o.createElement)("div",[".track__buttons"]),e=(0,o.createButton)("start",[".button__track",".button__start"]),t=(0,o.createButton)("stop",[".button__track",".button__stop"]),a=(0,o.createButton)("edit",[".button__track",".button__edit"]),r=(0,o.createButton)("delete",[".button__track",".button__delete"]);return a.addEventListener("click",(async n=>{await(0,A.startUpdate)(n)})),r.addEventListener("click",(async n=>{await p(n)})),e.addEventListener("click",(async n=>{await(0,c.handleStart)(n)})),t.addEventListener("click",(async n=>{await(0,c.handleStop)(n)})),t.disabled=!0,n.append(e,t,a,r),n}},5568:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.appendTracks=e.appendTrack=void 0;const o=t(3834),a=t(7073),r=t(3517);e.appendTrack=function(n){const e=(0,o.getElement)(".view__body"),t=(0,r.createTrack)(n);e.append(t)},e.appendTracks=function(n){const e=(0,o.getElement)(".view__body");return(0,a.cleanContent)(e),[...n.items].forEach((n=>{const t=(0,r.createTrack)(n);e.append(t)})),e}},3517:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createTrack=e.createTrackBody=e.createTrackHeader=void 0;const o=t(6479),a=t(7744),r="40px";function i(n){const e=(0,o.createElement)("div",[".track__header"]),t=(0,a.createTrackButtons)(),r=(0,o.createElement)("span",[".car__name"],n.name);return r.id=`${".car__name".slice(1)}--${n.id}`,e.append(t,r),e}function A(n){const e=(0,o.createElement)("div",[".track__body"]),t={divClass:".car",ns:"http://www.w3.org/2000/svg",width:r,height:r,color:n.color},a=(0,o.createSVG)(t);a.id=`car--${n.id}`;const i=(0,o.createElement)("div",[".flag"]);return e.append(a,i),e}e.createTrackHeader=i,e.createTrackBody=A,e.createTrack=function(n){const e=(0,o.createElement)("div",[".track"]);e.id=`track--${n.id}`;const t=(0,o.createElement)("div",[".track__container"]),a=i(n),r=A(n);return t.append(a,r),e.append(t),e}},7599:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleWinner=void 0;const o=t(1272),a=t(7047),r=t(2304),i=t(467);e.handleWinner=async function(n,e){if(o.race.winner.id)return;const t={id:Number(n),win:1,time:Number(Math.floor(e))},A=await(0,i.getWinnerAPI)(n);if(A.id){const t=A.time>e?A.time:e,o=A.win+1;await(0,r.updateWinnerAPI)(n,{win:o,time:t})}else await(0,r.saveWinnerAPI)(t);o.race.winner.id=n,o.race.winner.time=e,(0,a.showPopup)(o.race.winner)}},9802:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.renderWinnersView=e.updateWinners=void 0;const o=t(7073),a=t(2612),r=t(947),i=t(467),A=t(2826),s=t(1400),c=t(7537),d=t(1593);async function l(n){const{cars:e,count:t}=await(0,i.getWinnersAPI)(n);await(0,A.renderWinnersTable)(e),(0,s.setTotalCount)(t);const o=Number(n.page);(0,d.setPagination)(o),console.log(localStorage)}e.updateWinners=l,e.renderWinnersView=async function(n){if(n&&"winners"===(0,o.getCurrentView)())return;(0,o.saveCurrentView)("winners"),(0,a.toggleUIElements)("winners");const e=(0,r.getCurrentPage)(),t=(0,c.getCurrentSort)(),{sort:i,order:A}=(0,c.getSortOrder)(t);await l({page:e,sort:i,order:A}),console.log("🙂 Winner View")}},7537:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getCurrentSort=e.saveSortOption=e.getSortOrder=void 0,e.getSortOrder=function(n){return{sort:n,order:localStorage.getItem(`sort--${n}`)||"DESC"}},e.saveSortOption=function(n,e){localStorage.setItem(`sort--${n}`,e),localStorage.setItem("currentSort",n)},e.getCurrentSort=function(){return localStorage.getItem("currentSort")||"id"}},3681:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.sortWinners=void 0;const o=t(947),a=t(7537),r=t(9802);e.sortWinners=async function(n){const{sort:e,order:t}=(0,a.getSortOrder)(n),i="DESC"===t?"ASC":"DESC",A=(0,o.getCurrentPage)();(0,a.saveSortOption)(e,i),await(0,r.updateWinners)({page:A,sort:e,order:i})}},8525:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.orderRows=void 0;const o=t(3834),a=t(947);e.orderRows=function(){setTimeout((function(){const n=(0,o.getElementsArray)(".rows__container .row__number"),e=(0,a.getCurrentPage)();n.forEach(((n,t)=>{const o=10*(e-1)+1+t;n.textContent=`${o}`}))}),100)}},2826:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.renderWinnersTable=e.appendRows=void 0;const o=t(7815),a=t(6479),r=t(3834),i=t(7073),A=t(4794),s=t(595),c=t(8525),d=t(1400);async function l(n){const e=(0,a.createElement)("div",[".rows__container"]);return n.forEach((async n=>{const t=await(0,o.getCarAPI)(String(n.id));if(!t.id)return void(0,d.updateTotalCount)(-1);const a={color:t.color,name:t.name,id:t.id,win:n.win,time:Number((n.time/1e3).toFixed(2))},r=(0,s.createRow)(a);e.append(r)})),e}e.appendRows=l,e.renderWinnersTable=async function(n){const e=(0,r.getElement)(".view__body");(0,i.cleanContent)(e);const t=(0,a.createElement)("div",[".table"]),o=(0,A.createTableHeader)(),s=await l(n);return(0,c.orderRows)(),t.append(o,s),e.append(t),e}},4794:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createTableHeader=void 0;const o=t(6479),a=t(3681);e.createTableHeader=function(){const n=(0,o.createElement)("div",[".table__header"]),e=(0,o.createElement)("span",[".row__number"],"#"),t=(0,o.createElement)("span",[".row__color"],"Color"),r=(0,o.createElement)("div",[".row__car"]),i=(0,o.createElement)("span",[],"Car"),A=(0,o.createElement)("div",[".row__wins"]),s=(0,o.createElement)("span",[],"Wins"),c=(0,o.createButton)("sort--wins",[".button__sort--wins"]);c.textContent="";const d=(0,o.createElement)("div",[".row__time"]),l=(0,o.createElement)("span",[],"Time"),p=(0,o.createButton)("sort--time",[".button__sort--time"]);return p.textContent="",p.addEventListener("click",(async()=>{await(0,a.sortWinners)("time")})),c.addEventListener("click",(async()=>{await(0,a.sortWinners)("wins")})),r.append(i),A.append(s,c),d.append(l,p),n.append(e,t,r,A,d),n}},595:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createRow=void 0;const o=t(6479);e.createRow=function(n){const e=(0,o.createElement)("div",[".row"]);e.id=`row--${n.id}`;const t=(0,o.createElement)("span",[".row__number"]),a=(0,o.createElement)("div",[".color__container"]),r=(0,o.createElement)("span",[".row__color"]);a.append(r);const i=(0,o.createElement)("span",[".row__car"],n.name),A=(0,o.createElement)("span",[".row__wins"],String(n.win)),s=(0,o.createElement)("span",[".row__time"],String(n.time));return r.style.backgroundColor=n.color,e.append(t,a,i,A,s),e}},6191:(n,e,t)=>{n.exports=t.p+"f184225b7b3184f4baf5.svg"},6140:(n,e,t)=>{n.exports=t.p+"fe22c9f7a75c10f13ff7.svg"},3233:(n,e,t)=>{n.exports=t.p+"69984fd172bcf5b02d1e.svg"},5960:(n,e,t)=>{n.exports=t.p+"3d70b8debbefafdfc11c.svg"},5197:(n,e,t)=>{n.exports=t.p+"87743b742844cc6930c4.svg"}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var r=e[o]={id:o,exports:{}};return n[o](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");if(o.length)for(var a=o.length-1;a>-1&&!n;)n=o[a--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{t(4643);const n=t(1769),e=t(4652),o=t(9802);(0,n.renderApp)(),(0,o.renderWinnersView)(),window.addEventListener("DOMContentLoaded",(()=>{(0,e.initListeners)()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,